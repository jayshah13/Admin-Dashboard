{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { valueToCoefficient, inside, isOverlap, textTrim } from '../../common/utils/helper';\nimport { appendChildElement } from '../../common/utils/helper';\nimport { CircleOption } from '../../common/utils/helper';\nimport { Size, measureText, TextOption, PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from '../series/line-base';\nimport { textElement, ChartLocation, valueToPolarCoefficient, CoefficientToVector, getElement } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\n\nvar PolarRadarPanel =\n/** @class */\nfunction (_super) {\n  __extends(PolarRadarPanel, _super);\n\n  function PolarRadarPanel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n\n\n    _this.visibleAxisLabelRect = [];\n    return _this;\n  }\n  /**\n   * Measure the polar radar axis size.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measureAxis = function (rect) {\n    var chart = this.chart;\n    this.initialClipRect = rect;\n    this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height); //Measure axis size calculation\n\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.calculateAxisSize();\n  };\n\n  PolarRadarPanel.prototype.measureRowAxis = function (chart, rect) {\n    this.calculateRowSize(rect);\n    var row = chart.rows[0];\n    this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n  };\n\n  PolarRadarPanel.prototype.measureColumnAxis = function (chart, rect) {\n    this.calculateColumnSize(rect);\n    var column = chart.columns[0];\n    this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n  };\n  /**\n   * Measure the column and row in chart.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measureDefinition = function (definition, chart, size) {\n    for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      axis.getModule(chart);\n      axis.baseModule.calculateRangeAndInterval(size, axis);\n    }\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.calculateAxisSize = function () {\n    var chart = this.chart;\n    var axis;\n    var padding = 5;\n    this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n    this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n    chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding - chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n    chart.radius = chart.primaryXAxis.coefficient * chart.radius / 100;\n    this.seriesClipRect.y = this.centerY - chart.radius;\n    this.seriesClipRect.x = this.centerX - chart.radius;\n    this.seriesClipRect.height = 2 * chart.radius;\n    this.seriesClipRect.width = 2 * chart.radius;\n    this.calculateRowSize(this.seriesClipRect);\n    axis = chart.primaryYAxis;\n    axis.rect = this.seriesClipRect;\n    this.calculateColumnSize(this.seriesClipRect);\n    axis = chart.primaryXAxis;\n    axis.rect = this.seriesClipRect;\n  };\n  /**\n   * Measure the axis.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measure = function () {\n    var chart = this.chart;\n    var yAxis = chart.primaryYAxis;\n    yAxis.isRTLEnabled = chart.enableRtl;\n    yAxis.setIsInversedAndOpposedPosition(true);\n    chart.verticalAxes.push(yAxis);\n    var row = chart.rows[0];\n    row.axes[0] = yAxis;\n    chart.rows[0] = row;\n    var xAxis = chart.primaryXAxis;\n    xAxis.isRTLEnabled = chart.enableRtl;\n    xAxis.setIsInversedAndOpposedPosition(true);\n    chart.horizontalAxes.push(xAxis);\n    var column = chart.columns[0];\n    column.axes[0] = xAxis;\n    chart.columns[0] = column;\n  };\n  /**\n   * Measure the row size.\n   *\n   * @returns {void}\n   */\n\n\n  PolarRadarPanel.prototype.calculateRowSize = function (rect) {\n    /*! Calculate row size */\n    var chart = this.chart;\n    var row = chart.rows[0];\n    row.computedHeight = rect.height / 2;\n    row.computedTop = rect.y;\n    chart.rows[0] = row;\n  };\n  /**\n   * Measure the row size.\n   *\n   * @returns {void}\n   */\n\n\n  PolarRadarPanel.prototype.calculateColumnSize = function (rect) {\n    /*! Calculate column size */\n    var chart = this.chart;\n    var column = chart.columns[0];\n    column.computedLeft = rect.x;\n    column.computedWidth = rect.width;\n    chart.columns[0] = column;\n  };\n  /**\n   * To render the axis element.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.renderAxes = function () {\n    var axis;\n    var chart = this.chart;\n    this.startAngle = chart.primaryXAxis.startAngle;\n    var axisElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisCollection'\n    });\n    var axisLineElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisOutsideCollection'\n    });\n\n    for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n      this.element = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i\n      });\n      axis = chart.axisCollections[i];\n\n      if (axis.orientation === 'Horizontal') {\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n          this.drawXAxisGridLine(axis, i);\n        }\n\n        if (axis.visible && axis.internalVisibility) {\n          this.drawXAxisLabels(axis, i);\n        }\n      } else {\n        this.drawYAxisGridLine(axis, i);\n\n        if (axis.lineStyle.width > 0) {\n          this.drawYAxisLine(axis, i);\n        }\n\n        if (axis.visible && axis.internalVisibility) {\n          this.drawYAxisLabels(axis, i);\n        }\n      }\n\n      axisElement.appendChild(this.element);\n    }\n\n    axisElement.appendChild(this.element);\n    appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n    return axisLineElement;\n  };\n\n  PolarRadarPanel.prototype.drawYAxisLine = function (axis, index) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n    var axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' + (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n    optionsLine = {\n      'id': chart.element.id + 'AxisLine_' + index,\n      'd': axisLine,\n      'stroke-dasharray': axis.lineStyle.dashArray,\n      'stroke-width': axis.lineStyle.width,\n      'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n    };\n    /**\n     * I252450\n     * When we click the center of the marker which is plotted in the axis line, selection did not work is fixed\n     * Cause: Instead of marker id, axis  line id is obtained while clicking\n     * Fix: Pointer events set to none for axis lines\n     */\n\n    var element = chart.renderer.drawPath(optionsLine);\n    this.setPointerEventNone(element);\n    chart.yAxisElements.appendChild(element);\n  };\n\n  PolarRadarPanel.prototype.drawYAxisLabels = function (axis, index) {\n    var chart = this.chart;\n    var elementSize;\n    var options;\n    var pointX = 0;\n    var pointY = 0;\n    var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n    var anchor = 'middle';\n    var radius;\n    var padding = 5;\n    var isIntersect;\n    var labelRegions = [];\n    var isLabelVisible = [];\n    isLabelVisible[0] = true;\n    var intersectType = axis.labelIntersectAction;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isIntersect = false;\n      radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n      elementSize = axis.visibleLabels[i].size;\n      radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n      pointX = this.centerX + radius * vector.x + (axis.majorTickLines.height + elementSize.width / 2 + padding / 2) * Math.cos(angle * Math.PI / 180) * (axis.labelPosition === 'Inside' ? 1 : -1);\n      pointY = this.centerY + radius * vector.y + (axis.majorTickLines.height + elementSize.height / 2) * Math.sin(angle * Math.PI / 180) * (axis.labelPosition === 'Inside' ? 1 : -1);\n      pointY += elementSize.height / 4;\n      labelRegions[i] = this.getLabelRegion(pointX, pointY, axis.visibleLabels[i], anchor);\n\n      if (i !== 0 && intersectType === 'Hide') {\n        for (var j = i; j >= 0; j--) {\n          j = j === 0 ? 0 : j === i ? j - 1 : j;\n\n          if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n            isIntersect = true;\n            isLabelVisible[i] = false;\n            break;\n          } else {\n            isLabelVisible[i] = true;\n          }\n        }\n\n        if (isIntersect) {\n          continue; // If the label is intersect, the label render is ignored.\n        } // To check Y axis label with visible X axis label\n\n\n        for (var _i = 0, _a = this.visibleAxisLabelRect; _i < _a.length; _i++) {\n          var rect = _a[_i];\n\n          if (isOverlap(labelRegions[i], rect)) {\n            isIntersect = true;\n            break;\n          }\n        }\n      }\n\n      if (isIntersect) {\n        continue;\n      }\n\n      this.visibleAxisLabelRect.push(labelRegions[i]);\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n      textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n    }\n\n    chart.yAxisElements.appendChild(labelElement);\n  };\n\n  PolarRadarPanel.prototype.drawYAxisGridLine = function (axis, index) {\n    var chart = this.chart;\n    var options;\n    var radius;\n    var majorTick = '';\n    var majorGrid = '';\n    var vector;\n    var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var border = {\n      color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n      width: axis.majorGridLines.width\n    };\n    var previousValue;\n    var element;\n\n    if (axis.majorGridLines.width > 0) {\n      if (chart.visibleSeries[0].type === 'Polar') {\n        for (var j = 0; j < axis.visibleLabels.length; j++) {\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n          previousValue = element ? element.getAttribute('r') : null;\n          radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n          options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n        }\n\n        if (radius !== chart.radius) {\n          options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length + 1, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, chart.radius);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n        }\n      } else {\n        for (var j = 0; j < axis.visibleLabels.length; j++) {\n          radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n          majorGrid = this.renderRadarGrid(radius, '', chart);\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n          previousValue = element ? element.getAttribute('d') : null;\n          options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n        }\n\n        if (radius !== chart.radius) {\n          majorGrid = this.renderRadarGrid(chart.radius, '', chart);\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length);\n          previousValue = element ? element.getAttribute('d') : null;\n          options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n        }\n      }\n    }\n\n    if (axis.majorTickLines.width > 0) {\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n\n      for (var i = 0; i < axis.visibleLabels.length; i++) {\n        radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n        x1 = this.centerX + radius * vector.x;\n        y1 = this.centerY + radius * vector.y;\n        x2 = x1 + axis.majorTickLines.height * Math.cos(angle * Math.PI / 180) * (axis.tickPosition === 'Inside' ? 1 : -1);\n        y2 = y1 + axis.majorTickLines.height * Math.sin(angle * Math.PI / 180) * (axis.tickPosition === 'Inside' ? 1 : -1);\n        majorTick = 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n        this.renderTickLine(axis, index, majorTick, '', i);\n      }\n    }\n  };\n\n  PolarRadarPanel.prototype.renderRadarGrid = function (radius, majorGrid, chart) {\n    var vector;\n    var vector2;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n\n    for (var i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n      vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n\n      if (i + 1 < len) {\n        vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n      } else {\n        vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n      }\n\n      x1 = this.centerX + radius * vector.x;\n      y1 = this.centerY + radius * vector.y;\n      x2 = this.centerX + radius * vector2.x;\n      y2 = this.centerY + radius * vector2.y;\n      majorGrid = majorGrid.concat((i ? 'L ' : 'M ') + ' ' + x1 + ' ' + y1 + ' ' + 'L ' + ' ' + x2 + ' ' + y2 + ' ');\n    }\n\n    return majorGrid;\n  };\n\n  PolarRadarPanel.prototype.drawXAxisGridLine = function (axis, index) {\n    var chart = this.chart;\n    var tempInterval;\n    var vector;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorGirdLine = '';\n    var minorTickLine = '';\n    var x1 = this.centerX;\n    var x2;\n    var y1 = this.centerY;\n    var y2;\n    var minorDirection;\n    var length = axis.visibleLabels.length; //Gridlines\n\n    for (var i = 0; i < length; i++) {\n      tempInterval = axis.visibleLabels[i].value;\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n      x2 = this.centerX + chart.radius * vector.x;\n      y2 = this.centerY + chart.radius * vector.y;\n      var xLoc = x2 + axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1);\n      var yLoc = y2 + axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1);\n      majorGrid = 'M ' + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2;\n      majorTick = 'M ' + x2 + ' ' + y2 + ' L ' + xLoc + ' ' + yLoc;\n\n      if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0) && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n        minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n        minorGirdLine = minorDirection[0];\n        minorTickLine = minorDirection[1];\n      }\n\n      this.renderTickLine(axis, index, majorTick, minorTickLine, i);\n      this.renderGridLine(axis, index, majorGrid, minorGirdLine, i);\n    }\n  };\n\n  PolarRadarPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, minorGird, minorTick) {\n    var value = tempInterval;\n    var x;\n    var y;\n    var vector;\n    var range = axis.visibleRange;\n    var direction = [];\n\n    for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n      value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) / (axis.minorTicksPerInterval + 1);\n\n      if (inside(value, range)) {\n        vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n        x = this.centerX + this.chart.radius * vector.x;\n        y = this.centerY + this.chart.radius * vector.y;\n        var tickXSize = x + axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1);\n        var tickYSize = y + axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1);\n        minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY + 'L ' + x + ' ' + y);\n        minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + tickXSize + ' ' + tickYSize);\n      }\n    }\n\n    direction.push(minorGird);\n    direction.push(minorTick);\n    return direction;\n  };\n  /**\n   * To render the axis label.\n   *\n   * @param {Axis} axis axis\n   * @param {number} index index\n   * @returns {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.drawXAxisLabels = function (axis, index) {\n    this.visibleAxisLabelRect = [];\n    var legendRect;\n\n    if (this.chart.legendModule) {\n      legendRect = this.chart.legendModule.legendBounds;\n    }\n\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var options;\n    var vector;\n    var labelText;\n    var firstLabelX;\n    var islabelInside = axis.labelPosition === 'Inside';\n    var padding = 5;\n    var lastLabelX;\n    var label;\n    var textAnchor = '';\n    var isIntersect;\n    var labelRegions = [];\n    var isLabelVisible = [];\n    isLabelVisible[0] = true;\n    var intersectType = axis.labelIntersectAction;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var radius = chart.radius + axis.majorTickLines.height;\n    radius = islabelInside ? -radius : radius;\n\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isIntersect = false;\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n\n      if (!isNaN(vector.x) && !isNaN(vector.y)) {\n        pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n        pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n        textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' : pointX < this.centerX && !islabelInside || pointX > this.centerX && islabelInside ? 'end' : 'start';\n      }\n\n      label = axis.visibleLabels[i];\n      labelText = label.text; // to trim axis labels based on available size\n\n      if (axis.enableTrim || intersectType === 'Trim') {\n        var originalText = axis.visibleLabels[i].originalText;\n        var trimText = void 0;\n        var size = void 0;\n        var labelPosition = axis.labelPosition;\n        var chartWidth = chart.availableSize.width;\n        var textLength = originalText.length;\n\n        for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n          trimText = originalText.substring(0, i_1) + '...';\n          size = measureText(trimText, axis.labelStyle).width;\n\n          if (pointX === chartWidth / 2 ? pointX - size / 2 >= 0 && pointX + size / 2 <= chartWidth : labelPosition === 'Outside' && (pointX >= chartWidth / 2 && pointX + size <= chartWidth || pointX <= chartWidth / 2 && pointX - size >= 0) || labelPosition === 'Inside' && (pointX + size <= chartWidth / 2 || pointX - size >= chartWidth / 2)) {\n            labelText = i_1 === textLength - 1 ? originalText : trimText;\n            label.size.width = measureText(labelText, axis.labelStyle).width;\n            label.text = labelText;\n            break;\n          }\n        }\n      } // fix for label style not working in axisLabelRender event issue\n\n\n      labelRegions[i] = this.getLabelRegion(pointX, pointY, label, textAnchor);\n\n      if (i === 0) {\n        firstLabelX = pointX;\n      } else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n        lastLabelX = measureText(labelText, axis.labelStyle).height;\n        lastLabelX += pointX;\n        labelText = lastLabelX > firstLabelX ? '' : labelText;\n      } // Label intersect action (Hide) perform here\n\n\n      if (i !== 0 && intersectType === 'Hide') {\n        for (var j = i; j >= 0; j--) {\n          j = j === 0 ? 0 : j === i ? j - 1 : j;\n\n          if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n            isIntersect = true;\n            isLabelVisible[i] = false;\n            break;\n          } else {\n            isLabelVisible[i] = true;\n          }\n        }\n      }\n\n      if (!isIntersect && legendRect) {\n        isIntersect = isOverlap(labelRegions[i], legendRect);\n\n        if (isIntersect) {\n          var width = this.getAvailableSpaceToTrim(legendRect, labelRegions[i]);\n\n          if (width > 0) {\n            labelText = textTrim(width, axis.visibleLabels[i].originalText, axis.labelStyle);\n            isIntersect = false;\n          }\n        }\n      }\n\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, !chart.enableRtl ? textAnchor : textAnchor == 'end' ? 'start' : textAnchor == 'start' ? 'end' : textAnchor, labelText, '', 'central');\n\n      if (isIntersect) {\n        continue; // If the label is intersect, the label render is ignored.\n      }\n\n      this.visibleAxisLabelRect.push(labelRegions[i]);\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n    }\n\n    this.element.appendChild(labelElement);\n  };\n  /**\n   * To get available space to trim.\n   *\n   * @param {Rect} legendRect legendRect\n   * @param {Rect} labelRect labelRect\n   * @returns {number} available space value\n   */\n\n\n  PolarRadarPanel.prototype.getAvailableSpaceToTrim = function (legendRect, labelRect) {\n    var legendX1 = legendRect.x;\n    var legendX2 = legendX1 + legendRect.width;\n    var labelX1 = labelRect.x;\n    var labelX2 = labelX1 + labelRect.width;\n    var width = 0;\n\n    if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 > legendX2) {\n      width = labelX2 - legendX2;\n    } else if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 < legendX2) {\n      width = 0;\n    } else if (labelX2 > legendX1 && labelX2 < legendX2 && labelX1 < legendX1) {\n      width = legendX1 - labelX1;\n    } else if (labelX2 > legendX1 && labelX2 > legendX2 && labelX1 < legendX1) {\n      width = legendX1 - labelX1;\n    }\n\n    return width;\n  };\n  /**\n   * Getting axis label bounds\n   *\n   * @param {number} pointX pointX\n   * @param {number} pointY pointY\n   * @param {VisibleLabels} label label\n   * @param {string} anchor anchor\n   * @returns {Rect} label region\n   */\n\n\n  PolarRadarPanel.prototype.getLabelRegion = function (pointX, pointY, label, anchor) {\n    if (anchor === 'middle') {\n      pointX -= label.size.width / 2;\n    } else if (anchor === 'end') {\n      pointX -= label.size.width;\n    } else {\n      // eslint-disable-next-line no-self-assign\n      pointX = pointX;\n    }\n\n    pointY -= label.size.height / 2;\n    return new Rect(pointX, pointY, label.size.width, label.size.height);\n  };\n\n  PolarRadarPanel.prototype.renderTickLine = function (axis, index, majorTickLine, minorTickLine, gridIndex) {\n    var tickOptions;\n    var chart = this.chart;\n    var direction;\n    var element;\n\n    if (axis.majorTickLines.width > 0) {\n      element = getElement(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n      /**\n       * I252450\n       * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n       * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n       * Fix: Pointer events set to none for tick lines\n       */\n\n      element = chart.renderer.drawPath(tickOptions);\n      this.setPointerEventNone(element);\n      appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n    }\n\n    if (axis.minorTickLines.width > 0) {\n      element = getElement(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n      /**\n       * I252450\n       * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n       * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n       * Fix: Pointer events set to none for tick lines\n       */\n\n      element = chart.renderer.drawPath(tickOptions);\n      this.setPointerEventNone(element);\n      appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n    }\n  };\n\n  PolarRadarPanel.prototype.renderGridLine = function (axis, index, majorGrid, minorGird, gridIndex) {\n    var chart = this.chart;\n    var gridOptions;\n    var direction;\n    var element;\n\n    if (axis.majorGridLines.width > 0) {\n      element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n      appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n    }\n\n    if (axis.minorGridLines.width > 0) {\n      element = getElement(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n      appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n    }\n  };\n\n  PolarRadarPanel.prototype.setPointerEventNone = function (element) {\n    if (element) {\n      element.style.pointerEvents = 'none';\n    }\n  };\n\n  return PolarRadarPanel;\n}(LineBase);\n\nexport { PolarRadarPanel };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","valueToCoefficient","inside","isOverlap","textTrim","appendChildElement","CircleOption","Size","measureText","TextOption","PathOption","Rect","LineBase","textElement","ChartLocation","valueToPolarCoefficient","CoefficientToVector","getElement","PolarRadarPanel","_super","_this","apply","arguments","visibleAxisLabelRect","measureAxis","rect","chart","initialClipRect","seriesClipRect","x","y","width","height","measureRowAxis","measureColumnAxis","calculateAxisSize","calculateRowSize","row","rows","measureDefinition","availableSize","computedHeight","calculateColumnSize","column","columns","computedWidth","definition","size","_i","_a","axes","length","axis","getModule","baseModule","calculateRangeAndInterval","padding","centerX","centerY","radius","Math","min","primaryXAxis","majorTickLines","maxLabelSize","coefficient","primaryYAxis","measure","yAxis","isRTLEnabled","enableRtl","setIsInversedAndOpposedPosition","verticalAxes","push","xAxis","horizontalAxes","computedTop","computedLeft","renderAxes","startAngle","axisElement","renderer","createGroup","id","element","axisLineElement","i","len","axisCollections","orientation","majorGridLines","drawXAxisGridLine","visible","internalVisibility","drawXAxisLabels","drawYAxisGridLine","lineStyle","drawYAxisLine","drawYAxisLabels","appendChild","enableCanvas","svgObject","redraw","index","optionsLine","vector","visibleLabels","value","axisLine","dashArray","color","themeStyle","drawPath","setPointerEventNone","yAxisElements","elementSize","options","pointX","pointY","angle","anchor","isIntersect","labelRegions","isLabelVisible","intersectType","labelIntersectAction","labelElement","cos","PI","labelPosition","sin","getLabelRegion","j","text","labelStyle","axisLabel","majorTick","majorGrid","x1","y1","x2","y2","border","majorGridLine","previousValue","visibleSeries","type","getAttribute","drawCircle","renderRadarGrid","tickPosition","renderTickLine","vector2","concat","tempInterval","minorGirdLine","minorTickLine","minorDirection","xLoc","yLoc","minorTicksPerInterval","minorGridLines","minorTickLines","valueType","drawAxisMinorLine","renderGridLine","minorGird","minorTick","range","visibleRange","direction","dateTimeInterval","interval","tickXSize","tickYSize","legendRect","legendModule","legendBounds","labelText","firstLabelX","islabelInside","lastLabelX","label","textAnchor","ticksbwtLabel","labelPlacement","isNaN","parseFloat","toFixed","enableTrim","originalText","trimText","chartWidth","textLength","i_1","substring","getAvailableSpaceToTrim","labelRect","legendX1","legendX2","labelX1","labelX2","majorTickLine","gridIndex","tickOptions","gridOptions","minorGridLine","style","pointerEvents"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-charts/src/chart/axis/polar-radar-panel.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { valueToCoefficient, inside, isOverlap, textTrim } from '../../common/utils/helper';\nimport { appendChildElement } from '../../common/utils/helper';\nimport { CircleOption } from '../../common/utils/helper';\nimport { Size, measureText, TextOption, PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from '../series/line-base';\nimport { textElement, ChartLocation, valueToPolarCoefficient, CoefficientToVector, getElement } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\nvar PolarRadarPanel = /** @class */ (function (_super) {\n    __extends(PolarRadarPanel, _super);\n    function PolarRadarPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleAxisLabelRect = [];\n        return _this;\n    }\n    /**\n     * Measure the polar radar axis size.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measureAxis = function (rect) {\n        var chart = this.chart;\n        this.initialClipRect = rect;\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        //Measure axis size calculation\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.calculateAxisSize();\n    };\n    PolarRadarPanel.prototype.measureRowAxis = function (chart, rect) {\n        this.calculateRowSize(rect);\n        var row = chart.rows[0];\n        this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n    };\n    PolarRadarPanel.prototype.measureColumnAxis = function (chart, rect) {\n        this.calculateColumnSize(rect);\n        var column = chart.columns[0];\n        this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n    };\n    /**\n     * Measure the column and row in chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measureDefinition = function (definition, chart, size) {\n        for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n        }\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.calculateAxisSize = function () {\n        var chart = this.chart;\n        var axis;\n        var padding = 5;\n        this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n        this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n        chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding -\n            chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n        chart.radius = (chart.primaryXAxis.coefficient * chart.radius) / 100;\n        this.seriesClipRect.y = this.centerY - chart.radius;\n        this.seriesClipRect.x = this.centerX - chart.radius;\n        this.seriesClipRect.height = 2 * chart.radius;\n        this.seriesClipRect.width = 2 * chart.radius;\n        this.calculateRowSize(this.seriesClipRect);\n        axis = chart.primaryYAxis;\n        axis.rect = this.seriesClipRect;\n        this.calculateColumnSize(this.seriesClipRect);\n        axis = chart.primaryXAxis;\n        axis.rect = this.seriesClipRect;\n    };\n    /**\n     * Measure the axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measure = function () {\n        var chart = this.chart;\n        var yAxis = chart.primaryYAxis;\n        yAxis.isRTLEnabled = chart.enableRtl;\n        yAxis.setIsInversedAndOpposedPosition(true);\n        chart.verticalAxes.push(yAxis);\n        var row = chart.rows[0];\n        row.axes[0] = yAxis;\n        chart.rows[0] = row;\n        var xAxis = chart.primaryXAxis;\n        xAxis.isRTLEnabled = chart.enableRtl;\n        xAxis.setIsInversedAndOpposedPosition(true);\n        chart.horizontalAxes.push(xAxis);\n        var column = chart.columns[0];\n        column.axes[0] = xAxis;\n        chart.columns[0] = column;\n    };\n    /**\n     * Measure the row size.\n     *\n     * @returns {void}\n     */\n    PolarRadarPanel.prototype.calculateRowSize = function (rect) {\n        /*! Calculate row size */\n        var chart = this.chart;\n        var row = chart.rows[0];\n        row.computedHeight = rect.height / 2;\n        row.computedTop = rect.y;\n        chart.rows[0] = row;\n    };\n    /**\n     * Measure the row size.\n     *\n     * @returns {void}\n     */\n    PolarRadarPanel.prototype.calculateColumnSize = function (rect) {\n        /*! Calculate column size */\n        var chart = this.chart;\n        var column = chart.columns[0];\n        column.computedLeft = rect.x;\n        column.computedWidth = rect.width;\n        chart.columns[0] = column;\n    };\n    /**\n     * To render the axis element.\n     *\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.renderAxes = function () {\n        var axis;\n        var chart = this.chart;\n        this.startAngle = chart.primaryXAxis.startAngle;\n        var axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisCollection' });\n        var axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i });\n            axis = chart.axisCollections[i];\n            if (axis.orientation === 'Horizontal') {\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawXAxisLabels(axis, i);\n                }\n            }\n            else {\n                this.drawYAxisGridLine(axis, i);\n                if (axis.lineStyle.width > 0) {\n                    this.drawYAxisLine(axis, i);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawYAxisLabels(axis, i);\n                }\n            }\n            axisElement.appendChild(this.element);\n        }\n        axisElement.appendChild(this.element);\n        appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n        return axisLineElement;\n    };\n    PolarRadarPanel.prototype.drawYAxisLine = function (axis, index) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        var axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' +\n            (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': axisLine,\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        /**\n         * I252450\n         * When we click the center of the marker which is plotted in the axis line, selection did not work is fixed\n         * Cause: Instead of marker id, axis  line id is obtained while clicking\n         * Fix: Pointer events set to none for axis lines\n         */\n        var element = chart.renderer.drawPath(optionsLine);\n        this.setPointerEventNone(element);\n        chart.yAxisElements.appendChild(element);\n    };\n    PolarRadarPanel.prototype.drawYAxisLabels = function (axis, index) {\n        var chart = this.chart;\n        var elementSize;\n        var options;\n        var pointX = 0;\n        var pointY = 0;\n        var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        var anchor = 'middle';\n        var radius;\n        var padding = 5;\n        var isIntersect;\n        var labelRegions = [];\n        var isLabelVisible = [];\n        isLabelVisible[0] = true;\n        var intersectType = axis.labelIntersectAction;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isIntersect = false;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            elementSize = axis.visibleLabels[i].size;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            pointX = (this.centerX + radius * vector.x) + ((axis.majorTickLines.height + elementSize.width / 2 + padding / 2)\n                * (Math.cos(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY = (this.centerY + radius * vector.y) + ((axis.majorTickLines.height + elementSize.height / 2)\n                * (Math.sin(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY += (elementSize.height / 4);\n            labelRegions[i] = this.getLabelRegion(pointX, pointY, axis.visibleLabels[i], anchor);\n            if (i !== 0 && intersectType === 'Hide') {\n                for (var j = i; j >= 0; j--) {\n                    j = (j === 0) ? 0 : (j === i) ? (j - 1) : j;\n                    if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n                        isIntersect = true;\n                        isLabelVisible[i] = false;\n                        break;\n                    }\n                    else {\n                        isLabelVisible[i] = true;\n                    }\n                }\n                if (isIntersect) {\n                    continue; // If the label is intersect, the label render is ignored.\n                }\n                // To check Y axis label with visible X axis label\n                for (var _i = 0, _a = this.visibleAxisLabelRect; _i < _a.length; _i++) {\n                    var rect = _a[_i];\n                    if (isOverlap(labelRegions[i], rect)) {\n                        isIntersect = true;\n                        break;\n                    }\n                }\n            }\n            if (isIntersect) {\n                continue;\n            }\n            this.visibleAxisLabelRect.push(labelRegions[i]);\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n            textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n        }\n        chart.yAxisElements.appendChild(labelElement);\n    };\n    PolarRadarPanel.prototype.drawYAxisGridLine = function (axis, index) {\n        var chart = this.chart;\n        var options;\n        var radius;\n        var majorTick = '';\n        var majorGrid = '';\n        var vector;\n        var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var border = {\n            color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n            width: axis.majorGridLines.width\n        };\n        var previousValue;\n        var element;\n        if (axis.majorGridLines.width > 0) {\n            if (chart.visibleSeries[0].type === 'Polar') {\n                for (var j = 0; j < axis.visibleLabels.length; j++) {\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n                    previousValue = element ? element.getAttribute('r') : null;\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n                }\n                if (radius !== chart.radius) {\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length + 1, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, chart.radius);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n                }\n            }\n            else {\n                for (var j = 0; j < axis.visibleLabels.length; j++) {\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    majorGrid = this.renderRadarGrid(radius, '', chart);\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n                    previousValue = element ? element.getAttribute('d') : null;\n                    options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n                }\n                if (radius !== chart.radius) {\n                    majorGrid = this.renderRadarGrid(chart.radius, '', chart);\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length);\n                    previousValue = element ? element.getAttribute('d') : null;\n                    options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n                }\n            }\n        }\n        if (axis.majorTickLines.width > 0) {\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n            for (var i = 0; i < axis.visibleLabels.length; i++) {\n                radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n                x1 = this.centerX + radius * vector.x;\n                y1 = this.centerY + radius * vector.y;\n                x2 = x1 + (axis.majorTickLines.height * (Math.cos(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                y2 = y1 + (axis.majorTickLines.height * (Math.sin(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                majorTick = 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n                this.renderTickLine(axis, index, majorTick, '', i);\n            }\n        }\n    };\n    PolarRadarPanel.prototype.renderRadarGrid = function (radius, majorGrid, chart) {\n        var vector;\n        var vector2;\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        for (var i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n            vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n            if (i + 1 < len) {\n                vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n            }\n            else {\n                vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n            }\n            x1 = this.centerX + radius * vector.x;\n            y1 = this.centerY + radius * vector.y;\n            x2 = this.centerX + radius * vector2.x;\n            y2 = this.centerY + radius * vector2.y;\n            majorGrid = majorGrid.concat((i ? 'L ' : 'M ') + ' ' + x1 + ' ' + y1 + ' ' + 'L ' + ' ' + x2 + ' ' + y2 + ' ');\n        }\n        return majorGrid;\n    };\n    PolarRadarPanel.prototype.drawXAxisGridLine = function (axis, index) {\n        var chart = this.chart;\n        var tempInterval;\n        var vector;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorGirdLine = '';\n        var minorTickLine = '';\n        var x1 = this.centerX;\n        var x2;\n        var y1 = this.centerY;\n        var y2;\n        var minorDirection;\n        var length = axis.visibleLabels.length;\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            tempInterval = axis.visibleLabels[i].value;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n            x2 = this.centerX + chart.radius * vector.x;\n            y2 = this.centerY + chart.radius * vector.y;\n            var xLoc = x2 + (axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n            var yLoc = y2 + (axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n            majorGrid = 'M ' + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2;\n            majorTick = 'M ' + x2 + ' ' + y2 + ' L ' + xLoc + ' ' + yLoc;\n            if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)\n                && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n                minorGirdLine = minorDirection[0];\n                minorTickLine = minorDirection[1];\n            }\n            this.renderTickLine(axis, index, majorTick, minorTickLine, i);\n            this.renderGridLine(axis, index, majorGrid, minorGirdLine, i);\n        }\n    };\n    PolarRadarPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, minorGird, minorTick) {\n        var value = tempInterval;\n        var x;\n        var y;\n        var vector;\n        var range = axis.visibleRange;\n        var direction = [];\n        for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n            value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) /\n                (axis.minorTicksPerInterval + 1);\n            if (inside(value, range)) {\n                vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n                x = this.centerX + this.chart.radius * vector.x;\n                y = this.centerY + this.chart.radius * vector.y;\n                var tickXSize = x + (axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n                var tickYSize = y + (axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n                minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY\n                    + 'L ' + x + ' ' + y);\n                minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + (tickXSize) + ' ' +\n                    (tickYSize));\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    };\n    /**\n     * To render the axis label.\n     *\n     * @param {Axis} axis axis\n     * @param {number} index index\n     * @returns {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.drawXAxisLabels = function (axis, index) {\n        this.visibleAxisLabelRect = [];\n        var legendRect;\n        if (this.chart.legendModule) {\n            legendRect = this.chart.legendModule.legendBounds;\n        }\n        var chart = this.chart;\n        var pointX = 0;\n        var pointY = 0;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var options;\n        var vector;\n        var labelText;\n        var firstLabelX;\n        var islabelInside = axis.labelPosition === 'Inside';\n        var padding = 5;\n        var lastLabelX;\n        var label;\n        var textAnchor = '';\n        var isIntersect;\n        var labelRegions = [];\n        var isLabelVisible = [];\n        isLabelVisible[0] = true;\n        var intersectType = axis.labelIntersectAction;\n        var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n        var radius = chart.radius + axis.majorTickLines.height;\n        radius = (islabelInside) ? -radius : radius;\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isIntersect = false;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n            if (!isNaN(vector.x) && !isNaN(vector.y)) {\n                pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n                pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n                textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' :\n                    ((pointX < this.centerX && !islabelInside) || (pointX > this.centerX && islabelInside)) ? 'end' : 'start';\n            }\n            label = axis.visibleLabels[i];\n            labelText = label.text;\n            // to trim axis labels based on available size\n            if (axis.enableTrim || intersectType === 'Trim') {\n                var originalText = axis.visibleLabels[i].originalText;\n                var trimText = void 0;\n                var size = void 0;\n                var labelPosition = axis.labelPosition;\n                var chartWidth = chart.availableSize.width;\n                var textLength = originalText.length;\n                for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n                    trimText = originalText.substring(0, i_1) + '...';\n                    size = measureText(trimText, axis.labelStyle).width;\n                    if (pointX === chartWidth / 2 ? (pointX - size / 2 >= 0 && pointX + size / 2 <= chartWidth) :\n                        ((labelPosition === 'Outside' && ((pointX >= chartWidth / 2 && pointX + size <= chartWidth) ||\n                            (pointX <= chartWidth / 2 && pointX - size >= 0))) || (labelPosition === 'Inside' &&\n                            (pointX + size <= chartWidth / 2 || pointX - size >= chartWidth / 2)))) {\n                        labelText = i_1 === textLength - 1 ? originalText : trimText;\n                        label.size.width = measureText(labelText, axis.labelStyle).width;\n                        label.text = labelText;\n                        break;\n                    }\n                }\n            }\n            // fix for label style not working in axisLabelRender event issue\n            labelRegions[i] = this.getLabelRegion(pointX, pointY, label, textAnchor);\n            if (i === 0) {\n                firstLabelX = pointX;\n            }\n            else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n                lastLabelX = measureText(labelText, axis.labelStyle).height;\n                lastLabelX += pointX;\n                labelText = (lastLabelX > firstLabelX) ? '' : labelText;\n            }\n            // Label intersect action (Hide) perform here\n            if (i !== 0 && intersectType === 'Hide') {\n                for (var j = i; j >= 0; j--) {\n                    j = (j === 0) ? 0 : ((j === i) ? (j - 1) : j);\n                    if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n                        isIntersect = true;\n                        isLabelVisible[i] = false;\n                        break;\n                    }\n                    else {\n                        isLabelVisible[i] = true;\n                    }\n                }\n            }\n            if (!isIntersect && legendRect) {\n                isIntersect = isOverlap(labelRegions[i], legendRect);\n                if (isIntersect) {\n                    var width = this.getAvailableSpaceToTrim(legendRect, labelRegions[i]);\n                    if (width > 0) {\n                        labelText = textTrim(width, axis.visibleLabels[i].originalText, axis.labelStyle);\n                        isIntersect = false;\n                    }\n                }\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, !chart.enableRtl ? textAnchor : textAnchor == 'end' ? 'start' : textAnchor == 'start' ? 'end' : textAnchor, labelText, '', 'central');\n            if (isIntersect) {\n                continue; // If the label is intersect, the label render is ignored.\n            }\n            this.visibleAxisLabelRect.push(labelRegions[i]);\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true, null, null, null, null, chart.enableCanvas);\n        }\n        this.element.appendChild(labelElement);\n    };\n    /**\n     * To get available space to trim.\n     *\n     * @param {Rect} legendRect legendRect\n     * @param {Rect} labelRect labelRect\n     * @returns {number} available space value\n     */\n    PolarRadarPanel.prototype.getAvailableSpaceToTrim = function (legendRect, labelRect) {\n        var legendX1 = legendRect.x;\n        var legendX2 = legendX1 + legendRect.width;\n        var labelX1 = labelRect.x;\n        var labelX2 = labelX1 + labelRect.width;\n        var width = 0;\n        if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 > legendX2) {\n            width = labelX2 - legendX2;\n        }\n        else if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 < legendX2) {\n            width = 0;\n        }\n        else if (labelX2 > legendX1 && labelX2 < legendX2 && labelX1 < legendX1) {\n            width = legendX1 - labelX1;\n        }\n        else if (labelX2 > legendX1 && labelX2 > legendX2 && labelX1 < legendX1) {\n            width = legendX1 - labelX1;\n        }\n        return width;\n    };\n    /**\n     * Getting axis label bounds\n     *\n     * @param {number} pointX pointX\n     * @param {number} pointY pointY\n     * @param {VisibleLabels} label label\n     * @param {string} anchor anchor\n     * @returns {Rect} label region\n     */\n    PolarRadarPanel.prototype.getLabelRegion = function (pointX, pointY, label, anchor) {\n        if (anchor === 'middle') {\n            pointX -= (label.size.width / 2);\n        }\n        else if (anchor === 'end') {\n            pointX -= label.size.width;\n        }\n        else {\n            // eslint-disable-next-line no-self-assign\n            pointX = pointX;\n        }\n        pointY -= (label.size.height / 2);\n        return new Rect(pointX, pointY, label.size.width, label.size.height);\n    };\n    PolarRadarPanel.prototype.renderTickLine = function (axis, index, majorTickLine, minorTickLine, gridIndex) {\n        var tickOptions;\n        var chart = this.chart;\n        var direction;\n        var element;\n        if (axis.majorTickLines.width > 0) {\n            element = getElement(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n            /**\n             * I252450\n             * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n             * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n             * Fix: Pointer events set to none for tick lines\n             */\n            element = chart.renderer.drawPath(tickOptions);\n            this.setPointerEventNone(element);\n            appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n        }\n        if (axis.minorTickLines.width > 0) {\n            element = getElement(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n            /**\n             * I252450\n             * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n             * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n             * Fix: Pointer events set to none for tick lines\n             */\n            element = chart.renderer.drawPath(tickOptions);\n            this.setPointerEventNone(element);\n            appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n        }\n    };\n    PolarRadarPanel.prototype.renderGridLine = function (axis, index, majorGrid, minorGird, gridIndex) {\n        var chart = this.chart;\n        var gridOptions;\n        var direction;\n        var element;\n        if (axis.majorGridLines.width > 0) {\n            element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n            appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n        }\n        if (axis.minorGridLines.width > 0) {\n            element = getElement(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n            appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n        }\n    };\n    PolarRadarPanel.prototype.setPointerEventNone = function (element) {\n        if (element) {\n            element.style.pointerEvents = 'none';\n        }\n    };\n    return PolarRadarPanel;\n}(LineBase));\nexport { PolarRadarPanel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}