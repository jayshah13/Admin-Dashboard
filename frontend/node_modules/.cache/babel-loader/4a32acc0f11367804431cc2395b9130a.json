{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { formatUnit } from '@syncfusion/ej2-base';\nimport { columnWidthChanged, preventFrozenScrollRefresh } from '../base/constant';\nimport { Column } from '../models/column';\nimport { parentsUntil, ispercentageWidth, getScrollBarWidth } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * ColumnWidthService\n *\n * @hidden\n */\n\nvar ColumnWidthService =\n/** @class */\nfunction () {\n  function ColumnWidthService(parent) {\n    this.parent = parent;\n  }\n\n  ColumnWidthService.prototype.setWidthToColumns = function () {\n    var i = 0;\n    var indexes = this.parent.getColumnIndexesInView();\n    var wFlag = true;\n    var totalColumnsWidth = 0;\n\n    if (this.parent.allowGrouping) {\n      for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n        if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n          wFlag = false;\n          continue;\n        }\n\n        this.setColumnWidth(new Column({\n          width: '30px'\n        }), i);\n      }\n    }\n\n    if (this.parent.detailTemplate || this.parent.childGrid) {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), i);\n      i++;\n    }\n\n    if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), i);\n      i++;\n    }\n\n    var columns = this.parent.getColumns();\n\n    for (var j = 0; j < columns.length; j++) {\n      this.setColumnWidth(columns[j], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n    }\n\n    if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), columns.length);\n    }\n\n    totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n\n    if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n      this.setMinwidthBycalculation(totalColumnsWidth);\n    }\n  };\n\n  ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n    var difference = 0;\n    var collection = this.parent.getColumns().filter(function (a) {\n      return isNullOrUndefined(a.width) || a.width === 'auto';\n    });\n\n    if (collection.length) {\n      if (!isNullOrUndefined(this.parent.width) && this.parent.width !== 'auto' && typeof this.parent.width === 'string' && this.parent.width.indexOf('%') === -1) {\n        difference = (typeof this.parent.width === 'string' ? parseInt(this.parent.width, 10) : this.parent.width) - tWidth;\n      } else {\n        difference = this.parent.element.getBoundingClientRect().width - tWidth;\n      }\n\n      var tmWidth = 0;\n\n      for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n        var cols = collection_1[_i];\n        tmWidth += !isNullOrUndefined(cols.minWidth) ? typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth : 0;\n      }\n\n      for (var i = 0; i < collection.length; i++) {\n        if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && i !== collection.length - 1) {\n          this.setUndefinedColumnWidth(collection);\n        }\n\n        var index = this.parent.getColumnIndexByField(collection[i].field) + this.parent.getIndentCount();\n\n        if (tWidth !== 0 && difference < tmWidth) {\n          this.setWidth(collection[i].minWidth, index);\n        } else if (tWidth !== 0 && difference > tmWidth) {\n          this.setWidth('', index, true);\n        }\n      }\n    }\n  };\n\n  ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n    for (var k = 0; k < collection.length; k++) {\n      if (k !== collection.length - 1) {\n        collection[k].width = 200;\n        this.setWidth(200, this.parent.getColumnIndexByField(collection[k].field));\n      }\n    }\n  };\n\n  ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n    if (this.parent.getColumns().length < 1) {\n      return;\n    }\n\n    var columnIndex = isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n    var cWidth = this.getWidth(column);\n    var tgridWidth = this.getTableWidth(this.parent.getColumns());\n\n    if (cWidth !== null) {\n      this.setWidth(cWidth, columnIndex);\n\n      if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n        this.setMinwidthBycalculation(tgridWidth);\n      }\n\n      if (this.parent.allowResizing && module === 'resize' || this.parent.getFrozenColumns() && this.parent.allowResizing) {\n        this.setWidthToTable();\n      }\n\n      this.parent.notify(columnWidthChanged, {\n        index: columnIndex,\n        width: cWidth,\n        column: column,\n        module: module\n      });\n    }\n  };\n\n  ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n    if (this.parent.groupSettings.columns.length > index && ispercentageWidth(this.parent)) {\n      var elementWidth = this.parent.element.offsetWidth;\n      width = (30 / elementWidth * 100).toFixed(1) + '%';\n    }\n\n    var header = this.parent.getHeaderTable();\n    var content = this.parent.getContentTable();\n    var fWidth = formatUnit(width);\n    var headerCol;\n    var frzCols = this.parent.getFrozenColumns();\n    var isDraggable = this.parent.isRowDragable();\n    frzCols = frzCols && isDraggable ? frzCols + 1 : frzCols;\n    var mHdr = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader);\n    var mCont = this.parent.getContent().querySelector('.' + literals.movableContent);\n    var freezeLeft = this.parent.getFrozenLeftColumnsCount();\n    var freezeRight = this.parent.getFrozenRightColumnsCount();\n    var movableCount = this.parent.getMovableColumnsCount();\n    var isColFrozen = freezeLeft !== 0 || freezeRight !== 0;\n\n    if (frzCols && index >= frzCols) {\n      if (!mHdr || !mHdr.querySelector(literals.colGroup)) {\n        return;\n      }\n\n      headerCol = mHdr.querySelector(literals.colGroup).children[index - frzCols];\n    } else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis() && mHdr.scrollLeft > 0) {\n      var colGroup = mHdr.querySelector(literals.colGroup);\n      headerCol = colGroup.children[colGroup.children.length - 1 - index];\n    } else if (isColFrozen) {\n      var target = void 0;\n\n      if (freezeLeft && !freezeRight) {\n        index = isDraggable ? index - 1 : index;\n        target = index < freezeLeft ? header : mHdr;\n      } else if (!freezeLeft && freezeRight) {\n        target = index >= movableCount ? header : mHdr;\n      } else if (freezeLeft && freezeRight) {\n        index = isDraggable ? index - 1 : index;\n        var frHdr = this.parent.getFrozenRightHeader();\n        target = index < freezeLeft ? header : index < freezeLeft + movableCount ? mHdr : frHdr;\n      }\n\n      headerCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n\n      if (!headerCol) {\n        return;\n      }\n    } else {\n      headerCol = header.querySelector(literals.colGroup).children[index];\n    }\n\n    if (headerCol && !clear) {\n      headerCol.style.width = fWidth;\n    } else if (headerCol && clear) {\n      headerCol.style.width = '';\n    }\n\n    var contentCol;\n\n    if (frzCols && index >= frzCols) {\n      contentCol = this.parent.getContent().querySelector('.' + literals.movableContent).querySelector(literals.colGroup).children[index - frzCols];\n    } else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis() && mCont.scrollLeft > 0) {\n      var colGroup = this.parent.getContent().querySelector('.' + literals.movableContent).querySelector(literals.colGroup);\n      contentCol = colGroup.children[colGroup.children.length - 1 - index];\n    } else if (isColFrozen) {\n      var target = void 0;\n\n      if (freezeLeft && !freezeRight) {\n        target = index < freezeLeft ? content : mCont;\n      }\n\n      if (!freezeLeft && freezeRight) {\n        target = index >= movableCount ? content : mCont;\n      }\n\n      if (freezeLeft && freezeRight) {\n        var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n        target = index < freezeLeft ? content : index < freezeLeft + movableCount ? mCont : frCont;\n      }\n\n      contentCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n    } else {\n      contentCol = content.querySelector(literals.colGroup).children[index];\n    }\n\n    if (contentCol && !clear) {\n      contentCol.style.width = fWidth;\n    } else if (contentCol && clear) {\n      contentCol.style.width = '';\n    }\n\n    if (!this.parent.enableColumnVirtualization) {\n      var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n      var editTableCol = [];\n\n      for (var i = 0; i < edit.length; i++) {\n        if (parentsUntil(edit[i], 'e-grid').id === this.parent.element.id) {\n          for (var j = 0; j < edit[i].querySelector('colgroup').children.length; j++) {\n            editTableCol.push(edit[i].querySelector('colgroup').children[j]);\n          }\n        }\n      }\n\n      if (edit.length && editTableCol.length) {\n        editTableCol[index].style.width = fWidth;\n      }\n    }\n\n    if (this.parent.isFrozenGrid()) {\n      this.refreshFrozenScrollbar();\n    }\n  };\n\n  ColumnWidthService.prototype.getColumnLevelFrozenColgroup = function (index, left, movable, ele) {\n    if (!ele || !ele.querySelector(literals.colGroup)) {\n      return null;\n    }\n\n    var columns = this.parent.getColumns();\n    var isDrag = this.parent.isRowDragable();\n    var frzMode = this.parent.getFrozenMode();\n    var headerCol;\n    var colGroup = [].slice.call(ele.querySelector(literals.colGroup).children);\n\n    if (frzMode === 'Right' && isDrag && index === movable + this.parent.getFrozenRightColumnsCount()) {\n      headerCol = colGroup[colGroup.length - 1];\n    } else if (isDrag && index === -1) {\n      headerCol = colGroup[0];\n    } else if (columns[index].freeze === 'Left') {\n      headerCol = colGroup[isDrag ? index + 1 : index];\n    } else if (columns[index].freeze === 'Right') {\n      headerCol = colGroup[index - (left + movable)];\n    } else {\n      headerCol = colGroup[index - left];\n    }\n\n    return headerCol;\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n    var args = {\n      cancel: false\n    };\n    this.parent.notify(preventFrozenScrollRefresh, args);\n\n    if (args.cancel) {\n      return;\n    }\n\n    var scrollWidth = getScrollBarWidth();\n    var frozenScrollbar = this.parent.element.querySelector('.e-frozenscrollbar');\n    var movableScrollbar = this.parent.element.querySelector('.e-movablescrollbar');\n    var frozencontent = this.parent.getContent().querySelector('.' + literals.frozenContent);\n    var movableContent = this.parent.getContent().querySelector('.' + literals.movableContent);\n    var frozenWidth = frozencontent.firstElementChild.getBoundingClientRect().width;\n    var movableWidth = movableContent.firstElementChild.getBoundingClientRect().width;\n\n    if (this.parent.getFrozenMode() === 'Right') {\n      frozenWidth = frozenWidth + scrollWidth;\n    }\n\n    frozenScrollbar.style.width = frozenWidth + 'px';\n\n    if (this.parent.getFrozenMode() === literals.leftRight) {\n      var frozenRightScrollbar = this.parent.element.querySelector('.e-frozen-right-scrollbar');\n      var frozenRightWidth = this.parent.getContent().querySelector('.e-frozen-right-content').firstElementChild.getBoundingClientRect().width;\n\n      if (this.parent.height !== 'auto') {\n        frozenRightWidth = frozenRightWidth + scrollWidth;\n      }\n\n      frozenRightScrollbar.style.width = frozenRightWidth + 'px';\n    } else {\n      if (this.parent.enableColumnVirtualization) {\n        var placeHolder = this.parent.getMovableVirtualContent().querySelector('.e-virtualtrack');\n\n        if (placeHolder) {\n          movableWidth = placeHolder.scrollWidth;\n        }\n      }\n\n      if (this.parent.getFrozenMode() !== 'Right' && this.parent.height !== 'auto') {\n        movableWidth = movableWidth + scrollWidth;\n      }\n    }\n\n    movableScrollbar.firstElementChild.style.width = movableWidth + 'px';\n  };\n\n  ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n    var previous = this.getHeightFromDirection(element, 'previous');\n    var next = this.getHeightFromDirection(element, 'next');\n    return previous + next;\n  };\n\n  ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n    var sibling = element[direction + 'ElementSibling'];\n    var result = 0;\n    var classList = [literals.gridHeader, literals.gridFooter, 'e-groupdroparea', 'e-gridpager', 'e-toolbar'];\n\n    while (sibling) {\n      if (classList.some(function (value) {\n        return sibling.classList.contains(value);\n      })) {\n        result += sibling.offsetHeight;\n      }\n\n      sibling = sibling[direction + 'ElementSibling'];\n    }\n\n    return result;\n  };\n\n  ColumnWidthService.prototype.isWidthUndefined = function () {\n    var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n      return isNullOrUndefined(col.width) && isNullOrUndefined(col.minWidth);\n    }).length;\n    return this.parent.getColumns().length === isWidUndefCount;\n  };\n\n  ColumnWidthService.prototype.getWidth = function (column) {\n    if (isNullOrUndefined(column.width) && this.parent.allowResizing && isNullOrUndefined(column.minWidth) && !this.isWidthUndefined()) {\n      column.width = 200;\n    }\n\n    if (this.parent.isFrozenGrid() && isNullOrUndefined(column.width) && (column.getFreezeTableName() === literals.frozenLeft || column.getFreezeTableName() === literals.frozenRight)) {\n      column.width = 200;\n    }\n\n    if (!column.width) {\n      return null;\n    }\n\n    var width = parseInt(column.width.toString(), 10);\n\n    if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n      return column.minWidth;\n    } else if (column.maxWidth && width > parseInt(column.maxWidth.toString(), 10)) {\n      return column.maxWidth;\n    } else {\n      return column.width;\n    }\n  };\n\n  ColumnWidthService.prototype.getTableWidth = function (columns) {\n    var tWidth = 0;\n\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      var cWidth = this.getWidth(column);\n\n      if (column.width === 'auto') {\n        cWidth = 0;\n      }\n\n      if (column.visible !== false && cWidth !== null) {\n        tWidth += parseInt(cWidth.toString(), 10);\n      }\n    }\n\n    return tWidth;\n  };\n\n  ColumnWidthService.prototype.calcMovableOrFreezeColWidth = function (tableType) {\n    var columns = this.parent.getColumns().slice();\n    var left = this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenColumns();\n    var movable = this.parent.getMovableColumnsCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n\n    if (tableType === 'movable') {\n      if (right) {\n        columns.splice(left + movable, columns.length);\n      }\n\n      if (left) {\n        columns.splice(0, left);\n      }\n    } else if (tableType === 'freeze-left') {\n      columns.splice(left, columns.length);\n    } else if (tableType === 'freeze-right') {\n      columns.splice(0, left + movable);\n    }\n\n    return formatUnit(this.getTableWidth(columns));\n  };\n\n  ColumnWidthService.prototype.setWidthToFrozenRightTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-right');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    var headerTbl = this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('.' + literals.table);\n    var cntTbl = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('.' + literals.table);\n    headerTbl.style.width = freezeWidth;\n    cntTbl.style.width = freezeWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToFrozenLeftTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-left');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    this.parent.getHeaderTable().style.width = freezeWidth;\n    this.parent.getContentTable().style.width = freezeWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToMovableTable = function () {\n    var movableWidth = '';\n    var isColUndefined = this.parent.getColumns().filter(function (a) {\n      return isNullOrUndefined(a.width);\n    }).length >= 1;\n    var isWidthAuto = this.parent.getColumns().filter(function (a) {\n      return a.width === 'auto';\n    }).length >= 1;\n\n    if (typeof this.parent.width === 'number' && !isColUndefined && !isWidthAuto) {\n      movableWidth = formatUnit(this.parent.width - parseInt(this.calcMovableOrFreezeColWidth('freeze').split('px')[0], 10) - 5);\n    } else if (!isColUndefined && !isWidthAuto) {\n      movableWidth = this.calcMovableOrFreezeColWidth('movable');\n    }\n\n    movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n\n    if (this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).firstElementChild) {\n      this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).firstElementChild.style.width = movableWidth;\n    }\n\n    this.parent.getContent().querySelector('.' + literals.movableContent).firstElementChild.style.width = movableWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToFrozenEditTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    this.parent.element.querySelectorAll('.e-table.e-inline-edit')[0].style.width = freezeWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToMovableEditTable = function () {\n    var movableWidth = this.calcMovableOrFreezeColWidth('movable');\n    movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n    this.parent.element.querySelectorAll('.e-table.e-inline-edit')[1].style.width = movableWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToTable = function () {\n    var tWidth = formatUnit(this.getTableWidth(this.parent.getColumns()));\n\n    if (this.parent.isFrozenGrid()) {\n      if (this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()) {\n        this.setWidthToFrozenLeftTable();\n      }\n\n      this.setWidthToMovableTable();\n\n      if (this.parent.getFrozenRightColumnsCount()) {\n        this.setWidthToFrozenRightTable();\n      }\n    } else {\n      if (this.parent.detailTemplate || this.parent.childGrid) {\n        this.setColumnWidth(new Column({\n          width: '30px'\n        }));\n      }\n\n      tWidth = this.isAutoResize() ? '100%' : tWidth;\n      this.parent.getHeaderTable().style.width = tWidth;\n      this.parent.getContentTable().style.width = tWidth;\n    }\n\n    var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n\n    if (edit && this.parent.getFrozenColumns()) {\n      this.setWidthToFrozenEditTable();\n      this.setWidthToMovableEditTable();\n    } else if (edit) {\n      edit.style.width = tWidth;\n    }\n  };\n\n  ColumnWidthService.prototype.isAutoResize = function () {\n    return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n  };\n\n  return ColumnWidthService;\n}();\n\nexport { ColumnWidthService };","map":{"version":3,"names":["isNullOrUndefined","formatUnit","columnWidthChanged","preventFrozenScrollRefresh","Column","parentsUntil","ispercentageWidth","getScrollBarWidth","literals","ColumnWidthService","parent","prototype","setWidthToColumns","i","indexes","getColumnIndexesInView","wFlag","totalColumnsWidth","allowGrouping","len","groupSettings","columns","length","enableColumnVirtualization","indexOf","setColumnWidth","width","detailTemplate","childGrid","isRowDragable","getFrozenMode","getColumns","j","undefined","getTableWidth","toString","setMinwidthBycalculation","tWidth","difference","collection","filter","a","parseInt","element","getBoundingClientRect","tmWidth","_i","collection_1","cols","minWidth","allowResizing","isWidthUndefined","setUndefinedColumnWidth","index","getColumnIndexByField","field","getIndentCount","setWidth","k","column","module","columnIndex","getNormalizedColumnIndex","uid","cWidth","getWidth","tgridWidth","getFrozenColumns","setWidthToTable","notify","clear","elementWidth","offsetWidth","toFixed","header","getHeaderTable","content","getContentTable","fWidth","headerCol","frzCols","isDraggable","mHdr","getHeaderContent","querySelector","movableHeader","mCont","getContent","movableContent","freezeLeft","getFrozenLeftColumnsCount","freezeRight","getFrozenRightColumnsCount","movableCount","getMovableColumnsCount","isColFrozen","colGroup","children","contentModule","isXaxis","scrollLeft","target","frHdr","getFrozenRightHeader","getColumnLevelFrozenColgroup","style","contentCol","frCont","edit","querySelectorAll","editTableCol","id","push","isFrozenGrid","refreshFrozenScrollbar","left","movable","ele","isDrag","frzMode","slice","call","freeze","args","cancel","scrollWidth","frozenScrollbar","movableScrollbar","frozencontent","frozenContent","frozenWidth","firstElementChild","movableWidth","leftRight","frozenRightScrollbar","frozenRightWidth","height","placeHolder","getMovableVirtualContent","getSiblingsHeight","previous","getHeightFromDirection","next","direction","sibling","result","classList","gridHeader","gridFooter","some","value","contains","offsetHeight","isWidUndefCount","col","getFreezeTableName","frozenLeft","frozenRight","maxWidth","columns_1","visible","calcMovableOrFreezeColWidth","tableType","right","splice","setWidthToFrozenRightTable","freezeWidth","isAutoResize","headerTbl","table","cntTbl","setWidthToFrozenLeftTable","setWidthToMovableTable","isColUndefined","isWidthAuto","split","setWidthToFrozenEditTable","setWidthToMovableEditTable","resizeSettings","mode"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin Dashboard/frontend/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { formatUnit } from '@syncfusion/ej2-base';\nimport { columnWidthChanged, preventFrozenScrollRefresh } from '../base/constant';\nimport { Column } from '../models/column';\nimport { parentsUntil, ispercentageWidth, getScrollBarWidth } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * ColumnWidthService\n *\n * @hidden\n */\nvar ColumnWidthService = /** @class */ (function () {\n    function ColumnWidthService(parent) {\n        this.parent = parent;\n    }\n    ColumnWidthService.prototype.setWidthToColumns = function () {\n        var i = 0;\n        var indexes = this.parent.getColumnIndexesInView();\n        var wFlag = true;\n        var totalColumnsWidth = 0;\n        if (this.parent.allowGrouping) {\n            for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n                    wFlag = false;\n                    continue;\n                }\n                this.setColumnWidth(new Column({ width: '30px' }), i);\n            }\n        }\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            this.setColumnWidth(new Column({ width: '30px' }), i);\n            i++;\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n            this.setColumnWidth(new Column({ width: '30px' }), i);\n            i++;\n        }\n        var columns = this.parent.getColumns();\n        for (var j = 0; j < columns.length; j++) {\n            this.setColumnWidth(columns[j], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n            this.setColumnWidth(new Column({ width: '30px' }), columns.length);\n        }\n        totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n        if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n            this.setMinwidthBycalculation(totalColumnsWidth);\n        }\n    };\n    ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n        var difference = 0;\n        var collection = this.parent.getColumns().filter(function (a) {\n            return isNullOrUndefined(a.width) || a.width === 'auto';\n        });\n        if (collection.length) {\n            if (!isNullOrUndefined(this.parent.width) && this.parent.width !== 'auto' &&\n                typeof (this.parent.width) === 'string' && this.parent.width.indexOf('%') === -1) {\n                difference = (typeof this.parent.width === 'string' ? parseInt(this.parent.width, 10) : this.parent.width) - tWidth;\n            }\n            else {\n                difference = this.parent.element.getBoundingClientRect().width - tWidth;\n            }\n            var tmWidth = 0;\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var cols = collection_1[_i];\n                tmWidth += !isNullOrUndefined(cols.minWidth) ?\n                    ((typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth)) : 0;\n            }\n            for (var i = 0; i < collection.length; i++) {\n                if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && (i !== collection.length - 1)) {\n                    this.setUndefinedColumnWidth(collection);\n                }\n                var index = this.parent.getColumnIndexByField(collection[i].field) + this.parent.getIndentCount();\n                if (tWidth !== 0 && difference < tmWidth) {\n                    this.setWidth(collection[i].minWidth, index);\n                }\n                else if (tWidth !== 0 && difference > tmWidth) {\n                    this.setWidth('', index, true);\n                }\n            }\n        }\n    };\n    ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n        for (var k = 0; k < collection.length; k++) {\n            if (k !== collection.length - 1) {\n                collection[k].width = 200;\n                this.setWidth(200, this.parent.getColumnIndexByField(collection[k].field));\n            }\n        }\n    };\n    ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n        if (this.parent.getColumns().length < 1) {\n            return;\n        }\n        var columnIndex = isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n        var cWidth = this.getWidth(column);\n        var tgridWidth = this.getTableWidth(this.parent.getColumns());\n        if (cWidth !== null) {\n            this.setWidth(cWidth, columnIndex);\n            if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n                this.setMinwidthBycalculation(tgridWidth);\n            }\n            if ((this.parent.allowResizing && module === 'resize') || (this.parent.getFrozenColumns() && this.parent.allowResizing)) {\n                this.setWidthToTable();\n            }\n            this.parent.notify(columnWidthChanged, { index: columnIndex, width: cWidth, column: column, module: module });\n        }\n    };\n    ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n        if (this.parent.groupSettings.columns.length > index && ispercentageWidth(this.parent)) {\n            var elementWidth = this.parent.element.offsetWidth;\n            width = (30 / elementWidth * 100).toFixed(1) + '%';\n        }\n        var header = this.parent.getHeaderTable();\n        var content = this.parent.getContentTable();\n        var fWidth = formatUnit(width);\n        var headerCol;\n        var frzCols = this.parent.getFrozenColumns();\n        var isDraggable = this.parent.isRowDragable();\n        frzCols = frzCols && isDraggable ? frzCols + 1 : frzCols;\n        var mHdr = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader);\n        var mCont = this.parent.getContent().querySelector('.' + literals.movableContent);\n        var freezeLeft = this.parent.getFrozenLeftColumnsCount();\n        var freezeRight = this.parent.getFrozenRightColumnsCount();\n        var movableCount = this.parent.getMovableColumnsCount();\n        var isColFrozen = freezeLeft !== 0 || freezeRight !== 0;\n        if (frzCols && index >= frzCols) {\n            if (!mHdr || !mHdr.querySelector(literals.colGroup)) {\n                return;\n            }\n            headerCol = mHdr.querySelector(literals.colGroup).children[index - frzCols];\n        }\n        else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis()\n            && mHdr.scrollLeft > 0) {\n            var colGroup = mHdr.querySelector(literals.colGroup);\n            headerCol = colGroup.children[(colGroup.children.length - 1) - index];\n        }\n        else if (isColFrozen) {\n            var target = void 0;\n            if (freezeLeft && !freezeRight) {\n                index = isDraggable ? index - 1 : index;\n                target = index < freezeLeft ? header : mHdr;\n            }\n            else if (!freezeLeft && freezeRight) {\n                target = index >= movableCount ? header : mHdr;\n            }\n            else if (freezeLeft && freezeRight) {\n                index = isDraggable ? index - 1 : index;\n                var frHdr = this.parent.getFrozenRightHeader();\n                target = index < freezeLeft ? header : index < (freezeLeft + movableCount) ? mHdr : frHdr;\n            }\n            headerCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n            if (!headerCol) {\n                return;\n            }\n        }\n        else {\n            headerCol = header.querySelector(literals.colGroup).children[index];\n        }\n        if (headerCol && !clear) {\n            headerCol.style.width = fWidth;\n        }\n        else if (headerCol && clear) {\n            headerCol.style.width = '';\n        }\n        var contentCol;\n        if (frzCols && index >= frzCols) {\n            contentCol = this.parent.getContent().querySelector('.' + literals.movableContent)\n                .querySelector(literals.colGroup).children[index - frzCols];\n        }\n        else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis()\n            && mCont.scrollLeft > 0) {\n            var colGroup = this.parent.getContent().querySelector('.' + literals.movableContent)\n                .querySelector(literals.colGroup);\n            contentCol = colGroup.children[(colGroup.children.length - 1) - index];\n        }\n        else if (isColFrozen) {\n            var target = void 0;\n            if (freezeLeft && !freezeRight) {\n                target = index < freezeLeft ? content : mCont;\n            }\n            if (!freezeLeft && freezeRight) {\n                target = index >= movableCount ? content : mCont;\n            }\n            if (freezeLeft && freezeRight) {\n                var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n                target = index < freezeLeft ? content : index < (freezeLeft + movableCount) ? mCont : frCont;\n            }\n            contentCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n        }\n        else {\n            contentCol = content.querySelector(literals.colGroup).children[index];\n        }\n        if (contentCol && !clear) {\n            contentCol.style.width = fWidth;\n        }\n        else if (contentCol && clear) {\n            contentCol.style.width = '';\n        }\n        if (!this.parent.enableColumnVirtualization) {\n            var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n            var editTableCol = [];\n            for (var i = 0; i < edit.length; i++) {\n                if (parentsUntil(edit[i], 'e-grid').id === this.parent.element.id) {\n                    for (var j = 0; j < edit[i].querySelector('colgroup').children.length; j++) {\n                        editTableCol.push(edit[i].querySelector('colgroup').children[j]);\n                    }\n                }\n            }\n            if (edit.length && editTableCol.length) {\n                editTableCol[index].style.width = fWidth;\n            }\n        }\n        if (this.parent.isFrozenGrid()) {\n            this.refreshFrozenScrollbar();\n        }\n    };\n    ColumnWidthService.prototype.getColumnLevelFrozenColgroup = function (index, left, movable, ele) {\n        if (!ele || !ele.querySelector(literals.colGroup)) {\n            return null;\n        }\n        var columns = this.parent.getColumns();\n        var isDrag = this.parent.isRowDragable();\n        var frzMode = this.parent.getFrozenMode();\n        var headerCol;\n        var colGroup = [].slice.call(ele.querySelector(literals.colGroup).children);\n        if (frzMode === 'Right' && isDrag && index === (movable + this.parent.getFrozenRightColumnsCount())) {\n            headerCol = colGroup[colGroup.length - 1];\n        }\n        else if (isDrag && index === -1) {\n            headerCol = colGroup[0];\n        }\n        else if (columns[index].freeze === 'Left') {\n            headerCol = colGroup[isDrag ? (index + 1) : index];\n        }\n        else if (columns[index].freeze === 'Right') {\n            headerCol = colGroup[index - (left + movable)];\n        }\n        else {\n            headerCol = colGroup[index - left];\n        }\n        return headerCol;\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n        var args = { cancel: false };\n        this.parent.notify(preventFrozenScrollRefresh, args);\n        if (args.cancel) {\n            return;\n        }\n        var scrollWidth = getScrollBarWidth();\n        var frozenScrollbar = this.parent.element.querySelector('.e-frozenscrollbar');\n        var movableScrollbar = this.parent.element.querySelector('.e-movablescrollbar');\n        var frozencontent = this.parent.getContent().querySelector('.' + literals.frozenContent);\n        var movableContent = this.parent.getContent().querySelector('.' + literals.movableContent);\n        var frozenWidth = frozencontent.firstElementChild.getBoundingClientRect().width;\n        var movableWidth = movableContent.firstElementChild.getBoundingClientRect().width;\n        if (this.parent.getFrozenMode() === 'Right') {\n            frozenWidth = frozenWidth + scrollWidth;\n        }\n        frozenScrollbar.style.width = frozenWidth + 'px';\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n            var frozenRightScrollbar = this.parent.element.querySelector('.e-frozen-right-scrollbar');\n            var frozenRightWidth = this.parent.getContent().querySelector('.e-frozen-right-content')\n                .firstElementChild.getBoundingClientRect().width;\n            if (this.parent.height !== 'auto') {\n                frozenRightWidth = frozenRightWidth + scrollWidth;\n            }\n            frozenRightScrollbar.style.width = frozenRightWidth + 'px';\n        }\n        else {\n            if (this.parent.enableColumnVirtualization) {\n                var placeHolder = this.parent.getMovableVirtualContent().querySelector('.e-virtualtrack');\n                if (placeHolder) {\n                    movableWidth = placeHolder.scrollWidth;\n                }\n            }\n            if (this.parent.getFrozenMode() !== 'Right' && this.parent.height !== 'auto') {\n                movableWidth = movableWidth + scrollWidth;\n            }\n        }\n        movableScrollbar.firstElementChild.style.width = movableWidth + 'px';\n    };\n    ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n        var previous = this.getHeightFromDirection(element, 'previous');\n        var next = this.getHeightFromDirection(element, 'next');\n        return previous + next;\n    };\n    ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n        var sibling = element[direction + 'ElementSibling'];\n        var result = 0;\n        var classList = [literals.gridHeader, literals.gridFooter, 'e-groupdroparea', 'e-gridpager', 'e-toolbar'];\n        while (sibling) {\n            if (classList.some(function (value) { return sibling.classList.contains(value); })) {\n                result += sibling.offsetHeight;\n            }\n            sibling = sibling[direction + 'ElementSibling'];\n        }\n        return result;\n    };\n    ColumnWidthService.prototype.isWidthUndefined = function () {\n        var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n            return isNullOrUndefined(col.width) && isNullOrUndefined(col.minWidth);\n        }).length;\n        return (this.parent.getColumns().length === isWidUndefCount);\n    };\n    ColumnWidthService.prototype.getWidth = function (column) {\n        if (isNullOrUndefined(column.width) && this.parent.allowResizing\n            && isNullOrUndefined(column.minWidth) && !this.isWidthUndefined()) {\n            column.width = 200;\n        }\n        if (this.parent.isFrozenGrid() && isNullOrUndefined(column.width) &&\n            (column.getFreezeTableName() === literals.frozenLeft || column.getFreezeTableName() === literals.frozenRight)) {\n            column.width = 200;\n        }\n        if (!column.width) {\n            return null;\n        }\n        var width = parseInt(column.width.toString(), 10);\n        if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n            return column.minWidth;\n        }\n        else if ((column.maxWidth && width > parseInt(column.maxWidth.toString(), 10))) {\n            return column.maxWidth;\n        }\n        else {\n            return column.width;\n        }\n    };\n    ColumnWidthService.prototype.getTableWidth = function (columns) {\n        var tWidth = 0;\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            var cWidth = this.getWidth(column);\n            if (column.width === 'auto') {\n                cWidth = 0;\n            }\n            if (column.visible !== false && cWidth !== null) {\n                tWidth += parseInt(cWidth.toString(), 10);\n            }\n        }\n        return tWidth;\n    };\n    ColumnWidthService.prototype.calcMovableOrFreezeColWidth = function (tableType) {\n        var columns = this.parent.getColumns().slice();\n        var left = this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenColumns();\n        var movable = this.parent.getMovableColumnsCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        if (tableType === 'movable') {\n            if (right) {\n                columns.splice(left + movable, columns.length);\n            }\n            if (left) {\n                columns.splice(0, left);\n            }\n        }\n        else if (tableType === 'freeze-left') {\n            columns.splice(left, columns.length);\n        }\n        else if (tableType === 'freeze-right') {\n            columns.splice(0, left + movable);\n        }\n        return formatUnit(this.getTableWidth(columns));\n    };\n    ColumnWidthService.prototype.setWidthToFrozenRightTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-right');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        var headerTbl = this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('.' + literals.table);\n        var cntTbl = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('.' + literals.table);\n        headerTbl.style.width = freezeWidth;\n        cntTbl.style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToFrozenLeftTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-left');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        this.parent.getHeaderTable().style.width = freezeWidth;\n        this.parent.getContentTable().style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToMovableTable = function () {\n        var movableWidth = '';\n        var isColUndefined = this.parent.getColumns().filter(function (a) { return isNullOrUndefined(a.width); }).length >= 1;\n        var isWidthAuto = this.parent.getColumns().filter(function (a) { return (a.width === 'auto'); }).length >= 1;\n        if (typeof this.parent.width === 'number' && !isColUndefined && !isWidthAuto) {\n            movableWidth = formatUnit(this.parent.width - parseInt(this.calcMovableOrFreezeColWidth('freeze').split('px')[0], 10) - 5);\n        }\n        else if (!isColUndefined && !isWidthAuto) {\n            movableWidth = this.calcMovableOrFreezeColWidth('movable');\n        }\n        movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n        if (this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).firstElementChild) {\n            this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).firstElementChild.style.width\n                = movableWidth;\n        }\n        this.parent.getContent().querySelector('.' + literals.movableContent).firstElementChild.style.width =\n            movableWidth;\n    };\n    ColumnWidthService.prototype.setWidthToFrozenEditTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        this.parent.element.querySelectorAll('.e-table.e-inline-edit')[0].style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToMovableEditTable = function () {\n        var movableWidth = this.calcMovableOrFreezeColWidth('movable');\n        movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n        this.parent.element.querySelectorAll('.e-table.e-inline-edit')[1].style.width = movableWidth;\n    };\n    ColumnWidthService.prototype.setWidthToTable = function () {\n        var tWidth = formatUnit(this.getTableWidth(this.parent.getColumns()));\n        if (this.parent.isFrozenGrid()) {\n            if (this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()) {\n                this.setWidthToFrozenLeftTable();\n            }\n            this.setWidthToMovableTable();\n            if (this.parent.getFrozenRightColumnsCount()) {\n                this.setWidthToFrozenRightTable();\n            }\n        }\n        else {\n            if (this.parent.detailTemplate || this.parent.childGrid) {\n                this.setColumnWidth(new Column({ width: '30px' }));\n            }\n            tWidth = this.isAutoResize() ? '100%' : tWidth;\n            this.parent.getHeaderTable().style.width = tWidth;\n            this.parent.getContentTable().style.width = tWidth;\n        }\n        var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n        if (edit && this.parent.getFrozenColumns()) {\n            this.setWidthToFrozenEditTable();\n            this.setWidthToMovableEditTable();\n        }\n        else if (edit) {\n            edit.style.width = tWidth;\n        }\n    };\n    ColumnWidthService.prototype.isAutoResize = function () {\n        return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n    };\n    return ColumnWidthService;\n}());\nexport { ColumnWidthService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}