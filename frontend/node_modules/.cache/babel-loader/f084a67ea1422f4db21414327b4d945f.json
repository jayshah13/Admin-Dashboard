{"ast":null,"code":"import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\n\nvar VirtualRowModelGenerator =\n/** @class */\nfunction () {\n  function VirtualRowModelGenerator(parent) {\n    this.cOffsets = {};\n    this.cache = {};\n    this.movableCache = {};\n    this.frozenRightCache = {};\n    this.rowCache = {};\n    this.data = {};\n    this.groups = {};\n    this.currentInfo = {};\n    this.parent = parent;\n    this.model = this.parent.pageSettings;\n    this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  }\n\n  VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n    var isFrozen = this.parent.isFrozenGrid();\n    var isManualRefresh = false;\n    var info = e.virtualInfo = e.virtualInfo || this.getData();\n    var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n    var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n    var result = [];\n    var indexes = this.getBlockIndexes(page);\n    var loadedBlocks = [];\n\n    if (this.currentInfo.blockIndexes) {\n      indexes = info.blockIndexes = e.virtualInfo.blockIndexes = this.includePrevPage ? this.currentInfo.blockIndexes.slice(1) : this.currentInfo.blockIndexes.slice(0, this.currentInfo.blockIndexes.length - 1);\n      isManualRefresh = true;\n    }\n\n    if (isFrozen && this.parent.getFrozenMode() !== literals.leftRight && !e.renderMovableContent || this.parent.getFrozenMode() === literals.leftRight && !e.renderMovableContent && !e.renderFrozenRightContent || !isFrozen) {\n      this.checkAndResetCache(e.requestType);\n    }\n\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n      var dataRows = this.parent.vcRows.filter(function (row) {\n        return row.isDataRow;\n      });\n\n      if (this.parent.isManualRefresh && dataRows.length === data['records'].length || !this.parent.isManualRefresh) {\n        return result = this.parent.vcRows;\n      }\n    }\n\n    if (this.parent.enableColumnVirtualization) {\n      for (var i = 0; i < info.blockIndexes.length; i++) {\n        if (this.isBlockAvailable(info.blockIndexes[i])) {\n          this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n        }\n\n        if (e.renderMovableContent && this.isMovableBlockAvailable(info.blockIndexes[i]) || e.renderFrozenRightContent && this.isFrozenRightBlockAvailable(info.blockIndexes[i])) {\n          var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n          cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(cache[info.blockIndexes[i]]);\n        }\n      }\n    }\n\n    var values = info.blockIndexes;\n\n    for (var i = 0; i < values.length; i++) {\n      if (!this.isBlockAvailable(values[i])) {\n        var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n        var rows = this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: startIdx\n        });\n\n        if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n          this.parent.vRows = rows;\n          this.parent.vcRows = rows;\n          this.parent.notify(events.refreshVirtualMaxPage, {});\n        }\n\n        var median = void 0;\n\n        if (isGroupAdaptive(this.parent)) {\n          this.getGroupVirtualRecordsByIndex(rows);\n        } else {\n          if (isManualRefresh) {\n            this.setBlockForManualRefresh(this.cache, indexes, rows);\n          } else {\n            median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n\n            if (!this.isBlockAvailable(indexes[0])) {\n              this.cache[indexes[0]] = rows.slice(0, median);\n            }\n\n            if (!this.isBlockAvailable(indexes[1])) {\n              this.cache[indexes[1]] = rows.slice(median);\n            }\n          }\n        }\n      }\n\n      if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n        this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n      }\n\n      if (e.renderMovableContent && !this.isMovableBlockAvailable(values[i]) || e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(values[i])) {\n        var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n        var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n        var rows = this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: startIdx\n        });\n\n        if (isManualRefresh) {\n          this.setBlockForManualRefresh(cache, indexes, rows);\n        } else {\n          var median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n\n          if (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[0]) || e.renderMovableContent && !this.isMovableBlockAvailable(indexes[0])) {\n            cache[indexes[0]] = rows.slice(0, median);\n          }\n\n          if (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[1]) || e.renderMovableContent && !this.isMovableBlockAvailable(indexes[1])) {\n            cache[indexes[1]] = rows.slice(median);\n          }\n        }\n      }\n\n      if (!e.renderMovableContent && !e.renderFrozenRightContent && this.cache[values[i]]) {\n        result.push.apply(result, this.cache[values[i]]);\n      } else {\n        var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n\n        if (cache[values[i]]) {\n          result.push.apply(result, cache[values[i]]);\n        }\n      }\n\n      if (this.isBlockAvailable(values[i])) {\n        loadedBlocks.push(values[i]);\n      }\n    }\n\n    info.blockIndexes = loadedBlocks;\n    var grouping = 'records';\n\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n      this.parent.currentViewData[grouping] = result.map(function (m) {\n        return m.data;\n      });\n    } else if (isFrozen) {\n      if (e.renderMovableContent && (this.parent.getFrozenMode() === 'Left' || this.parent.getFrozenMode() === 'Right' || this.parent.getFrozenColumns()) || e.renderFrozenRightContent) {\n        this.parent.currentViewData = result.map(function (m) {\n          return m.data;\n        });\n      }\n    } else {\n      this.parent.currentViewData = result.map(function (m) {\n        return m.data;\n      });\n    }\n\n    return result;\n  };\n\n  VirtualRowModelGenerator.prototype.setBlockForManualRefresh = function (cache, blocks, rows) {\n    var size = this.model.pageSize / 2;\n\n    if (this.includePrevPage) {\n      cache[blocks[0] - 1] = rows.slice(0, size);\n      cache[blocks[0]] = rows.slice(size, size * 2);\n      cache[blocks[1]] = rows.slice(size * 2, size * 3);\n      cache[blocks[2]] = rows.slice(size * 3, size * 4);\n    } else {\n      cache[blocks[0]] = rows.slice(0, size);\n      cache[blocks[1]] = rows.slice(size, size * 2);\n      cache[blocks[2]] = rows.slice(size * 2, size * 3);\n      cache[blocks[2] + 1] = rows.slice(size * 3, size * 4);\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n    return [page + (page - 1), page * 2];\n  };\n\n  VirtualRowModelGenerator.prototype.getPage = function (block) {\n    return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n  };\n\n  VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n    return value in this.cache;\n  };\n\n  VirtualRowModelGenerator.prototype.isMovableBlockAvailable = function (value) {\n    return value in this.movableCache;\n  };\n\n  VirtualRowModelGenerator.prototype.isFrozenRightBlockAvailable = function (value) {\n    return value in this.frozenRightCache;\n  };\n\n  VirtualRowModelGenerator.prototype.getData = function () {\n    return {\n      page: this.model.currentPage,\n      blockIndexes: this.getBlockIndexes(this.model.currentPage),\n      direction: 'down',\n      columnIndexes: this.parent.getColumnIndexesInView()\n    };\n  };\n\n  VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n    if (full === void 0) {\n      full = true;\n    }\n\n    var page = this.getPage(blk);\n    var even = blk % 2 === 0;\n    var index = (page - 1) * this.model.pageSize;\n    return full || !even ? index : index + ~~(this.model.pageSize / 2);\n  };\n\n  VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n    var _this = this;\n\n    if (content === void 0) {\n      content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent);\n    }\n\n    if (this.parent.isFrozenGrid()) {\n      content = content.querySelector('.' + literals.movableHeader);\n    }\n\n    var indexes = [];\n    var sLeft = content.scrollLeft | 0;\n    var keys = Object.keys(this.cOffsets);\n    var cWidth = content.getBoundingClientRect().width;\n    sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n    var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n    var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n    keys.some(function (offset) {\n      var iOffset = Number(offset);\n      var offsetVal = _this.cOffsets[offset];\n      var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n\n      if (border) {\n        indexes.push(iOffset);\n      }\n\n      return left + calWidth < offsetVal;\n    });\n    this.addFrozenIndex(indexes);\n    return indexes;\n  };\n\n  VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n    if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n      for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n        indexes.push(indexes[indexes.length - 1] + 1);\n      }\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n    var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete'];\n\n    if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n      actions.splice(actions.indexOf(action), 1);\n    }\n\n    var clear = actions.some(function (value) {\n      return action === value;\n    });\n\n    if (clear) {\n      this.cache = {};\n      this.data = {};\n      this.groups = {};\n      this.movableCache = {};\n      this.frozenRightCache = {};\n    }\n\n    return clear;\n  };\n\n  VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n    var _this = this;\n\n    var col = 0;\n    this.cOffsets = {};\n    var gLen = this.parent.groupSettings.columns.length;\n    var cols = this.parent.columns;\n    var cLen = cols.length;\n\n    var isVisible = function (column) {\n      return column.visible && (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible);\n    };\n\n    var c = this.parent.groupSettings.columns;\n\n    for (var i = 0; i < c.length; i++) {\n      this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n    } // eslint-disable-next-line prefer-spread\n\n\n    var blocks = Array.apply(null, Array(cLen)).map(function () {\n      return col++;\n    });\n\n    for (var j = 0; j < blocks.length; j++) {\n      blocks[j] = blocks[j] + gLen;\n      this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n    var currentFirst = current[0];\n    var rows = [];\n    var keys = Object.keys(this.cache);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (Number(keys[i]) < block) {\n        rows = rows.concat(this.cache[keys[i]]);\n      }\n    }\n\n    if (currentFirst && currentFirst.isDataRow || block % 2 === 0) {\n      return current;\n    }\n\n    return this.iterateGroup(current, rows);\n  };\n\n  VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n    var currentFirst = current[0];\n    var offset = 0;\n\n    if (currentFirst && currentFirst.isDataRow) {\n      return current;\n    }\n\n    var isPresent = current.some(function (row) {\n      return rows.some(function (oRow, index) {\n        var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field && oRow.data.key === row.data.key;\n\n        if (res) {\n          offset = index;\n        }\n\n        return res;\n      });\n    });\n\n    if (isPresent) {\n      current.shift();\n      current = this.iterateGroup(current, rows.slice(offset));\n    }\n\n    return current;\n  };\n\n  VirtualRowModelGenerator.prototype.getRows = function () {\n    var rows = [];\n    var keys = Object.keys(this.cache);\n\n    for (var i = 0; i < keys.length; i++) {\n      rows = rows.concat(this.cache[keys[i]]);\n    }\n\n    return rows;\n  };\n\n  VirtualRowModelGenerator.prototype.generateCells = function (foreignKeyData) {\n    var cells = [];\n    var cols = this.parent.columnModel;\n\n    for (var i = 0; i < cols.length; i++) {\n      cells.push(this.rowModelGenerator.generateCell(cols[i], null, null, null, null, foreignKeyData));\n    }\n\n    return cells;\n  };\n\n  VirtualRowModelGenerator.prototype.getGroupVirtualRecordsByIndex = function (rows) {\n    var blocks = this.parent.contentModule.getGroupedTotalBlocks();\n    var blockSize = this.parent.contentModule.getBlockSize();\n\n    for (var i = 1; i <= blocks; i++) {\n      var count = 0;\n      this.cache[i] = [];\n\n      for (var j = (i - 1) * blockSize; j < rows.length; j++) {\n        if (count === blockSize) {\n          break;\n        }\n\n        this.cache[i].push(rows[j]);\n\n        if (rows[j].isDataRow) {\n          count++;\n        }\n      }\n    }\n  };\n\n  return VirtualRowModelGenerator;\n}();\n\nexport { VirtualRowModelGenerator };","map":{"version":3,"names":["Browser","isNullOrUndefined","isGroupAdaptive","RowModelGenerator","GroupModelGenerator","events","literals","VirtualRowModelGenerator","parent","cOffsets","cache","movableCache","frozenRightCache","rowCache","data","groups","currentInfo","model","pageSettings","rowModelGenerator","allowGrouping","prototype","generateRows","e","isFrozen","isFrozenGrid","isManualRefresh","info","virtualInfo","getData","xAxis","sentinelInfo","axis","page","loadNext","loadSelf","nextInfo","result","indexes","getBlockIndexes","loadedBlocks","blockIndexes","includePrevPage","slice","length","getFrozenMode","leftRight","renderMovableContent","renderFrozenRightContent","checkAndResetCache","requestType","vcRows","dataRows","filter","row","isDataRow","enableColumnVirtualization","i","isBlockAvailable","refreshRows","isMovableBlockAvailable","isFrozenRightBlockAvailable","values","startIdx","startIndex","getStartIndex","rows","vRows","notify","refreshVirtualMaxPage","median","getGroupVirtualRecordsByIndex","setBlockForManualRefresh","Math","max","pageSize","groupSettings","columns","updateGroupRow","push","apply","grouping","currentViewData","map","m","getFrozenColumns","blocks","size","getPage","block","value","currentPage","direction","columnIndexes","getColumnIndexesInView","blk","full","even","index","getColumnIndexes","content","_this","getHeaderContent","querySelector","headerContent","movableHeader","sLeft","scrollLeft","keys","Object","cWidth","getBoundingClientRect","width","min","calWidth","isDevice","left","some","offset","iOffset","Number","offsetVal","border","addFrozenIndex","action","actions","frozenRows","splice","indexOf","clear","refreshColOffsets","col","gLen","cols","cLen","isVisible","column","visible","showGroupedColumn","field","c","Array","j","parseInt","current","currentFirst","concat","iterateGroup","isPresent","oRow","res","undefined","key","shift","getRows","generateCells","foreignKeyData","cells","columnModel","generateCell","contentModule","getGroupedTotalBlocks","blockSize","getBlockSize","count"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/services/virtual-row-model-generator.js"],"sourcesContent":["import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */ (function () {\n    function VirtualRowModelGenerator(parent) {\n        this.cOffsets = {};\n        this.cache = {};\n        this.movableCache = {};\n        this.frozenRightCache = {};\n        this.rowCache = {};\n        this.data = {};\n        this.groups = {};\n        this.currentInfo = {};\n        this.parent = parent;\n        this.model = this.parent.pageSettings;\n        this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    }\n    VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        var isManualRefresh = false;\n        var info = e.virtualInfo = e.virtualInfo || this.getData();\n        var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n        var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n        var result = [];\n        var indexes = this.getBlockIndexes(page);\n        var loadedBlocks = [];\n        if (this.currentInfo.blockIndexes) {\n            indexes = info.blockIndexes = e.virtualInfo.blockIndexes = this.includePrevPage ? this.currentInfo.blockIndexes.slice(1)\n                : this.currentInfo.blockIndexes.slice(0, this.currentInfo.blockIndexes.length - 1);\n            isManualRefresh = true;\n        }\n        if ((isFrozen && (this.parent.getFrozenMode() !== literals.leftRight && !e.renderMovableContent)\n            || this.parent.getFrozenMode() === literals.leftRight && !e.renderMovableContent && !e.renderFrozenRightContent) || !isFrozen) {\n            this.checkAndResetCache(e.requestType);\n        }\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n            var dataRows = this.parent.vcRows.filter(function (row) { return row.isDataRow; });\n            if ((this.parent.isManualRefresh && dataRows.length === data['records'].length) || !this.parent.isManualRefresh) {\n                return result = this.parent.vcRows;\n            }\n        }\n        if (this.parent.enableColumnVirtualization) {\n            for (var i = 0; i < info.blockIndexes.length; i++) {\n                if (this.isBlockAvailable(info.blockIndexes[i])) {\n                    this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n                }\n                if ((e.renderMovableContent && this.isMovableBlockAvailable(info.blockIndexes[i]))\n                    || (e.renderFrozenRightContent && this.isFrozenRightBlockAvailable(info.blockIndexes[i]))) {\n                    var cache = e.renderMovableContent\n                        ? this.movableCache : this.frozenRightCache;\n                    cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(cache[info.blockIndexes[i]]);\n                }\n            }\n        }\n        var values = info.blockIndexes;\n        for (var i = 0; i < values.length; i++) {\n            if (!this.isBlockAvailable(values[i])) {\n                var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n                var rows = this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: startIdx\n                });\n                if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n                    this.parent.vRows = rows;\n                    this.parent.vcRows = rows;\n                    this.parent.notify(events.refreshVirtualMaxPage, {});\n                }\n                var median = void 0;\n                if (isGroupAdaptive(this.parent)) {\n                    this.getGroupVirtualRecordsByIndex(rows);\n                }\n                else {\n                    if (isManualRefresh) {\n                        this.setBlockForManualRefresh(this.cache, indexes, rows);\n                    }\n                    else {\n                        median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                        if (!this.isBlockAvailable(indexes[0])) {\n                            this.cache[indexes[0]] = rows.slice(0, median);\n                        }\n                        if (!this.isBlockAvailable(indexes[1])) {\n                            this.cache[indexes[1]] = rows.slice(median);\n                        }\n                    }\n                }\n            }\n            if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n                this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n            }\n            if ((e.renderMovableContent && !this.isMovableBlockAvailable(values[i]))\n                || (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(values[i]))) {\n                var cache = e.renderMovableContent\n                    ? this.movableCache : this.frozenRightCache;\n                var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n                var rows = this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: startIdx\n                });\n                if (isManualRefresh) {\n                    this.setBlockForManualRefresh(cache, indexes, rows);\n                }\n                else {\n                    var median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                    if ((e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[0]))\n                        || (e.renderMovableContent && !this.isMovableBlockAvailable(indexes[0]))) {\n                        cache[indexes[0]] = rows.slice(0, median);\n                    }\n                    if ((e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[1]))\n                        || (e.renderMovableContent && !this.isMovableBlockAvailable(indexes[1]))) {\n                        cache[indexes[1]] = rows.slice(median);\n                    }\n                }\n            }\n            if (!e.renderMovableContent && !e.renderFrozenRightContent && this.cache[values[i]]) {\n                result.push.apply(result, this.cache[values[i]]);\n            }\n            else {\n                var cache = e.renderMovableContent\n                    ? this.movableCache : this.frozenRightCache;\n                if (cache[values[i]]) {\n                    result.push.apply(result, cache[values[i]]);\n                }\n            }\n            if (this.isBlockAvailable(values[i])) {\n                loadedBlocks.push(values[i]);\n            }\n        }\n        info.blockIndexes = loadedBlocks;\n        var grouping = 'records';\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n            this.parent.currentViewData[grouping] = result.map(function (m) { return m.data; });\n        }\n        else if (isFrozen) {\n            if ((e.renderMovableContent && (this.parent.getFrozenMode() === 'Left'\n                || this.parent.getFrozenMode() === 'Right' || this.parent.getFrozenColumns())) || e.renderFrozenRightContent) {\n                this.parent.currentViewData = result.map(function (m) { return m.data; });\n            }\n        }\n        else {\n            this.parent.currentViewData = result.map(function (m) { return m.data; });\n        }\n        return result;\n    };\n    VirtualRowModelGenerator.prototype.setBlockForManualRefresh = function (cache, blocks, rows) {\n        var size = this.model.pageSize / 2;\n        if (this.includePrevPage) {\n            cache[blocks[0] - 1] = rows.slice(0, size);\n            cache[blocks[0]] = rows.slice(size, size * 2);\n            cache[blocks[1]] = rows.slice(size * 2, size * 3);\n            cache[blocks[2]] = rows.slice(size * 3, size * 4);\n        }\n        else {\n            cache[blocks[0]] = rows.slice(0, size);\n            cache[blocks[1]] = rows.slice(size, size * 2);\n            cache[blocks[2]] = rows.slice(size * 2, size * 3);\n            cache[blocks[2] + 1] = rows.slice(size * 3, size * 4);\n        }\n    };\n    VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n        return [page + (page - 1), page * 2];\n    };\n    VirtualRowModelGenerator.prototype.getPage = function (block) {\n        return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n    };\n    VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n        return value in this.cache;\n    };\n    VirtualRowModelGenerator.prototype.isMovableBlockAvailable = function (value) {\n        return value in this.movableCache;\n    };\n    VirtualRowModelGenerator.prototype.isFrozenRightBlockAvailable = function (value) {\n        return value in this.frozenRightCache;\n    };\n    VirtualRowModelGenerator.prototype.getData = function () {\n        return {\n            page: this.model.currentPage,\n            blockIndexes: this.getBlockIndexes(this.model.currentPage),\n            direction: 'down',\n            columnIndexes: this.parent.getColumnIndexesInView()\n        };\n    };\n    VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n        if (full === void 0) { full = true; }\n        var page = this.getPage(blk);\n        var even = blk % 2 === 0;\n        var index = (page - 1) * this.model.pageSize;\n        return full || !even ? index : index + ~~(this.model.pageSize / 2);\n    };\n    VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n        var _this = this;\n        if (content === void 0) { content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent); }\n        if (this.parent.isFrozenGrid()) {\n            content = content.querySelector('.' + literals.movableHeader);\n        }\n        var indexes = [];\n        var sLeft = content.scrollLeft | 0;\n        var keys = Object.keys(this.cOffsets);\n        var cWidth = content.getBoundingClientRect().width;\n        sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n        var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n        var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n        keys.some(function (offset) {\n            var iOffset = Number(offset);\n            var offsetVal = _this.cOffsets[offset];\n            var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n            if (border) {\n                indexes.push(iOffset);\n            }\n            return left + calWidth < offsetVal;\n        });\n        this.addFrozenIndex(indexes);\n        return indexes;\n    };\n    VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n        if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n            for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n                indexes.push(indexes[indexes.length - 1] + 1);\n            }\n        }\n    };\n    VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder',\n            'save', 'delete'];\n        if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n            actions.splice(actions.indexOf(action), 1);\n        }\n        var clear = actions.some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n            this.movableCache = {};\n            this.frozenRightCache = {};\n        }\n        return clear;\n    };\n    VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n        var _this = this;\n        var col = 0;\n        this.cOffsets = {};\n        var gLen = this.parent.groupSettings.columns.length;\n        var cols = this.parent.columns;\n        var cLen = cols.length;\n        var isVisible = function (column) { return column.visible &&\n            (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible); };\n        var c = this.parent.groupSettings.columns;\n        for (var i = 0; i < c.length; i++) {\n            this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n        }\n        // eslint-disable-next-line prefer-spread\n        var blocks = Array.apply(null, Array(cLen)).map(function () { return col++; });\n        for (var j = 0; j < blocks.length; j++) {\n            blocks[j] = blocks[j] + gLen;\n            this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n        }\n    };\n    VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n        var currentFirst = current[0];\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            if (Number(keys[i]) < block) {\n                rows = rows.concat(this.cache[keys[i]]);\n            }\n        }\n        if ((currentFirst && currentFirst.isDataRow) || block % 2 === 0) {\n            return current;\n        }\n        return this.iterateGroup(current, rows);\n    };\n    VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n        var currentFirst = current[0];\n        var offset = 0;\n        if (currentFirst && currentFirst.isDataRow) {\n            return current;\n        }\n        var isPresent = current.some(function (row) {\n            return rows.some(function (oRow, index) {\n                var res = oRow && oRow.data.field !== undefined\n                    && oRow.data.field === row.data.field &&\n                    oRow.data.key === row.data.key;\n                if (res) {\n                    offset = index;\n                }\n                return res;\n            });\n        });\n        if (isPresent) {\n            current.shift();\n            current = this.iterateGroup(current, rows.slice(offset));\n        }\n        return current;\n    };\n    VirtualRowModelGenerator.prototype.getRows = function () {\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            rows = rows.concat(this.cache[keys[i]]);\n        }\n        return rows;\n    };\n    VirtualRowModelGenerator.prototype.generateCells = function (foreignKeyData) {\n        var cells = [];\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            cells.push(this.rowModelGenerator.generateCell(cols[i], null, null, null, null, foreignKeyData));\n        }\n        return cells;\n    };\n    VirtualRowModelGenerator.prototype.getGroupVirtualRecordsByIndex = function (rows) {\n        var blocks = this.parent.contentModule.getGroupedTotalBlocks();\n        var blockSize = this.parent.contentModule.getBlockSize();\n        for (var i = 1; i <= blocks; i++) {\n            var count = 0;\n            this.cache[i] = [];\n            for (var j = ((i - 1) * blockSize); j < rows.length; j++) {\n                if (count === blockSize) {\n                    break;\n                }\n                this.cache[i].push(rows[j]);\n                if (rows[j].isDataRow) {\n                    count++;\n                }\n            }\n        }\n    };\n    return VirtualRowModelGenerator;\n}());\nexport { VirtualRowModelGenerator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}