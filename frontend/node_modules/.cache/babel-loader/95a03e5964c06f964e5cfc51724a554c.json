{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable no-case-declarations */\n\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-param */\n\n\nimport { ChartLocation, ControlPoints } from '../../common/utils/helper';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LineBase } from './line-base';\n/**\n * render Line series\n */\n\nvar SplineBase =\n/** @class */\nfunction (_super) {\n  __extends(SplineBase, _super);\n  /** @private */\n\n\n  function SplineBase(chartModule) {\n    var _this = _super.call(this, chartModule) || this;\n\n    _this.splinePoints = [];\n    _this.lowSplinePoints = [];\n    return _this;\n  }\n  /**\n   * To find the control points for spline.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  SplineBase.prototype.findSplinePoint = function (series) {\n    var value;\n    var lowPoints;\n    var realPoints = [];\n    var points = [];\n    var point;\n    var pointIndex = 0;\n    realPoints = this.filterEmptyPoints(series);\n\n    for (var i = 0; i < realPoints.length; i++) {\n      point = realPoints[i];\n\n      if (point.x === null || point.x === '') {\n        continue;\n      } else {\n        point.index = pointIndex;\n        pointIndex++;\n        points.push(point);\n      }\n    }\n\n    var isLow = false;\n    this.splinePoints = this.findSplineCoefficients(points, series, isLow);\n\n    if (series.type === \"SplineRangeArea\") {\n      isLow = !isLow;\n      this.lowSplinePoints = this.findSplineCoefficients(points, series, isLow);\n    }\n\n    if (points.length > 1) {\n      series.drawPoints = [];\n      series.lowDrawPoints = [];\n\n      for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point_1 = points_1[_i];\n\n        if (point_1.index !== 0) {\n          var previous = this.getPreviousIndex(points, point_1.index - 1, series);\n\n          if (series.type === \"SplineRangeArea\") {\n            points[previous].yValue = points[previous].high > points[previous].low ? points[previous].high : points[previous].low;\n            point_1.yValue = point_1.high > point_1.low ? point_1.high : point_1.low;\n          }\n\n          value = this.getControlPoints(points[previous], point_1, this.splinePoints[previous], this.splinePoints[point_1.index], series);\n          series.drawPoints.push(value);\n\n          if (series.type === \"SplineRangeArea\") {\n            points[previous].yValue = points[previous].low < points[previous].high ? points[previous].low : points[previous].high;\n            point_1.yValue = point_1.low < point_1.high ? point_1.low : point_1.high;\n            lowPoints = this.getControlPoints(points[previous], point_1, this.lowSplinePoints[previous], this.lowSplinePoints[point_1.index], series);\n            series.lowDrawPoints.push(lowPoints);\n          } // fix for Y-Axis of Spline chart not adjusting scale to suit dataSource issue\n\n\n          var delta = series.yMax - series.yMin;\n\n          if (point_1.yValue && value.controlPoint1.y && value.controlPoint2.y && delta > 1) {\n            series.yMin = Math.min(series.yMin, point_1.yValue, value.controlPoint1.y, value.controlPoint2.y);\n            series.yMax = Math.ceil(Math.max(series.yMax, point_1.yValue, value.controlPoint1.y, value.controlPoint2.y));\n            series.yMin = series.yAxis.valueType !== 'Logarithmic' ? Math.floor(series.yMin) : series.yMin;\n          }\n        }\n      }\n\n      if (series.chart.chartAreaType === 'PolarRadar' && series.isClosed) {\n        value = this.getControlPoints({\n          xValue: points[points.length - 1].xValue,\n          yValue: points[points.length - 1].yValue\n        }, {\n          xValue: points[points.length - 1].xValue + 1,\n          yValue: points[0].yValue\n        }, this.splinePoints[0], this.splinePoints[points[points.length - 1].index], series);\n        series.drawPoints.push(value);\n      }\n    }\n  };\n\n  SplineBase.prototype.getPreviousIndex = function (points, i, series) {\n    if (series.emptyPointSettings.mode !== 'Drop') {\n      return i;\n    }\n\n    while (isNullOrUndefined(points[i]) && i > -1) {\n      i = i - 1;\n    }\n\n    return i;\n  };\n\n  SplineBase.prototype.getNextIndex = function (points, i, series) {\n    if (series.emptyPointSettings.mode !== 'Drop') {\n      return i;\n    }\n\n    while (isNullOrUndefined(points[i]) && i < points.length) {\n      i = i + 1;\n    }\n\n    return i;\n  };\n\n  SplineBase.prototype.filterEmptyPoints = function (series, seriesPoints) {\n    if (series.emptyPointSettings.mode !== 'Drop' && this.isPointInRange(series.points)) {\n      return seriesPoints ? seriesPoints : series.points;\n    }\n\n    var points = seriesPoints ? seriesPoints : extend([], series.points, null, true);\n\n    for (var i = 0; i < points.length; i++) {\n      points[i].index = i;\n\n      if (points[i].isEmpty) {\n        points[i].symbolLocations = [];\n        points[i].regions = [];\n        points.splice(i, 1);\n        i--;\n      }\n    }\n\n    return points;\n  };\n  /**\n   * To find points in the range\n   *\n   * @private\n   */\n\n\n  SplineBase.prototype.isPointInRange = function (points) {\n    for (var _i = 0, points_2 = points; _i < points_2.length; _i++) {\n      var point = points_2[_i];\n\n      if (!point.isPointInRange) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * To find the natural spline.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  SplineBase.prototype.findSplineCoefficients = function (points, series, isLow) {\n    var ySpline = [];\n    var ySplineDuplicate = [];\n    var cardinalSplineTension = series.cardinalSplineTension ? series.cardinalSplineTension : 0.5;\n    cardinalSplineTension = cardinalSplineTension < 0 ? 0 : cardinalSplineTension > 1 ? 1 : cardinalSplineTension;\n\n    switch (series.splineType) {\n      case 'Monotonic':\n        ySpline = this.monotonicSplineCoefficients(points, series, isLow);\n        break;\n\n      case 'Cardinal':\n        ySpline = this.cardinalSplineCofficients(points, series, isLow);\n        break;\n\n      default:\n        if (series.splineType === 'Clamped') {\n          ySpline = this.clampedSplineCofficients(points, series, isLow);\n        } else {\n          // assigning the first and last value as zero\n          ySpline[0] = ySplineDuplicate[0] = 0;\n          ySpline[points.length - 1] = 0;\n        }\n\n        ySpline = this.naturalSplineCoefficients(points, series, isLow);\n        break;\n    }\n\n    return ySpline;\n  };\n  /**\n   *  To find Monotonic Spline Coefficients\n   */\n\n\n  SplineBase.prototype.monotonicSplineCoefficients = function (points, series, isLow) {\n    var count = points.length;\n    var ySpline = [];\n    var dx = [];\n    var dy = [];\n    var slope = [];\n    var interPoint;\n    var slopeLength;\n\n    for (var i = 0; i < count - 1; i++) {\n      if (series.type === \"SplineRangeArea\") {\n        if (!isLow) {\n          points[i + 1].yValue = points[i + 1].high > points[i + 1].low ? points[i + 1].high : points[i + 1].low;\n          points[i].yValue = points[i].high > points[i].low ? points[i].high : points[i].low;\n        }\n\n        if (isLow) {\n          points[i + 1].yValue = points[i + 1].low < points[i + 1].high ? points[i + 1].low : points[i + 1].high;\n          points[i].yValue = points[i].low < points[i].high ? points[i].low : points[i].high;\n        }\n      }\n\n      dx[i] = points[i + 1].xValue - points[i].xValue;\n      dy[i] = points[i + 1].yValue - points[i].yValue;\n      slope[i] = dy[i] / dx[i];\n    } //interpolant points\n\n\n    slopeLength = slope.length; // to find the first and last co-efficient value\n\n    ySpline[0] = slope[0];\n    ySpline[count - 1] = slope[slopeLength - 1]; //to find the other co-efficient values\n\n    for (var j = 0; j < dx.length; j++) {\n      if (slopeLength > j + 1) {\n        if (slope[j] * slope[j + 1] <= 0) {\n          ySpline[j + 1] = 0;\n        } else {\n          interPoint = dx[j] + dx[j + 1];\n          ySpline[j + 1] = 3 * interPoint / ((interPoint + dx[j + 1]) / slope[j] + (interPoint + dx[j]) / slope[j + 1]);\n        }\n      }\n    }\n\n    return ySpline;\n  };\n  /**\n   * To find Cardinal Spline Coefficients\n   */\n\n\n  SplineBase.prototype.cardinalSplineCofficients = function (points, series, isLow) {\n    var count = points.length;\n    var ySpline = [];\n    var cardinalSplineTension = series.cardinalSplineTension ? series.cardinalSplineTension : 0.5;\n    cardinalSplineTension = cardinalSplineTension < 0 ? 0 : cardinalSplineTension > 1 ? 1 : cardinalSplineTension;\n\n    for (var i = 0; i < count; i++) {\n      if (i === 0) {\n        ySpline[i] = count > 2 ? cardinalSplineTension * (points[i + 2].xValue - points[i].xValue) : 0;\n      } else if (i === count - 1) {\n        ySpline[i] = count > 2 ? cardinalSplineTension * (points[count - 1].xValue - points[count - 3].xValue) : 0;\n      } else {\n        ySpline[i] = cardinalSplineTension * (points[i + 1].xValue - points[i - 1].xValue);\n      }\n    }\n\n    return ySpline;\n  };\n  /**\n   * To find Clamped Spline Coefficients\n   */\n\n\n  SplineBase.prototype.clampedSplineCofficients = function (points, series, isLow) {\n    var count = points.length;\n    var ySpline = [];\n    var ySplineDuplicate = [];\n\n    for (var i = 0; i < count - 1; i++) {\n      if (series.type === \"SplineRangeArea\") {\n        if (!isLow) {\n          points[1].yValue = points[1].high > points[1].low ? points[1].high : points[1].low;\n          points[0].yValue = points[0].high > points[0].low ? points[0].high : points[0].low;\n          points[points.length - 1].yValue = points[points.length - 1].high > points[points.length - 1].low ? points[points.length - 1].high : points[points.length - 1].low;\n          points[points.length - 2].yValue = points[points.length - 2].high > points[points.length - 2].low ? points[points.length - 2].high : points[points.length - 2].low;\n        }\n\n        if (isLow) {\n          points[1].yValue = points[1].low < points[1].high ? points[1].low : points[1].high;\n          points[0].yValue = points[0].low < points[0].high ? points[0].low : points[0].high;\n          points[points.length - 1].yValue = points[points.length - 1].low < points[points.length - 1].high ? points[points.length - 1].low : points[points.length - 1].high;\n          points[points.length - 2].yValue = points[points.length - 2].low < points[points.length - 2].high ? points[points.length - 2].low : points[points.length - 2].high;\n        }\n      }\n\n      ySpline[0] = 3 * (points[1].yValue - points[0].yValue) / (points[1].xValue - points[0].xValue) - 3;\n      ySplineDuplicate[0] = 0.5;\n      ySpline[points.length - 1] = 3 * (points[points.length - 1].yValue - points[points.length - 2].yValue) / (points[points.length - 1].xValue - points[points.length - 2].xValue);\n      ySpline[0] = ySplineDuplicate[0] = Math.abs(ySpline[0]) === Infinity ? 0 : ySpline[0];\n      ySpline[points.length - 1] = ySplineDuplicate[points.length - 1] = Math.abs(ySpline[points.length - 1]) === Infinity ? 0 : ySpline[points.length - 1];\n    }\n\n    return ySpline;\n  };\n  /**\n   * To find Natural Spline Coefficients\n   */\n\n\n  SplineBase.prototype.naturalSplineCoefficients = function (points, series, isLow) {\n    var count = points.length;\n    var ySpline = [];\n    var ySplineDuplicate = [];\n    var dy1;\n    var dy2;\n    var coefficient1;\n    var coefficient2;\n    var coefficient3;\n    ySpline[0] = ySplineDuplicate[0] = 0;\n    ySpline[points.length - 1] = 0;\n\n    for (var i = 1; i < count - 1; i++) {\n      if (series.type === \"SplineRangeArea\") {\n        if (!isLow) {\n          points[i + 1].yValue = points[i + 1].low > points[i + 1].high ? points[i + 1].low : points[i + 1].high;\n          points[i].yValue = points[i].low > points[i].high ? points[i].low : points[i].high;\n          points[i - 1].yValue = points[i - 1].low > points[i - 1].high ? points[i - 1].low : points[i - 1].high;\n        }\n\n        if (isLow) {\n          points[i + 1].yValue = points[i + 1].high < points[i + 1].low ? points[i + 1].high : points[i + 1].low;\n          points[i].yValue = points[i].high < points[i].low ? points[i].high : points[i].low;\n          points[i - 1].yValue = points[i - 1].high < points[i - 1].low ? points[i - 1].high : points[i - 1].low;\n        }\n      }\n\n      coefficient1 = points[i].xValue - points[i - 1].xValue;\n      coefficient2 = points[i + 1].xValue - points[i - 1].xValue;\n      coefficient3 = points[i + 1].xValue - points[i].xValue;\n      dy1 = points[i + 1].yValue - points[i].yValue || null;\n      dy2 = points[i].yValue - points[i - 1].yValue || null;\n\n      if (coefficient1 === 0 || coefficient2 === 0 || coefficient3 === 0) {\n        ySpline[i] = 0;\n        ySplineDuplicate[i] = 0;\n      } else {\n        var p = 1 / (coefficient1 * ySpline[i - 1] + 2 * coefficient2);\n        ySpline[i] = -p * coefficient3;\n        ySplineDuplicate[i] = p * (6 * (dy1 / coefficient3 - dy2 / coefficient1) - coefficient1 * ySplineDuplicate[i - 1]);\n      }\n    }\n\n    for (var k = count - 2; k >= 0; k--) {\n      ySpline[k] = ySpline[k] * ySpline[k + 1] + ySplineDuplicate[k];\n    }\n\n    return ySpline;\n  };\n  /**\n   * To find the control points for spline.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  SplineBase.prototype.getControlPoints = function (point1, point2, ySpline1, ySpline2, series) {\n    var controlPoint1;\n    var controlPoint2;\n    var point;\n    var ySplineDuplicate1 = ySpline1;\n    var ySplineDuplicate2 = ySpline2;\n    var xValue1 = point1.xValue;\n    var yValue1 = point1.yValue;\n    var xValue2 = point2.xValue;\n    var yValue2 = point2.yValue;\n\n    switch (series.splineType) {\n      case 'Cardinal':\n        if (series.xAxis.valueType === 'DateTime') {\n          ySplineDuplicate1 = ySpline1 / this.dateTimeInterval(series);\n          ySplineDuplicate2 = ySpline2 / this.dateTimeInterval(series);\n        }\n\n        controlPoint1 = new ChartLocation(xValue1 + ySpline1 / 3, yValue1 + ySplineDuplicate1 / 3);\n        controlPoint2 = new ChartLocation(xValue2 - ySpline2 / 3, yValue2 - ySplineDuplicate2 / 3);\n        point = new ControlPoints(controlPoint1, controlPoint2);\n        break;\n\n      case 'Monotonic':\n        var value = (xValue2 - xValue1) / 3;\n        controlPoint1 = new ChartLocation(xValue1 + value, yValue1 + ySpline1 * value);\n        controlPoint2 = new ChartLocation(xValue2 - value, yValue2 - ySpline2 * value);\n        point = new ControlPoints(controlPoint1, controlPoint2);\n        break;\n\n      default:\n        var one3 = 1 / 3.0;\n        var deltaX2 = xValue2 - xValue1;\n        deltaX2 = deltaX2 * deltaX2;\n        var y1 = one3 * (2 * yValue1 + yValue2 - one3 * deltaX2 * (ySpline1 + 0.5 * ySpline2));\n        var y2 = one3 * (yValue1 + 2 * yValue2 - one3 * deltaX2 * (0.5 * ySpline1 + ySpline2));\n        controlPoint1 = new ChartLocation((2 * xValue1 + xValue2) * one3, y1);\n        controlPoint2 = new ChartLocation((xValue1 + 2 * xValue2) * one3, y2);\n        point = new ControlPoints(controlPoint1, controlPoint2);\n        break;\n    }\n\n    return point;\n  };\n  /**\n   * calculate datetime interval in hours\n   */\n\n\n  SplineBase.prototype.dateTimeInterval = function (series) {\n    var interval = series.xAxis.actualIntervalType;\n    var intervalInMilliseconds;\n\n    if (interval === 'Years') {\n      intervalInMilliseconds = 365 * 24 * 60 * 60 * 1000;\n    } else if (interval === 'Months') {\n      intervalInMilliseconds = 30 * 24 * 60 * 60 * 1000;\n    } else if (interval === 'Days') {\n      intervalInMilliseconds = 24 * 60 * 60 * 1000;\n    } else if (interval === 'Hours') {\n      intervalInMilliseconds = 60 * 60 * 1000;\n    } else if (interval === 'Minutes') {\n      intervalInMilliseconds = 60 * 1000;\n    } else if (interval === 'Seconds') {\n      intervalInMilliseconds = 1000;\n    } else {\n      intervalInMilliseconds = 30 * 24 * 60 * 60 * 1000;\n    }\n\n    return intervalInMilliseconds;\n  };\n  /**\n   * Animates the series.\n   *\n   * @param  {Series} series - Defines the series to animate.\n   * @returns {void}\n   */\n\n\n  SplineBase.prototype.doAnimation = function (series) {\n    var option = series.animation;\n    this.doLinearAnimation(series, option);\n  };\n\n  return SplineBase;\n}(LineBase);\n\nexport { SplineBase };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ChartLocation","ControlPoints","extend","isNullOrUndefined","LineBase","SplineBase","_super","chartModule","_this","call","splinePoints","lowSplinePoints","findSplinePoint","series","value","lowPoints","realPoints","points","point","pointIndex","filterEmptyPoints","i","length","x","index","push","isLow","findSplineCoefficients","type","drawPoints","lowDrawPoints","_i","points_1","point_1","previous","getPreviousIndex","yValue","high","low","getControlPoints","delta","yMax","yMin","controlPoint1","y","controlPoint2","Math","min","ceil","max","yAxis","valueType","floor","chart","chartAreaType","isClosed","xValue","emptyPointSettings","mode","getNextIndex","seriesPoints","isPointInRange","isEmpty","symbolLocations","regions","splice","points_2","ySpline","ySplineDuplicate","cardinalSplineTension","splineType","monotonicSplineCoefficients","cardinalSplineCofficients","clampedSplineCofficients","naturalSplineCoefficients","count","dx","dy","slope","interPoint","slopeLength","j","abs","Infinity","dy1","dy2","coefficient1","coefficient2","coefficient3","k","point1","point2","ySpline1","ySpline2","ySplineDuplicate1","ySplineDuplicate2","xValue1","yValue1","xValue2","yValue2","xAxis","dateTimeInterval","one3","deltaX2","y1","y2","interval","actualIntervalType","intervalInMilliseconds","doAnimation","option","animation","doLinearAnimation"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-charts/src/chart/series/spline-base.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable no-case-declarations */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { ChartLocation, ControlPoints } from '../../common/utils/helper';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LineBase } from './line-base';\n/**\n * render Line series\n */\nvar SplineBase = /** @class */ (function (_super) {\n    __extends(SplineBase, _super);\n    /** @private */\n    function SplineBase(chartModule) {\n        var _this = _super.call(this, chartModule) || this;\n        _this.splinePoints = [];\n        _this.lowSplinePoints = [];\n        return _this;\n    }\n    /**\n     * To find the control points for spline.\n     *\n     * @returns {void}\n     * @private\n     */\n    SplineBase.prototype.findSplinePoint = function (series) {\n        var value;\n        var lowPoints;\n        var realPoints = [];\n        var points = [];\n        var point;\n        var pointIndex = 0;\n        realPoints = this.filterEmptyPoints(series);\n        for (var i = 0; i < realPoints.length; i++) {\n            point = realPoints[i];\n            if (point.x === null || point.x === '') {\n                continue;\n            }\n            else {\n                point.index = pointIndex;\n                pointIndex++;\n                points.push(point);\n            }\n        }\n        var isLow = false;\n        this.splinePoints = this.findSplineCoefficients(points, series, isLow);\n        if (series.type === \"SplineRangeArea\") {\n            isLow = !isLow;\n            this.lowSplinePoints = this.findSplineCoefficients(points, series, isLow);\n        }\n        if (points.length > 1) {\n            series.drawPoints = [];\n            series.lowDrawPoints = [];\n            for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                var point_1 = points_1[_i];\n                if (point_1.index !== 0) {\n                    var previous = this.getPreviousIndex(points, point_1.index - 1, series);\n                    if (series.type === \"SplineRangeArea\") {\n                        points[previous].yValue = points[previous].high > points[previous].low ? points[previous].high : points[previous].low;\n                        point_1.yValue = point_1.high > point_1.low ? point_1.high : point_1.low;\n                    }\n                    value = this.getControlPoints(points[previous], point_1, this.splinePoints[previous], this.splinePoints[point_1.index], series);\n                    series.drawPoints.push(value);\n                    if (series.type === \"SplineRangeArea\") {\n                        points[previous].yValue = points[previous].low < points[previous].high ? points[previous].low : points[previous].high;\n                        point_1.yValue = point_1.low < point_1.high ? point_1.low : point_1.high;\n                        lowPoints = this.getControlPoints(points[previous], point_1, this.lowSplinePoints[previous], this.lowSplinePoints[point_1.index], series);\n                        series.lowDrawPoints.push(lowPoints);\n                    }\n                    // fix for Y-Axis of Spline chart not adjusting scale to suit dataSource issue\n                    var delta = series.yMax - series.yMin;\n                    if (point_1.yValue && value.controlPoint1.y && value.controlPoint2.y && delta > 1) {\n                        series.yMin = Math.min(series.yMin, point_1.yValue, value.controlPoint1.y, value.controlPoint2.y);\n                        series.yMax = Math.ceil(Math.max(series.yMax, point_1.yValue, value.controlPoint1.y, value.controlPoint2.y));\n                        series.yMin = series.yAxis.valueType !== 'Logarithmic' ? Math.floor(series.yMin) : series.yMin;\n                    }\n                }\n            }\n            if (series.chart.chartAreaType === 'PolarRadar' && series.isClosed) {\n                value = this.getControlPoints({ xValue: points[points.length - 1].xValue, yValue: points[points.length - 1].yValue }, { xValue: points[points.length - 1].xValue + 1, yValue: points[0].yValue }, this.splinePoints[0], this.splinePoints[points[points.length - 1].index], series);\n                series.drawPoints.push(value);\n            }\n        }\n    };\n    SplineBase.prototype.getPreviousIndex = function (points, i, series) {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n            return i;\n        }\n        while (isNullOrUndefined(points[i]) && i > -1) {\n            i = i - 1;\n        }\n        return i;\n    };\n    SplineBase.prototype.getNextIndex = function (points, i, series) {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n            return i;\n        }\n        while (isNullOrUndefined(points[i]) && i < points.length) {\n            i = i + 1;\n        }\n        return i;\n    };\n    SplineBase.prototype.filterEmptyPoints = function (series, seriesPoints) {\n        if (series.emptyPointSettings.mode !== 'Drop' && this.isPointInRange(series.points)) {\n            return seriesPoints ? seriesPoints : series.points;\n        }\n        var points = seriesPoints ? seriesPoints : extend([], series.points, null, true);\n        for (var i = 0; i < points.length; i++) {\n            points[i].index = i;\n            if (points[i].isEmpty) {\n                points[i].symbolLocations = [];\n                points[i].regions = [];\n                points.splice(i, 1);\n                i--;\n            }\n        }\n        return points;\n    };\n    /**\n     * To find points in the range\n     *\n     * @private\n     */\n    SplineBase.prototype.isPointInRange = function (points) {\n        for (var _i = 0, points_2 = points; _i < points_2.length; _i++) {\n            var point = points_2[_i];\n            if (!point.isPointInRange) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * To find the natural spline.\n     *\n     * @returns {void}\n     * @private\n     */\n    SplineBase.prototype.findSplineCoefficients = function (points, series, isLow) {\n        var ySpline = [];\n        var ySplineDuplicate = [];\n        var cardinalSplineTension = series.cardinalSplineTension ? series.cardinalSplineTension : 0.5;\n        cardinalSplineTension = cardinalSplineTension < 0 ? 0 : cardinalSplineTension > 1 ? 1 : cardinalSplineTension;\n        switch (series.splineType) {\n            case 'Monotonic':\n                ySpline = this.monotonicSplineCoefficients(points, series, isLow);\n                break;\n            case 'Cardinal':\n                ySpline = this.cardinalSplineCofficients(points, series, isLow);\n                break;\n            default:\n                if (series.splineType === 'Clamped') {\n                    ySpline = this.clampedSplineCofficients(points, series, isLow);\n                }\n                else {\n                    // assigning the first and last value as zero\n                    ySpline[0] = ySplineDuplicate[0] = 0;\n                    ySpline[points.length - 1] = 0;\n                }\n                ySpline = this.naturalSplineCoefficients(points, series, isLow);\n                break;\n        }\n        return ySpline;\n    };\n    /**\n     *  To find Monotonic Spline Coefficients\n     */\n    SplineBase.prototype.monotonicSplineCoefficients = function (points, series, isLow) {\n        var count = points.length;\n        var ySpline = [];\n        var dx = [];\n        var dy = [];\n        var slope = [];\n        var interPoint;\n        var slopeLength;\n        for (var i = 0; i < count - 1; i++) {\n            if (series.type === \"SplineRangeArea\") {\n                if (!isLow) {\n                    points[i + 1].yValue = points[i + 1].high > points[i + 1].low ? points[i + 1].high : points[i + 1].low;\n                    points[i].yValue = points[i].high > points[i].low ? points[i].high : points[i].low;\n                }\n                if (isLow) {\n                    points[i + 1].yValue = points[i + 1].low < points[i + 1].high ? points[i + 1].low : points[i + 1].high;\n                    points[i].yValue = points[i].low < points[i].high ? points[i].low : points[i].high;\n                }\n            }\n            dx[i] = points[i + 1].xValue - points[i].xValue;\n            dy[i] = points[i + 1].yValue - points[i].yValue;\n            slope[i] = dy[i] / dx[i];\n        }\n        //interpolant points\n        slopeLength = slope.length;\n        // to find the first and last co-efficient value\n        ySpline[0] = slope[0];\n        ySpline[count - 1] = slope[slopeLength - 1];\n        //to find the other co-efficient values\n        for (var j = 0; j < dx.length; j++) {\n            if (slopeLength > j + 1) {\n                if (slope[j] * slope[j + 1] <= 0) {\n                    ySpline[j + 1] = 0;\n                }\n                else {\n                    interPoint = dx[j] + dx[j + 1];\n                    ySpline[j + 1] = 3 * interPoint / ((interPoint + dx[j + 1]) / slope[j] + (interPoint + dx[j]) / slope[j + 1]);\n                }\n            }\n        }\n        return ySpline;\n    };\n    /**\n     * To find Cardinal Spline Coefficients\n     */\n    SplineBase.prototype.cardinalSplineCofficients = function (points, series, isLow) {\n        var count = points.length;\n        var ySpline = [];\n        var cardinalSplineTension = series.cardinalSplineTension ? series.cardinalSplineTension : 0.5;\n        cardinalSplineTension = cardinalSplineTension < 0 ? 0 : cardinalSplineTension > 1 ? 1 : cardinalSplineTension;\n        for (var i = 0; i < count; i++) {\n            if (i === 0) {\n                ySpline[i] = (count > 2) ? (cardinalSplineTension * (points[i + 2].xValue - points[i].xValue)) : 0;\n            }\n            else if (i === (count - 1)) {\n                ySpline[i] = (count > 2) ? (cardinalSplineTension * (points[count - 1].xValue - points[count - 3].xValue)) : 0;\n            }\n            else {\n                ySpline[i] = (cardinalSplineTension * (points[i + 1].xValue - points[i - 1].xValue));\n            }\n        }\n        return ySpline;\n    };\n    /**\n     * To find Clamped Spline Coefficients\n     */\n    SplineBase.prototype.clampedSplineCofficients = function (points, series, isLow) {\n        var count = points.length;\n        var ySpline = [];\n        var ySplineDuplicate = [];\n        for (var i = 0; i < count - 1; i++) {\n            if (series.type === \"SplineRangeArea\") {\n                if (!isLow) {\n                    points[1].yValue = points[1].high > points[1].low ? points[1].high : points[1].low;\n                    points[0].yValue = points[0].high > points[0].low ? points[0].high : points[0].low;\n                    points[points.length - 1].yValue = points[points.length - 1].high > points[points.length - 1].low ?\n                        points[points.length - 1].high : points[points.length - 1].low;\n                    points[points.length - 2].yValue = points[points.length - 2].high > points[points.length - 2].low ?\n                        points[points.length - 2].high : points[points.length - 2].low;\n                }\n                if (isLow) {\n                    points[1].yValue = points[1].low < points[1].high ? points[1].low : points[1].high;\n                    points[0].yValue = points[0].low < points[0].high ? points[0].low : points[0].high;\n                    points[points.length - 1].yValue = points[points.length - 1].low < points[points.length - 1].high ?\n                        points[points.length - 1].low : points[points.length - 1].high;\n                    points[points.length - 2].yValue = points[points.length - 2].low < points[points.length - 2].high ?\n                        points[points.length - 2].low : points[points.length - 2].high;\n                }\n            }\n            ySpline[0] = (3 * (points[1].yValue - points[0].yValue)) / (points[1].xValue - points[0].xValue) - 3;\n            ySplineDuplicate[0] = 0.5;\n            ySpline[points.length - 1] = (3 * (points[points.length - 1].yValue - points[points.length - 2].yValue)) /\n                (points[points.length - 1].xValue - points[points.length - 2].xValue);\n            ySpline[0] = ySplineDuplicate[0] = Math.abs(ySpline[0]) === Infinity ? 0 : ySpline[0];\n            ySpline[points.length - 1] = ySplineDuplicate[points.length - 1] = Math.abs(ySpline[points.length - 1]) === Infinity ?\n                0 : ySpline[points.length - 1];\n        }\n        return ySpline;\n    };\n    /**\n     * To find Natural Spline Coefficients\n     */\n    SplineBase.prototype.naturalSplineCoefficients = function (points, series, isLow) {\n        var count = points.length;\n        var ySpline = [];\n        var ySplineDuplicate = [];\n        var dy1;\n        var dy2;\n        var coefficient1;\n        var coefficient2;\n        var coefficient3;\n        ySpline[0] = ySplineDuplicate[0] = 0;\n        ySpline[points.length - 1] = 0;\n        for (var i = 1; i < count - 1; i++) {\n            if (series.type === \"SplineRangeArea\") {\n                if (!isLow) {\n                    points[i + 1].yValue = points[i + 1].low > points[i + 1].high ? points[i + 1].low : points[i + 1].high;\n                    points[i].yValue = points[i].low > points[i].high ? points[i].low : points[i].high;\n                    points[i - 1].yValue = points[i - 1].low > points[i - 1].high ? points[i - 1].low : points[i - 1].high;\n                }\n                if (isLow) {\n                    points[i + 1].yValue = points[i + 1].high < points[i + 1].low ? points[i + 1].high : points[i + 1].low;\n                    points[i].yValue = points[i].high < points[i].low ? points[i].high : points[i].low;\n                    points[i - 1].yValue = points[i - 1].high < points[i - 1].low ? points[i - 1].high : points[i - 1].low;\n                }\n            }\n            coefficient1 = points[i].xValue - points[i - 1].xValue;\n            coefficient2 = points[i + 1].xValue - points[i - 1].xValue;\n            coefficient3 = points[i + 1].xValue - points[i].xValue;\n            dy1 = points[i + 1].yValue - points[i].yValue || null;\n            dy2 = points[i].yValue - points[i - 1].yValue || null;\n            if (coefficient1 === 0 || coefficient2 === 0 || coefficient3 === 0) {\n                ySpline[i] = 0;\n                ySplineDuplicate[i] = 0;\n            }\n            else {\n                var p = 1 / (coefficient1 * ySpline[i - 1] + 2 * coefficient2);\n                ySpline[i] = -p * coefficient3;\n                ySplineDuplicate[i] = p * (6 * (dy1 / coefficient3 - dy2 / coefficient1) - coefficient1 * ySplineDuplicate[i - 1]);\n            }\n        }\n        for (var k = count - 2; k >= 0; k--) {\n            ySpline[k] = ySpline[k] * ySpline[k + 1] + ySplineDuplicate[k];\n        }\n        return ySpline;\n    };\n    /**\n     * To find the control points for spline.\n     *\n     * @returns {void}\n     * @private\n     */\n    SplineBase.prototype.getControlPoints = function (point1, point2, ySpline1, ySpline2, series) {\n        var controlPoint1;\n        var controlPoint2;\n        var point;\n        var ySplineDuplicate1 = ySpline1;\n        var ySplineDuplicate2 = ySpline2;\n        var xValue1 = point1.xValue;\n        var yValue1 = point1.yValue;\n        var xValue2 = point2.xValue;\n        var yValue2 = point2.yValue;\n        switch (series.splineType) {\n            case 'Cardinal':\n                if (series.xAxis.valueType === 'DateTime') {\n                    ySplineDuplicate1 = ySpline1 / this.dateTimeInterval(series);\n                    ySplineDuplicate2 = ySpline2 / this.dateTimeInterval(series);\n                }\n                controlPoint1 = new ChartLocation(xValue1 + ySpline1 / 3, yValue1 + ySplineDuplicate1 / 3);\n                controlPoint2 = new ChartLocation(xValue2 - ySpline2 / 3, yValue2 - ySplineDuplicate2 / 3);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n            case 'Monotonic':\n                var value = (xValue2 - xValue1) / 3;\n                controlPoint1 = new ChartLocation(xValue1 + value, yValue1 + ySpline1 * value);\n                controlPoint2 = new ChartLocation(xValue2 - value, yValue2 - ySpline2 * value);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n            default:\n                var one3 = 1 / 3.0;\n                var deltaX2 = (xValue2 - xValue1);\n                deltaX2 = deltaX2 * deltaX2;\n                var y1 = one3 * (((2 * yValue1) + yValue2) - one3 * deltaX2 * (ySpline1 + 0.5 * ySpline2));\n                var y2 = one3 * ((yValue1 + (2 * yValue2)) - one3 * deltaX2 * (0.5 * ySpline1 + ySpline2));\n                controlPoint1 = new ChartLocation((2 * (xValue1) + (xValue2)) * one3, y1);\n                controlPoint2 = new ChartLocation(((xValue1) + 2 * (xValue2)) * one3, y2);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n        }\n        return point;\n    };\n    /**\n     * calculate datetime interval in hours\n     */\n    SplineBase.prototype.dateTimeInterval = function (series) {\n        var interval = series.xAxis.actualIntervalType;\n        var intervalInMilliseconds;\n        if (interval === 'Years') {\n            intervalInMilliseconds = 365 * 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Months') {\n            intervalInMilliseconds = 30 * 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Days') {\n            intervalInMilliseconds = 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Hours') {\n            intervalInMilliseconds = 60 * 60 * 1000;\n        }\n        else if (interval === 'Minutes') {\n            intervalInMilliseconds = 60 * 1000;\n        }\n        else if (interval === 'Seconds') {\n            intervalInMilliseconds = 1000;\n        }\n        else {\n            intervalInMilliseconds = 30 * 24 * 60 * 60 * 1000;\n        }\n        return intervalInMilliseconds;\n    };\n    /**\n     * Animates the series.\n     *\n     * @param  {Series} series - Defines the series to animate.\n     * @returns {void}\n     */\n    SplineBase.prototype.doAnimation = function (series) {\n        var option = series.animation;\n        this.doLinearAnimation(series, option);\n    };\n    return SplineBase;\n}(LineBase));\nexport { SplineBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}