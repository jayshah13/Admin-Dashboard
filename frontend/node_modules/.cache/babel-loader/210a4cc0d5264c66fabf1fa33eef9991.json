{"ast":null,"code":"import { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { click, keyPressed, commandClick, initialEnd, destroy } from '../base/constant';\nimport { CellType } from '../base/enum';\nimport { CommandColumnRenderer } from '../renderer/command-column-renderer';\nimport { getUid } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * `CommandColumn` used to handle the command column actions.\n *\n * @hidden\n */\n\nvar CommandColumn =\n/** @class */\nfunction () {\n  function CommandColumn(parent, locator) {\n    this.parent = parent;\n    this.locator = locator;\n    this.initiateRender();\n    this.addEventListener();\n  }\n\n  CommandColumn.prototype.initiateRender = function () {\n    var cellFac = this.locator.getService('cellRendererFactory');\n    cellFac.addCellRenderer(CellType.CommandColumn, new CommandColumnRenderer(this.parent, this.locator));\n  };\n\n  CommandColumn.prototype.commandClickHandler = function (e) {\n    var gObj = this.parent;\n    var target = closest(e.target, 'button');\n\n    if (!target || !closest(e.target, '.e-unboundcell')) {\n      return;\n    }\n\n    var buttonObj = target.ej2_instances[0];\n    var type = buttonObj.commandType;\n    var uid = target.getAttribute('data-uid');\n    var commandColumn;\n    var row = gObj.getRowObjectFromUID(closest(target, '.' + literals.row).getAttribute('data-uid'));\n    var cols = this.parent.columnModel;\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].commands) {\n        var commandCols = cols[i].commands;\n\n        for (var j = 0; j < commandCols.length; j++) {\n          var idInString = 'uid';\n          var typeInString = 'type';\n\n          if (commandCols[j][idInString] === uid && commandCols[j][typeInString] === type) {\n            commandColumn = commandCols[j];\n          } else {\n            var buttons = [].slice.call(closest(target, '.e-unboundcell').querySelectorAll('button'));\n            var index = buttons.findIndex(function (ele) {\n              return ele === target;\n            });\n\n            if (index >= 0 && commandCols[index][typeInString] === type) {\n              commandColumn = commandCols[index];\n            }\n          }\n        }\n      }\n    }\n\n    var args = {\n      cancel: false,\n      target: target,\n      commandColumn: commandColumn,\n      rowData: isNullOrUndefined(row) ? undefined : row.data\n    };\n    this.parent.trigger(commandClick, args, function (commandclickargs) {\n      if (buttonObj.disabled || !gObj.editModule || commandclickargs.cancel) {\n        return;\n      }\n\n      switch (type) {\n        case 'Edit':\n          gObj.editModule.endEdit();\n          gObj.editModule.startEdit(closest(target, 'tr'));\n          break;\n\n        case 'Cancel':\n          gObj.editModule.closeEdit();\n          break;\n\n        case 'Save':\n          gObj.editModule.endEdit();\n          break;\n\n        case 'Delete':\n          if (gObj.editSettings.mode !== 'Batch') {\n            gObj.editModule.endEdit();\n          }\n\n          gObj.commandDelIndex = parseInt(closest(target, 'tr').getAttribute(literals.ariaRowIndex), 10);\n          gObj.clearSelection(); //for toogle issue when dbl click\n\n          gObj.selectRow(gObj.commandDelIndex, false);\n          gObj.editModule.deleteRecord();\n          gObj.commandDelIndex = undefined;\n          break;\n      }\n    });\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   */\n\n\n  CommandColumn.prototype.getModuleName = function () {\n    return 'commandColumn';\n  };\n  /**\n   * To destroy CommandColumn.\n   *\n   * @function destroy\n   * @returns {void}\n   */\n\n\n  CommandColumn.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.removeEventListener();\n  };\n\n  CommandColumn.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(click, this.commandClickHandler);\n    this.parent.off(keyPressed, this.keyPressHandler);\n    this.parent.off(initialEnd, this.load);\n    this.parent.off(destroy, this.destroy);\n  };\n\n  CommandColumn.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(click, this.commandClickHandler, this);\n    this.parent.on(keyPressed, this.keyPressHandler, this);\n    this.parent.on(initialEnd, this.load, this);\n    this.parent.on(destroy, this.destroy, this);\n  };\n\n  CommandColumn.prototype.keyPressHandler = function (e) {\n    if (e.action === 'enter' && closest(e.target, '.e-unboundcelldiv')) {\n      this.commandClickHandler(e);\n      e.preventDefault();\n    }\n  };\n\n  CommandColumn.prototype.load = function () {\n    var uid = 'uid';\n    var col = this.parent.columnModel;\n\n    for (var i = 0; i < col.length; i++) {\n      if (col[i].commands) {\n        var commandCol = col[i].commands;\n\n        for (var j = 0; j < commandCol.length; j++) {\n          commandCol[j][uid] = getUid('gridcommand');\n        }\n      }\n    }\n  };\n\n  return CommandColumn;\n}();\n\nexport { CommandColumn };","map":{"version":3,"names":["closest","isNullOrUndefined","click","keyPressed","commandClick","initialEnd","destroy","CellType","CommandColumnRenderer","getUid","literals","CommandColumn","parent","locator","initiateRender","addEventListener","prototype","cellFac","getService","addCellRenderer","commandClickHandler","e","gObj","target","buttonObj","ej2_instances","type","commandType","uid","getAttribute","commandColumn","row","getRowObjectFromUID","cols","columnModel","i","length","commands","commandCols","j","idInString","typeInString","buttons","slice","call","querySelectorAll","index","findIndex","ele","args","cancel","rowData","undefined","data","trigger","commandclickargs","disabled","editModule","endEdit","startEdit","closeEdit","editSettings","mode","commandDelIndex","parseInt","ariaRowIndex","clearSelection","selectRow","deleteRecord","getModuleName","isDestroyed","removeEventListener","off","keyPressHandler","load","on","action","preventDefault","col","commandCol"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin Dashboard/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/command-column.js"],"sourcesContent":["import { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { click, keyPressed, commandClick, initialEnd, destroy } from '../base/constant';\nimport { CellType } from '../base/enum';\nimport { CommandColumnRenderer } from '../renderer/command-column-renderer';\nimport { getUid } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * `CommandColumn` used to handle the command column actions.\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent, locator) {\n        this.parent = parent;\n        this.locator = locator;\n        this.initiateRender();\n        this.addEventListener();\n    }\n    CommandColumn.prototype.initiateRender = function () {\n        var cellFac = this.locator.getService('cellRendererFactory');\n        cellFac.addCellRenderer(CellType.CommandColumn, new CommandColumnRenderer(this.parent, this.locator));\n    };\n    CommandColumn.prototype.commandClickHandler = function (e) {\n        var gObj = this.parent;\n        var target = closest(e.target, 'button');\n        if (!target || !closest(e.target, '.e-unboundcell')) {\n            return;\n        }\n        var buttonObj = target.ej2_instances[0];\n        var type = buttonObj.commandType;\n        var uid = target.getAttribute('data-uid');\n        var commandColumn;\n        var row = gObj.getRowObjectFromUID(closest(target, '.' + literals.row).getAttribute('data-uid'));\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].commands) {\n                var commandCols = cols[i].commands;\n                for (var j = 0; j < commandCols.length; j++) {\n                    var idInString = 'uid';\n                    var typeInString = 'type';\n                    if (commandCols[j][idInString] === uid && commandCols[j][typeInString] === type) {\n                        commandColumn = commandCols[j];\n                    }\n                    else {\n                        var buttons = [].slice.call(closest(target, '.e-unboundcell').querySelectorAll('button'));\n                        var index = buttons.findIndex(function (ele) { return ele === target; });\n                        if (index >= 0 && commandCols[index][typeInString] === type) {\n                            commandColumn = commandCols[index];\n                        }\n                    }\n                }\n            }\n        }\n        var args = {\n            cancel: false,\n            target: target,\n            commandColumn: commandColumn,\n            rowData: isNullOrUndefined(row) ? undefined : row.data\n        };\n        this.parent.trigger(commandClick, args, function (commandclickargs) {\n            if (buttonObj.disabled || !gObj.editModule || commandclickargs.cancel) {\n                return;\n            }\n            switch (type) {\n                case 'Edit':\n                    gObj.editModule.endEdit();\n                    gObj.editModule.startEdit(closest(target, 'tr'));\n                    break;\n                case 'Cancel':\n                    gObj.editModule.closeEdit();\n                    break;\n                case 'Save':\n                    gObj.editModule.endEdit();\n                    break;\n                case 'Delete':\n                    if (gObj.editSettings.mode !== 'Batch') {\n                        gObj.editModule.endEdit();\n                    }\n                    gObj.commandDelIndex = parseInt(closest(target, 'tr').getAttribute(literals.ariaRowIndex), 10);\n                    gObj.clearSelection();\n                    //for toogle issue when dbl click\n                    gObj.selectRow(gObj.commandDelIndex, false);\n                    gObj.editModule.deleteRecord();\n                    gObj.commandDelIndex = undefined;\n                    break;\n            }\n        });\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * To destroy CommandColumn.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n    };\n    CommandColumn.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(click, this.commandClickHandler);\n        this.parent.off(keyPressed, this.keyPressHandler);\n        this.parent.off(initialEnd, this.load);\n        this.parent.off(destroy, this.destroy);\n    };\n    CommandColumn.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(click, this.commandClickHandler, this);\n        this.parent.on(keyPressed, this.keyPressHandler, this);\n        this.parent.on(initialEnd, this.load, this);\n        this.parent.on(destroy, this.destroy, this);\n    };\n    CommandColumn.prototype.keyPressHandler = function (e) {\n        if (e.action === 'enter' && closest(e.target, '.e-unboundcelldiv')) {\n            this.commandClickHandler(e);\n            e.preventDefault();\n        }\n    };\n    CommandColumn.prototype.load = function () {\n        var uid = 'uid';\n        var col = this.parent.columnModel;\n        for (var i = 0; i < col.length; i++) {\n            if (col[i].commands) {\n                var commandCol = col[i].commands;\n                for (var j = 0; j < commandCol.length; j++) {\n                    commandCol[j][uid] = getUid('gridcommand');\n                }\n            }\n        }\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}