{"ast":null,"code":"import { Browser } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest, classList } from '@syncfusion/ej2-base';\nimport { ResponsiveDialogAction } from '../base/enum';\nimport { setCssInGridPopUp, getActualPropFromColl, isActionPrevent, iterateExtend, parentsUntil } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\nimport * as literals from '../base/string-literals';\n/**\n *\n * The `Sort` module is used to handle sorting action.\n */\n\nvar Sort =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Grid sorting module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {SortSettings} sortSettings - specifies the SortSettings\n   * @param {string[]} sortedColumns - specifies the string\n   * @param {ServiceLocator} locator - specifies the ServiceLocator\n   * @hidden\n   */\n  function Sort(parent, sortSettings, sortedColumns, locator) {\n    this.contentRefresh = true;\n    this.isModelChanged = true;\n    this.aria = new AriaService();\n    this.currentTarget = null;\n    this.parent = parent;\n    this.sortSettings = sortSettings;\n    this.sortedColumns = sortedColumns;\n    this.serviceLocator = locator;\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n    this.setFullScreenDialog();\n  }\n  /**\n   * The function used to update sortSettings\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.updateModel = function () {\n    var sortedColumn = {\n      field: this.columnName,\n      direction: this.direction\n    };\n    var index;\n    var gCols = this.parent.groupSettings.columns;\n    var flag = false;\n\n    if (!this.isMultiSort) {\n      if (!gCols.length) {\n        this.sortSettings.columns = [sortedColumn];\n      } else {\n        var sortedCols = [];\n\n        for (var i = 0, len = gCols.length; i < len; i++) {\n          index = this.getSortedColsIndexByField(gCols[i], sortedCols);\n\n          if (this.columnName === gCols[i]) {\n            flag = true;\n            sortedCols.push(sortedColumn);\n          } else {\n            var sCol = this.getSortColumnFromField(gCols[i]);\n            sortedCols.push({\n              field: sCol.field,\n              direction: sCol.direction,\n              isFromGroup: sCol.isFromGroup\n            });\n          }\n        }\n\n        if (!flag) {\n          sortedCols.push(sortedColumn);\n        }\n\n        this.sortSettings.columns = sortedCols;\n      }\n    } else {\n      index = this.getSortedColsIndexByField(this.columnName);\n\n      if (index > -1) {\n        this.sortSettings.columns.splice(index, 1);\n      }\n\n      this.sortSettings.columns.push(sortedColumn); // eslint-disable-next-line no-self-assign\n\n      this.sortSettings.columns = this.sortSettings.columns;\n    }\n\n    this.parent.dataBind();\n    this.lastSortedCol = this.columnName;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   *\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.onActionComplete = function (e) {\n    var args = !this.isRemove ? {\n      columnName: this.columnName,\n      direction: this.direction,\n      requestType: 'sorting',\n      type: events.actionComplete\n    } : {\n      requestType: 'sorting',\n      type: events.actionComplete\n    };\n    this.isRemove = false;\n    this.parent.trigger(events.actionComplete, extend(e, args));\n  };\n  /**\n   * Sorts a column with the given options.\n   *\n   * @param {string} columnName - Defines the column name to sort.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previously sorted columns are to be maintained.\n   * @returns {void}\n   */\n\n\n  Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    var gObj = this.parent;\n\n    if (this.parent.getColumnByField(columnName).allowSorting === false || this.parent.isContextMenuOpen()) {\n      this.parent.log('action_disabled_column', {\n        moduleName: this.getModuleName(),\n        columnName: columnName\n      });\n      return;\n    }\n\n    if (!gObj.allowMultiSorting) {\n      isMultiSort = gObj.allowMultiSorting;\n    }\n\n    if (this.isActionPrevent()) {\n      gObj.notify(events.preventBatch, {\n        instance: this,\n        handler: this.sortColumn,\n        arg1: columnName,\n        arg2: direction,\n        arg3: isMultiSort\n      });\n      return;\n    }\n\n    this.backupSettings();\n    this.columnName = columnName;\n    this.direction = direction;\n    this.isMultiSort = isMultiSort;\n    this.removeSortIcons();\n    this.updateSortedCols(columnName, isMultiSort);\n    this.updateModel();\n  };\n\n  Sort.prototype.setFullScreenDialog = function () {\n    if (this.serviceLocator) {\n      this.serviceLocator.registerAdaptiveService(this, this.parent.enableAdaptiveUI, ResponsiveDialogAction.isSort);\n    }\n  };\n\n  Sort.prototype.backupSettings = function () {\n    this.lastSortedCols = iterateExtend(this.sortSettings.columns);\n    this.lastCols = this.sortedColumns;\n  };\n\n  Sort.prototype.restoreSettings = function () {\n    this.isModelChanged = false;\n    this.isMultiSort = true;\n    this.parent.setProperties({\n      sortSettings: {\n        columns: this.lastSortedCols\n      }\n    }, true); //this.parent.sortSettings.columns =  this.lastSortedCols;\n\n    this.sortedColumns = this.lastCols;\n    this.isModelChanged = true;\n  };\n\n  Sort.prototype.updateSortedCols = function (columnName, isMultiSort) {\n    if (!isMultiSort) {\n      if (this.parent.allowGrouping) {\n        for (var i = 0, len = this.sortedColumns.length; i < len; i++) {\n          if (this.parent.groupSettings.columns.indexOf(this.sortedColumns[i]) < 0) {\n            this.sortedColumns.splice(i, 1);\n            len--;\n            i--;\n          }\n        }\n      } else {\n        this.sortedColumns.splice(0, this.sortedColumns.length);\n      }\n    }\n\n    if (this.sortedColumns.indexOf(columnName) < 0) {\n      this.sortedColumns.push(columnName);\n    }\n  };\n  /**\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    if (this.contentRefresh) {\n      var args = this.sortSettings.columns.length ? {\n        columnName: this.columnName,\n        direction: this.direction,\n        requestType: 'sorting',\n        type: events.actionBegin,\n        target: this.currentTarget,\n        cancel: false\n      } : {\n        requestType: 'sorting',\n        type: events.actionBegin,\n        cancel: false,\n        target: this.currentTarget\n      };\n      this.parent.notify(events.modelChanged, args);\n    }\n\n    this.refreshSortSettings();\n    this.removeSortIcons();\n    this.addSortIcons();\n  };\n\n  Sort.prototype.refreshSortSettings = function () {\n    this.sortedColumns.length = 0;\n    var sortColumns = this.sortSettings.columns;\n\n    for (var i = 0; i < sortColumns.length; i++) {\n      if (!sortColumns[i].isFromGroup) {\n        this.sortedColumns.push(sortColumns[i].field);\n      }\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Sort.prototype.clearSorting = function () {\n    var cols = getActualPropFromColl(this.sortSettings.columns);\n\n    if (this.isActionPrevent()) {\n      this.parent.notify(events.preventBatch, {\n        instance: this,\n        handler: this.clearSorting\n      });\n      return;\n    }\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      this.removeSortColumn(cols[i].field);\n    }\n  };\n\n  Sort.prototype.isActionPrevent = function () {\n    return isActionPrevent(this.parent);\n  };\n  /**\n   * Remove sorted column by field name.\n   *\n   * @param {string} field - Defines the column field name to remove sort.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.removeSortColumn = function (field) {\n    var gObj = this.parent;\n    var cols = this.sortSettings.columns;\n\n    if (cols.length === 0 && this.sortedColumns.indexOf(field) < 0) {\n      return;\n    }\n\n    if (this.isActionPrevent()) {\n      this.parent.notify(events.preventBatch, {\n        instance: this,\n        handler: this.removeSortColumn,\n        arg1: field\n      });\n      return;\n    }\n\n    this.backupSettings();\n    this.removeSortIcons();\n    var args = {\n      requestType: 'sorting',\n      type: events.actionBegin,\n      target: this.currentTarget\n    };\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].field === field) {\n        if (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1) {\n          continue;\n        }\n\n        this.sortedColumns.splice(this.sortedColumns.indexOf(cols[i].field), 1);\n        cols.splice(i, 1);\n        this.isRemove = true;\n\n        if (this.isModelChanged) {\n          this.parent.notify(events.modelChanged, args);\n        }\n\n        break;\n      }\n    }\n\n    if (!args.cancel) {\n      this.addSortIcons();\n    }\n  };\n\n  Sort.prototype.getSortedColsIndexByField = function (field, sortedColumns) {\n    var cols = sortedColumns ? sortedColumns : this.sortSettings.columns;\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].field === field) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  Sort.prototype.getModuleName = function () {\n    return 'sort';\n  };\n\n  Sort.prototype.initialEnd = function () {\n    this.parent.off(events.contentReady, this.initialEnd);\n\n    if (this.parent.getColumns().length && this.sortSettings.columns.length) {\n      var gObj = this.parent;\n      this.contentRefresh = false;\n      this.isMultiSort = this.sortSettings.columns.length > 1;\n\n      for (var _i = 0, _a = gObj.sortSettings.columns.slice(); _i < _a.length; _i++) {\n        var col = _a[_i];\n\n        if (this.sortedColumns.indexOf(col.field) > -1) {\n          this.sortColumn(col.field, col.direction, true);\n        }\n      }\n\n      this.isMultiSort = false;\n      this.contentRefresh = true;\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.evtHandlers = [{\n      event: events.setFullScreenDialog,\n      handler: this.setFullScreenDialog\n    }, {\n      event: events.contentReady,\n      handler: this.initialEnd\n    }, {\n      event: events.sortComplete,\n      handler: this.onActionComplete\n    }, {\n      event: events.inBoundModelChanged,\n      handler: this.onPropertyChanged\n    }, {\n      event: events.click,\n      handler: this.clickHandler\n    }, {\n      event: events.headerRefreshed,\n      handler: this.refreshSortIcons\n    }, {\n      event: events.keyPressed,\n      handler: this.keyPressed\n    }, {\n      event: events.cancelBegin,\n      handler: this.cancelBeginEvent\n    }, {\n      event: events.destroy,\n      handler: this.destroy\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n  };\n  /**\n   * To destroy the sorting\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.destroy = function () {\n    this.isModelChanged = false;\n    var gridElement = this.parent.element;\n\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n\n    if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-sortdirect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    if (!this.parent.refreshing && (this.parent.isDestroyed || !this.parent.allowSorting)) {\n      this.clearSorting();\n    }\n\n    this.isModelChanged = true;\n    this.removeEventListener();\n  };\n\n  Sort.prototype.cancelBeginEvent = function (e) {\n    if (e.requestType === 'sorting') {\n      this.restoreSettings();\n      this.refreshSortIcons();\n      this.isMultiSort = true;\n    }\n  };\n\n  Sort.prototype.clickHandler = function (e) {\n    var gObj = this.parent;\n    this.currentTarget = null;\n    this.popUpClickHandler(e);\n    var target = closest(e.target, '.e-headercell');\n\n    if (target && !e.target.classList.contains('e-grptogglebtn') && !target.classList.contains('e-resized') && !e.target.classList.contains('e-rhandler') && !e.target.classList.contains('e-columnmenu') && !e.target.classList.contains('e-filtermenudiv') && !parentsUntil(e.target, 'e-stackedheadercell') && !(gObj.allowSelection && gObj.selectionSettings.allowColumnSelection && e.target.classList.contains('e-headercell'))) {\n      var gObj_1 = this.parent;\n      var colObj = gObj_1.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n\n      if (colObj.type !== 'checkbox') {\n        this.initiateSort(target, e, colObj);\n\n        if (Browser.isDevice) {\n          this.showPopUp(e);\n        }\n      }\n    }\n\n    if (target) {\n      target.classList.remove('e-resized');\n    }\n\n    if (parentsUntil(e.target, 'e-excel-ascending') || parentsUntil(e.target, 'e-excel-descending')) {\n      var colUid = closest(e.target, '.e-filter-popup').getAttribute('uid');\n      var direction = isNullOrUndefined(parentsUntil(e.target, 'e-excel-descending')) ? 'Ascending' : 'Descending';\n      this.sortColumn(gObj.getColumnByUid(colUid).field, direction, false);\n    }\n  };\n\n  Sort.prototype.keyPressed = function (e) {\n    var ele = e.target;\n\n    if (!this.parent.isEdit && (e.action === 'enter' || e.action === 'ctrlEnter' || e.action === 'shiftEnter') && closest(ele, '.e-headercell')) {\n      var target = this.focus.getFocusedElement();\n\n      if (isNullOrUndefined(target) || !target.classList.contains('e-headercell') || !target.querySelector('.e-headercelldiv')) {\n        return;\n      }\n\n      var col = this.parent.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      this.initiateSort(target, e, col);\n    }\n  };\n\n  Sort.prototype.initiateSort = function (target, e, column) {\n    var gObj = this.parent;\n    var field = column.field;\n    this.currentTarget = e.target;\n    var direction = !target.getElementsByClassName('e-ascending').length ? 'Ascending' : 'Descending';\n    this.isMultiSort = e.ctrlKey || this.enableSortMultiTouch || navigator.userAgent.indexOf('Mac OS') !== -1 && e.metaKey;\n\n    if (e.shiftKey || this.sortSettings.allowUnsort && target.getElementsByClassName('e-descending').length && !(gObj.groupSettings.columns.indexOf(field) > -1)) {\n      this.removeSortColumn(field);\n    } else {\n      this.sortColumn(field, direction, this.isMultiSort);\n    }\n  };\n\n  Sort.prototype.showPopUp = function (e) {\n    var target = closest(e.target, '.e-headercell');\n\n    if (this.parent.allowMultiSorting && (!isNullOrUndefined(target) || this.parent.isContextMenuOpen())) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-sortdirect e-icons e-icon-sortdirect' + (this.sortedColumns.length > 1 ? ' e-spanclicked' : ''));\n    }\n  };\n\n  Sort.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n\n    if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-sortdirect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSortMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSortMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Sort.prototype.addSortIcons = function () {\n    var gObj = this.parent;\n    var header;\n    var filterElement;\n    var cols = this.sortSettings.columns;\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      header = gObj.getColumnHeaderByField(cols[i].field);\n\n      if (fieldNames.indexOf(cols[i].field) === -1 || isNullOrUndefined(header)) {\n        continue;\n      }\n\n      this.aria.setSort(header, cols[i].direction.toLowerCase());\n\n      if (cols.length > 1) {\n        header.querySelector('.e-headercelldiv').insertBefore(this.parent.createElement('span', {\n          className: 'e-sortnumber',\n          innerHTML: (i + 1).toString()\n        }), header.querySelector('.e-headertext'));\n      }\n\n      filterElement = header.querySelector('.e-sortfilterdiv');\n\n      if (cols[i].direction === 'Ascending') {\n        classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n      } else {\n        classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n      }\n    }\n  };\n\n  Sort.prototype.removeSortIcons = function (position) {\n    var gObj = this.parent;\n    var header;\n    var cols = this.sortSettings.columns;\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n\n    for (var i = position ? position : 0, len = !isNullOrUndefined(position) ? position + 1 : cols.length; i < len; i++) {\n      header = gObj.getColumnHeaderByField(cols[i].field);\n\n      if (isNullOrUndefined(header) || gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1 && !header.querySelector('.e-sortfilterdiv')) {\n        continue;\n      }\n\n      if (fieldNames.indexOf(cols[i].field) === -1) {\n        continue;\n      }\n\n      this.aria.setSort(header, 'none');\n      classList(header.querySelector('.e-sortfilterdiv'), [], ['e-descending', 'e-icon-descending', 'e-ascending', 'e-icon-ascending']);\n\n      if (header.querySelector('.e-sortnumber')) {\n        header.querySelector('.e-headercelldiv').removeChild(header.querySelector('.e-sortnumber'));\n      }\n    }\n  };\n\n  Sort.prototype.getSortColumnFromField = function (field) {\n    for (var i = 0, len = this.sortSettings.columns.length; i < len; i++) {\n      if (this.sortSettings.columns[i].field === field) {\n        return this.sortSettings.columns[i];\n      }\n    }\n\n    return false;\n  };\n\n  Sort.prototype.updateAriaAttr = function () {\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n\n    for (var _i = 0, _a = this.sortedColumns; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (fieldNames.indexOf(col) === -1) {\n        continue;\n      }\n\n      var header = this.parent.getColumnHeaderByField(col);\n      this.aria.setSort(header, this.getSortColumnFromField(col).direction);\n    }\n  };\n\n  Sort.prototype.refreshSortIcons = function (params) {\n    if (params === void 0) {\n      params = {\n        args: {\n          isFrozen: false\n        }\n      };\n    }\n\n    if (!params.args.isFrozen) {\n      this.removeSortIcons();\n      this.isMultiSort = true;\n      this.removeSortIcons();\n      this.addSortIcons();\n      this.isMultiSort = false;\n      this.updateAriaAttr();\n    }\n  };\n  /**\n   * To show the responsive custom sort dialog\n   *\n   * @param {boolean} enable - specifes dialog open\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.showCustomSort = function (enable) {\n    this.responsiveDialogRenderer.isCustomDialog = enable;\n    this.responsiveDialogRenderer.showResponsiveDialog();\n  };\n\n  return Sort;\n}();\n\nexport { Sort };","map":{"version":3,"names":["Browser","extend","isNullOrUndefined","closest","classList","ResponsiveDialogAction","setCssInGridPopUp","getActualPropFromColl","isActionPrevent","iterateExtend","parentsUntil","addRemoveEventListener","events","AriaService","literals","Sort","parent","sortSettings","sortedColumns","locator","contentRefresh","isModelChanged","aria","currentTarget","serviceLocator","focus","getService","addEventListener","setFullScreenDialog","prototype","updateModel","sortedColumn","field","columnName","direction","index","gCols","groupSettings","columns","flag","isMultiSort","length","sortedCols","i","len","getSortedColsIndexByField","push","sCol","getSortColumnFromField","isFromGroup","splice","dataBind","lastSortedCol","onActionComplete","e","args","isRemove","requestType","type","actionComplete","trigger","sortColumn","gObj","getColumnByField","allowSorting","isContextMenuOpen","log","moduleName","getModuleName","allowMultiSorting","notify","preventBatch","instance","handler","arg1","arg2","arg3","backupSettings","removeSortIcons","updateSortedCols","registerAdaptiveService","enableAdaptiveUI","isSort","lastSortedCols","lastCols","restoreSettings","setProperties","allowGrouping","indexOf","onPropertyChanged","module","actionBegin","target","cancel","modelChanged","refreshSortSettings","addSortIcons","sortColumns","clearSorting","cols","removeSortColumn","initialEnd","off","contentReady","getColumns","_i","_a","slice","col","isDestroyed","evtHandlers","event","sortComplete","inBoundModelChanged","click","clickHandler","headerRefreshed","refreshSortIcons","keyPressed","cancelBegin","cancelBeginEvent","destroy","removeEventListener","gridElement","element","querySelector","gridHeader","gridContent","getElementsByClassName","style","display","refreshing","popUpClickHandler","contains","allowSelection","selectionSettings","allowColumnSelection","gObj_1","colObj","getColumnByUid","getAttribute","initiateSort","isDevice","showPopUp","remove","colUid","ele","isEdit","action","getFocusedElement","column","ctrlKey","enableSortMultiTouch","navigator","userAgent","metaKey","shiftKey","allowUnsort","rowCell","add","header","filterElement","fieldNames","map","c","getColumnHeaderByField","setSort","toLowerCase","insertBefore","createElement","className","innerHTML","toString","position","removeChild","updateAriaAttr","params","isFrozen","showCustomSort","enable","responsiveDialogRenderer","isCustomDialog","showResponsiveDialog"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin-Dashboard/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/sort.js"],"sourcesContent":["import { Browser } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest, classList } from '@syncfusion/ej2-base';\nimport { ResponsiveDialogAction } from '../base/enum';\nimport { setCssInGridPopUp, getActualPropFromColl, isActionPrevent, iterateExtend, parentsUntil } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\nimport * as literals from '../base/string-literals';\n/**\n *\n * The `Sort` module is used to handle sorting action.\n */\nvar Sort = /** @class */ (function () {\n    /**\n     * Constructor for Grid sorting module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {SortSettings} sortSettings - specifies the SortSettings\n     * @param {string[]} sortedColumns - specifies the string\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function Sort(parent, sortSettings, sortedColumns, locator) {\n        this.contentRefresh = true;\n        this.isModelChanged = true;\n        this.aria = new AriaService();\n        this.currentTarget = null;\n        this.parent = parent;\n        this.sortSettings = sortSettings;\n        this.sortedColumns = sortedColumns;\n        this.serviceLocator = locator;\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.setFullScreenDialog();\n    }\n    /**\n     * The function used to update sortSettings\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        var sortedColumn = { field: this.columnName, direction: this.direction };\n        var index;\n        var gCols = this.parent.groupSettings.columns;\n        var flag = false;\n        if (!this.isMultiSort) {\n            if (!gCols.length) {\n                this.sortSettings.columns = [sortedColumn];\n            }\n            else {\n                var sortedCols = [];\n                for (var i = 0, len = gCols.length; i < len; i++) {\n                    index = this.getSortedColsIndexByField(gCols[i], sortedCols);\n                    if (this.columnName === gCols[i]) {\n                        flag = true;\n                        sortedCols.push(sortedColumn);\n                    }\n                    else {\n                        var sCol = this.getSortColumnFromField(gCols[i]);\n                        sortedCols.push({ field: sCol.field, direction: sCol.direction, isFromGroup: sCol.isFromGroup });\n                    }\n                }\n                if (!flag) {\n                    sortedCols.push(sortedColumn);\n                }\n                this.sortSettings.columns = sortedCols;\n            }\n        }\n        else {\n            index = this.getSortedColsIndexByField(this.columnName);\n            if (index > -1) {\n                this.sortSettings.columns.splice(index, 1);\n            }\n            this.sortSettings.columns.push(sortedColumn);\n            // eslint-disable-next-line no-self-assign\n            this.sortSettings.columns = this.sortSettings.columns;\n        }\n        this.parent.dataBind();\n        this.lastSortedCol = this.columnName;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.onActionComplete = function (e) {\n        var args = !this.isRemove ? {\n            columnName: this.columnName, direction: this.direction, requestType: 'sorting', type: events.actionComplete\n        } : { requestType: 'sorting', type: events.actionComplete };\n        this.isRemove = false;\n        this.parent.trigger(events.actionComplete, extend(e, args));\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to sort.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previously sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        var gObj = this.parent;\n        if (this.parent.getColumnByField(columnName).allowSorting === false || this.parent.isContextMenuOpen()) {\n            this.parent.log('action_disabled_column', { moduleName: this.getModuleName(), columnName: columnName });\n            return;\n        }\n        if (!gObj.allowMultiSorting) {\n            isMultiSort = gObj.allowMultiSorting;\n        }\n        if (this.isActionPrevent()) {\n            gObj.notify(events.preventBatch, {\n                instance: this, handler: this.sortColumn,\n                arg1: columnName, arg2: direction, arg3: isMultiSort\n            });\n            return;\n        }\n        this.backupSettings();\n        this.columnName = columnName;\n        this.direction = direction;\n        this.isMultiSort = isMultiSort;\n        this.removeSortIcons();\n        this.updateSortedCols(columnName, isMultiSort);\n        this.updateModel();\n    };\n    Sort.prototype.setFullScreenDialog = function () {\n        if (this.serviceLocator) {\n            this.serviceLocator.registerAdaptiveService(this, this.parent.enableAdaptiveUI, ResponsiveDialogAction.isSort);\n        }\n    };\n    Sort.prototype.backupSettings = function () {\n        this.lastSortedCols = iterateExtend(this.sortSettings.columns);\n        this.lastCols = this.sortedColumns;\n    };\n    Sort.prototype.restoreSettings = function () {\n        this.isModelChanged = false;\n        this.isMultiSort = true;\n        this.parent.setProperties({ sortSettings: { columns: this.lastSortedCols } }, true);\n        //this.parent.sortSettings.columns =  this.lastSortedCols;\n        this.sortedColumns = this.lastCols;\n        this.isModelChanged = true;\n    };\n    Sort.prototype.updateSortedCols = function (columnName, isMultiSort) {\n        if (!isMultiSort) {\n            if (this.parent.allowGrouping) {\n                for (var i = 0, len = this.sortedColumns.length; i < len; i++) {\n                    if (this.parent.groupSettings.columns.indexOf(this.sortedColumns[i]) < 0) {\n                        this.sortedColumns.splice(i, 1);\n                        len--;\n                        i--;\n                    }\n                }\n            }\n            else {\n                this.sortedColumns.splice(0, this.sortedColumns.length);\n            }\n        }\n        if (this.sortedColumns.indexOf(columnName) < 0) {\n            this.sortedColumns.push(columnName);\n        }\n    };\n    /**\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        if (this.contentRefresh) {\n            var args = this.sortSettings.columns.length ? {\n                columnName: this.columnName, direction: this.direction, requestType: 'sorting',\n                type: events.actionBegin, target: this.currentTarget, cancel: false\n            } : {\n                requestType: 'sorting', type: events.actionBegin, cancel: false,\n                target: this.currentTarget\n            };\n            this.parent.notify(events.modelChanged, args);\n        }\n        this.refreshSortSettings();\n        this.removeSortIcons();\n        this.addSortIcons();\n    };\n    Sort.prototype.refreshSortSettings = function () {\n        this.sortedColumns.length = 0;\n        var sortColumns = this.sortSettings.columns;\n        for (var i = 0; i < sortColumns.length; i++) {\n            if (!sortColumns[i].isFromGroup) {\n                this.sortedColumns.push(sortColumns[i].field);\n            }\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        var cols = getActualPropFromColl(this.sortSettings.columns);\n        if (this.isActionPrevent()) {\n            this.parent.notify(events.preventBatch, { instance: this, handler: this.clearSorting });\n            return;\n        }\n        for (var i = 0, len = cols.length; i < len; i++) {\n            this.removeSortColumn(cols[i].field);\n        }\n    };\n    Sort.prototype.isActionPrevent = function () {\n        return isActionPrevent(this.parent);\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.removeSortColumn = function (field) {\n        var gObj = this.parent;\n        var cols = this.sortSettings.columns;\n        if (cols.length === 0 && this.sortedColumns.indexOf(field) < 0) {\n            return;\n        }\n        if (this.isActionPrevent()) {\n            this.parent.notify(events.preventBatch, { instance: this, handler: this.removeSortColumn, arg1: field });\n            return;\n        }\n        this.backupSettings();\n        this.removeSortIcons();\n        var args = { requestType: 'sorting', type: events.actionBegin, target: this.currentTarget };\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].field === field) {\n                if (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1) {\n                    continue;\n                }\n                this.sortedColumns.splice(this.sortedColumns.indexOf(cols[i].field), 1);\n                cols.splice(i, 1);\n                this.isRemove = true;\n                if (this.isModelChanged) {\n                    this.parent.notify(events.modelChanged, args);\n                }\n                break;\n            }\n        }\n        if (!args.cancel) {\n            this.addSortIcons();\n        }\n    };\n    Sort.prototype.getSortedColsIndexByField = function (field, sortedColumns) {\n        var cols = sortedColumns ? sortedColumns : this.sortSettings.columns;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    Sort.prototype.initialEnd = function () {\n        this.parent.off(events.contentReady, this.initialEnd);\n        if (this.parent.getColumns().length && this.sortSettings.columns.length) {\n            var gObj = this.parent;\n            this.contentRefresh = false;\n            this.isMultiSort = this.sortSettings.columns.length > 1;\n            for (var _i = 0, _a = gObj.sortSettings.columns.slice(); _i < _a.length; _i++) {\n                var col = _a[_i];\n                if (this.sortedColumns.indexOf(col.field) > -1) {\n                    this.sortColumn(col.field, col.direction, true);\n                }\n            }\n            this.isMultiSort = false;\n            this.contentRefresh = true;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: events.setFullScreenDialog, handler: this.setFullScreenDialog },\n            { event: events.contentReady, handler: this.initialEnd },\n            { event: events.sortComplete, handler: this.onActionComplete },\n            { event: events.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: events.click, handler: this.clickHandler },\n            { event: events.headerRefreshed, handler: this.refreshSortIcons },\n            { event: events.keyPressed, handler: this.keyPressed },\n            { event: events.cancelBegin, handler: this.cancelBeginEvent },\n            { event: events.destroy, handler: this.destroy }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n    };\n    /**\n     * To destroy the sorting\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.destroy = function () {\n        this.isModelChanged = false;\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-sortdirect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (!this.parent.refreshing && (this.parent.isDestroyed || !this.parent.allowSorting)) {\n            this.clearSorting();\n        }\n        this.isModelChanged = true;\n        this.removeEventListener();\n    };\n    Sort.prototype.cancelBeginEvent = function (e) {\n        if (e.requestType === 'sorting') {\n            this.restoreSettings();\n            this.refreshSortIcons();\n            this.isMultiSort = true;\n        }\n    };\n    Sort.prototype.clickHandler = function (e) {\n        var gObj = this.parent;\n        this.currentTarget = null;\n        this.popUpClickHandler(e);\n        var target = closest(e.target, '.e-headercell');\n        if (target && !e.target.classList.contains('e-grptogglebtn') &&\n            !(target.classList.contains('e-resized')) &&\n            !e.target.classList.contains('e-rhandler') &&\n            !e.target.classList.contains('e-columnmenu') &&\n            !e.target.classList.contains('e-filtermenudiv') &&\n            !parentsUntil(e.target, 'e-stackedheadercell') &&\n            !(gObj.allowSelection && gObj.selectionSettings.allowColumnSelection &&\n                e.target.classList.contains('e-headercell'))) {\n            var gObj_1 = this.parent;\n            var colObj = gObj_1.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            if (colObj.type !== 'checkbox') {\n                this.initiateSort(target, e, colObj);\n                if (Browser.isDevice) {\n                    this.showPopUp(e);\n                }\n            }\n        }\n        if (target) {\n            target.classList.remove('e-resized');\n        }\n        if (parentsUntil(e.target, 'e-excel-ascending') ||\n            parentsUntil(e.target, 'e-excel-descending')) {\n            var colUid = closest(e.target, '.e-filter-popup').getAttribute('uid');\n            var direction = isNullOrUndefined(parentsUntil(e.target, 'e-excel-descending')) ?\n                'Ascending' : 'Descending';\n            this.sortColumn(gObj.getColumnByUid(colUid).field, direction, false);\n        }\n    };\n    Sort.prototype.keyPressed = function (e) {\n        var ele = e.target;\n        if (!this.parent.isEdit && (e.action === 'enter' || e.action === 'ctrlEnter' || e.action === 'shiftEnter')\n            && closest(ele, '.e-headercell')) {\n            var target = this.focus.getFocusedElement();\n            if (isNullOrUndefined(target) || !target.classList.contains('e-headercell')\n                || !target.querySelector('.e-headercelldiv')) {\n                return;\n            }\n            var col = this.parent.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            this.initiateSort(target, e, col);\n        }\n    };\n    Sort.prototype.initiateSort = function (target, e, column) {\n        var gObj = this.parent;\n        var field = column.field;\n        this.currentTarget = e.target;\n        var direction = !target.getElementsByClassName('e-ascending').length ? 'Ascending' :\n            'Descending';\n        this.isMultiSort = e.ctrlKey || this.enableSortMultiTouch ||\n            (navigator.userAgent.indexOf('Mac OS') !== -1 && e.metaKey);\n        if (e.shiftKey || (this.sortSettings.allowUnsort && target.getElementsByClassName('e-descending').length)\n            && !(gObj.groupSettings.columns.indexOf(field) > -1)) {\n            this.removeSortColumn(field);\n        }\n        else {\n            this.sortColumn(field, direction, this.isMultiSort);\n        }\n    };\n    Sort.prototype.showPopUp = function (e) {\n        var target = closest(e.target, '.e-headercell');\n        if (this.parent.allowMultiSorting && (!isNullOrUndefined(target) || this.parent.isContextMenuOpen())) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-sortdirect e-icons e-icon-sortdirect' + (this.sortedColumns.length > 1 ? ' e-spanclicked' : ''));\n        }\n    };\n    Sort.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-sortdirect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSortMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSortMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Sort.prototype.addSortIcons = function () {\n        var gObj = this.parent;\n        var header;\n        var filterElement;\n        var cols = this.sortSettings.columns;\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var i = 0, len = cols.length; i < len; i++) {\n            header = gObj.getColumnHeaderByField(cols[i].field);\n            if (fieldNames.indexOf(cols[i].field) === -1 || isNullOrUndefined(header)) {\n                continue;\n            }\n            this.aria.setSort(header, (cols[i].direction).toLowerCase());\n            if (cols.length > 1) {\n                header.querySelector('.e-headercelldiv').insertBefore(this.parent.createElement('span', { className: 'e-sortnumber', innerHTML: (i + 1).toString() }), header.querySelector('.e-headertext'));\n            }\n            filterElement = header.querySelector('.e-sortfilterdiv');\n            if (cols[i].direction === 'Ascending') {\n                classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n            }\n            else {\n                classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n            }\n        }\n    };\n    Sort.prototype.removeSortIcons = function (position) {\n        var gObj = this.parent;\n        var header;\n        var cols = this.sortSettings.columns;\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var i = position ? position : 0, len = !isNullOrUndefined(position) ? position + 1 : cols.length; i < len; i++) {\n            header = gObj.getColumnHeaderByField(cols[i].field);\n            if (isNullOrUndefined(header) || (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1 &&\n                !header.querySelector('.e-sortfilterdiv'))) {\n                continue;\n            }\n            if (fieldNames.indexOf(cols[i].field) === -1) {\n                continue;\n            }\n            this.aria.setSort(header, 'none');\n            classList(header.querySelector('.e-sortfilterdiv'), [], ['e-descending', 'e-icon-descending', 'e-ascending', 'e-icon-ascending']);\n            if (header.querySelector('.e-sortnumber')) {\n                header.querySelector('.e-headercelldiv').removeChild(header.querySelector('.e-sortnumber'));\n            }\n        }\n    };\n    Sort.prototype.getSortColumnFromField = function (field) {\n        for (var i = 0, len = this.sortSettings.columns.length; i < len; i++) {\n            if (this.sortSettings.columns[i].field === field) {\n                return this.sortSettings.columns[i];\n            }\n        }\n        return false;\n    };\n    Sort.prototype.updateAriaAttr = function () {\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var _i = 0, _a = this.sortedColumns; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (fieldNames.indexOf(col) === -1) {\n                continue;\n            }\n            var header = this.parent.getColumnHeaderByField(col);\n            this.aria.setSort(header, this.getSortColumnFromField(col).direction);\n        }\n    };\n    Sort.prototype.refreshSortIcons = function (params) {\n        if (params === void 0) { params = { args: { isFrozen: false } }; }\n        if (!params.args.isFrozen) {\n            this.removeSortIcons();\n            this.isMultiSort = true;\n            this.removeSortIcons();\n            this.addSortIcons();\n            this.isMultiSort = false;\n            this.updateAriaAttr();\n        }\n    };\n    /**\n     * To show the responsive custom sort dialog\n     *\n     * @param {boolean} enable - specifes dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.showCustomSort = function (enable) {\n        this.responsiveDialogRenderer.isCustomDialog = enable;\n        this.responsiveDialogRenderer.showResponsiveDialog();\n    };\n    return Sort;\n}());\nexport { Sort };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}