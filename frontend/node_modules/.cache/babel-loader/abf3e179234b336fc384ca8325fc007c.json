{"ast":null,"code":"import { append, createElement, EventHandler, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Popup } from '@syncfusion/ej2-popups';\nimport * as events from './constant';\nimport * as cls from './css-constant';\n/**\n * Kanban mobile layout rendering module\n *\n */\n\nvar MobileLayout =\n/** @class */\nfunction () {\n  function MobileLayout(parent) {\n    this.parent = parent;\n  }\n\n  MobileLayout.prototype.renderSwimlaneHeader = function () {\n    var toolbarWrapper = createElement('div', {\n      className: cls.SWIMLANE_HEADER_CLASS,\n      innerHTML: '<div class=\"' + cls.SWIMLANE_HEADER_TOOLBAR_CLASS + '\"><div class=\"' + cls.TOOLBAR_MENU_CLASS + '\"><div class=\"e-icons ' + cls.TOOLBAR_MENU_ICON_CLASS + '\"></div></div><div class=\"' + cls.TOOLBAR_LEVEL_TITLE_CLASS + '\"><div class=\"' + cls.TOOLBAR_SWIMLANE_NAME_CLASS + '\"></div></div></div>'\n    });\n    this.parent.element.appendChild(toolbarWrapper);\n    EventHandler.add(toolbarWrapper.querySelector('.' + cls.TOOLBAR_MENU_ICON_CLASS), 'click', this.menuClick, this);\n  };\n\n  MobileLayout.prototype.renderSwimlaneTree = function () {\n    var height = this.parent.element.querySelector('.' + cls.SWIMLANE_HEADER_CLASS).offsetHeight;\n    var treeHeight = window.innerHeight - height;\n    this.popupOverlay = createElement('div', {\n      className: cls.SWIMLANE_OVERLAY_CLASS,\n      styles: 'height: ' + treeHeight + 'px;'\n    });\n    var wrapper = createElement('div', {\n      className: cls.SWIMLANE_CONTENT_CLASS,\n      styles: 'top:' + height + 'px;'\n    });\n    var treeWrapper = createElement('div', {\n      className: cls.SWIMLANE_RESOURCE_CLASS + ' e-popup-close',\n      styles: 'height: ' + treeHeight + 'px;'\n    });\n    wrapper.appendChild(treeWrapper);\n    wrapper.appendChild(this.popupOverlay);\n    this.parent.element.appendChild(wrapper);\n    var swimlaneTree = createElement('div', {\n      className: cls.SWIMLANE_TREE_CLASS\n    });\n    treeWrapper.appendChild(swimlaneTree);\n    this.treeViewObj = new TreeView({\n      cssClass: this.parent.cssClass,\n      enableRtl: this.parent.enableRtl,\n      fields: {\n        dataSource: this.parent.layoutModule.kanbanRows,\n        id: 'keyField',\n        text: 'textField'\n      },\n      nodeTemplate: this.parent.swimlaneSettings.template,\n      nodeClicked: this.treeSwimlaneClick.bind(this),\n      drawNode: this.drawNode.bind(this)\n    });\n    this.treeViewObj.appendTo(swimlaneTree);\n    var popupObj = {\n      targetType: 'relative',\n      actionOnScroll: 'none',\n      enableRtl: this.parent.enableRtl,\n      zIndex: 10,\n      hideAnimation: {\n        name: 'SlideLeftOut',\n        duration: 500\n      },\n      showAnimation: {\n        name: 'SlideLeftIn',\n        duration: 500\n      },\n      viewPortElement: this.parent.element.querySelector('.' + cls.CONTENT_CLASS)\n    };\n    popupObj.content = this.treeViewObj.element;\n    this.treePopup = new Popup(treeWrapper, popupObj);\n  };\n\n  MobileLayout.prototype.menuClick = function () {\n    if (this.parent.element.querySelector('.' + cls.SWIMLANE_RESOURCE_CLASS).classList.contains('e-popup-open')) {\n      this.treePopup.hide();\n      removeClass([this.popupOverlay], 'e-enable');\n    } else {\n      var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n      removeClass(treeNodes, 'e-active');\n      addClass([treeNodes[this.parent.layoutModule.swimlaneIndex]], 'e-active');\n      this.treePopup.show();\n      addClass([this.popupOverlay], 'e-enable');\n    }\n  };\n\n  MobileLayout.prototype.treeSwimlaneClick = function (args) {\n    this.treePopup.hide();\n    var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n    this.parent.layoutModule.swimlaneIndex = treeNodes.indexOf(args.node);\n    this.parent.layoutModule.scrollLeft = 0;\n    this.parent.notify(events.dataReady, {\n      processedData: this.parent.kanbanData\n    });\n    args.event.preventDefault();\n  };\n\n  MobileLayout.prototype.hidePopup = function () {\n    this.treePopup.hide();\n    removeClass([this.popupOverlay], 'e-enable');\n  };\n\n  MobileLayout.prototype.getWidth = function () {\n    return window.innerWidth * 80 / 100;\n  };\n\n  MobileLayout.prototype.drawNode = function (args) {\n    if (this.parent.swimlaneSettings.template && this.parent.isReact) {\n      var templateId = this.parent.element.id + '_treeviewTemplate';\n      var treeViewTemplate = this.parent.templateParser(this.parent.swimlaneSettings.template)(args.nodeData, this.parent, 'nodeTemplate', templateId, false);\n      append(treeViewTemplate, args.node.querySelector('.e-list-text'));\n    }\n  };\n\n  return MobileLayout;\n}();\n\nexport { MobileLayout };","map":{"version":3,"names":["append","createElement","EventHandler","addClass","removeClass","TreeView","Popup","events","cls","MobileLayout","parent","prototype","renderSwimlaneHeader","toolbarWrapper","className","SWIMLANE_HEADER_CLASS","innerHTML","SWIMLANE_HEADER_TOOLBAR_CLASS","TOOLBAR_MENU_CLASS","TOOLBAR_MENU_ICON_CLASS","TOOLBAR_LEVEL_TITLE_CLASS","TOOLBAR_SWIMLANE_NAME_CLASS","element","appendChild","add","querySelector","menuClick","renderSwimlaneTree","height","offsetHeight","treeHeight","window","innerHeight","popupOverlay","SWIMLANE_OVERLAY_CLASS","styles","wrapper","SWIMLANE_CONTENT_CLASS","treeWrapper","SWIMLANE_RESOURCE_CLASS","swimlaneTree","SWIMLANE_TREE_CLASS","treeViewObj","cssClass","enableRtl","fields","dataSource","layoutModule","kanbanRows","id","text","nodeTemplate","swimlaneSettings","template","nodeClicked","treeSwimlaneClick","bind","drawNode","appendTo","popupObj","targetType","actionOnScroll","zIndex","hideAnimation","name","duration","showAnimation","viewPortElement","CONTENT_CLASS","content","treePopup","classList","contains","hide","treeNodes","slice","call","querySelectorAll","swimlaneIndex","show","args","indexOf","node","scrollLeft","notify","dataReady","processedData","kanbanData","event","preventDefault","hidePopup","getWidth","innerWidth","isReact","templateId","treeViewTemplate","templateParser","nodeData"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-kanban/src/kanban/base/mobile-layout.js"],"sourcesContent":["import { append, createElement, EventHandler, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Popup } from '@syncfusion/ej2-popups';\nimport * as events from './constant';\nimport * as cls from './css-constant';\n/**\n * Kanban mobile layout rendering module\n *\n */\nvar MobileLayout = /** @class */ (function () {\n    function MobileLayout(parent) {\n        this.parent = parent;\n    }\n    MobileLayout.prototype.renderSwimlaneHeader = function () {\n        var toolbarWrapper = createElement('div', {\n            className: cls.SWIMLANE_HEADER_CLASS,\n            innerHTML: '<div class=\"' + cls.SWIMLANE_HEADER_TOOLBAR_CLASS + '\"><div class=\"' + cls.TOOLBAR_MENU_CLASS +\n                '\"><div class=\"e-icons ' + cls.TOOLBAR_MENU_ICON_CLASS + '\"></div></div><div class=\"' + cls.TOOLBAR_LEVEL_TITLE_CLASS +\n                '\"><div class=\"' + cls.TOOLBAR_SWIMLANE_NAME_CLASS + '\"></div></div></div>'\n        });\n        this.parent.element.appendChild(toolbarWrapper);\n        EventHandler.add(toolbarWrapper.querySelector('.' + cls.TOOLBAR_MENU_ICON_CLASS), 'click', this.menuClick, this);\n    };\n    MobileLayout.prototype.renderSwimlaneTree = function () {\n        var height = this.parent.element.querySelector('.' + cls.SWIMLANE_HEADER_CLASS).offsetHeight;\n        var treeHeight = window.innerHeight - height;\n        this.popupOverlay = createElement('div', { className: cls.SWIMLANE_OVERLAY_CLASS, styles: 'height: ' + treeHeight + 'px;' });\n        var wrapper = createElement('div', { className: cls.SWIMLANE_CONTENT_CLASS, styles: 'top:' + height + 'px;' });\n        var treeWrapper = createElement('div', {\n            className: cls.SWIMLANE_RESOURCE_CLASS + ' e-popup-close', styles: 'height: ' + treeHeight + 'px;'\n        });\n        wrapper.appendChild(treeWrapper);\n        wrapper.appendChild(this.popupOverlay);\n        this.parent.element.appendChild(wrapper);\n        var swimlaneTree = createElement('div', { className: cls.SWIMLANE_TREE_CLASS });\n        treeWrapper.appendChild(swimlaneTree);\n        this.treeViewObj = new TreeView({\n            cssClass: this.parent.cssClass,\n            enableRtl: this.parent.enableRtl,\n            fields: {\n                dataSource: this.parent.layoutModule.kanbanRows,\n                id: 'keyField',\n                text: 'textField'\n            },\n            nodeTemplate: this.parent.swimlaneSettings.template,\n            nodeClicked: this.treeSwimlaneClick.bind(this),\n            drawNode: this.drawNode.bind(this),\n        });\n        this.treeViewObj.appendTo(swimlaneTree);\n        var popupObj = {\n            targetType: 'relative',\n            actionOnScroll: 'none',\n            enableRtl: this.parent.enableRtl,\n            zIndex: 10,\n            hideAnimation: { name: 'SlideLeftOut', duration: 500 },\n            showAnimation: { name: 'SlideLeftIn', duration: 500 },\n            viewPortElement: this.parent.element.querySelector('.' + cls.CONTENT_CLASS)\n        };\n        popupObj.content = this.treeViewObj.element;\n        this.treePopup = new Popup(treeWrapper, popupObj);\n    };\n    MobileLayout.prototype.menuClick = function () {\n        if (this.parent.element.querySelector('.' + cls.SWIMLANE_RESOURCE_CLASS).classList.contains('e-popup-open')) {\n            this.treePopup.hide();\n            removeClass([this.popupOverlay], 'e-enable');\n        }\n        else {\n            var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n            removeClass(treeNodes, 'e-active');\n            addClass([treeNodes[this.parent.layoutModule.swimlaneIndex]], 'e-active');\n            this.treePopup.show();\n            addClass([this.popupOverlay], 'e-enable');\n        }\n    };\n    MobileLayout.prototype.treeSwimlaneClick = function (args) {\n        this.treePopup.hide();\n        var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n        this.parent.layoutModule.swimlaneIndex = treeNodes.indexOf(args.node);\n        this.parent.layoutModule.scrollLeft = 0;\n        this.parent.notify(events.dataReady, { processedData: this.parent.kanbanData });\n        args.event.preventDefault();\n    };\n    MobileLayout.prototype.hidePopup = function () {\n        this.treePopup.hide();\n        removeClass([this.popupOverlay], 'e-enable');\n    };\n    MobileLayout.prototype.getWidth = function () {\n        return (window.innerWidth * 80) / 100;\n    };\n    MobileLayout.prototype.drawNode = function (args) {\n        if (this.parent.swimlaneSettings.template && this.parent.isReact) {\n            var templateId = this.parent.element.id + '_treeviewTemplate';\n            var treeViewTemplate = this.parent.templateParser(this.parent.swimlaneSettings.template)(args.nodeData, this.parent, 'nodeTemplate', templateId, false);\n            append(treeViewTemplate, args.node.querySelector('.e-list-text'));\n        }\n    };\n    return MobileLayout;\n}());\nexport { MobileLayout };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}