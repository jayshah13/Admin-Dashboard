{"ast":null,"code":"import * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * @hidden\n * `CheckBoxFilter` module is used to handle filtering action.\n */\n\nvar CheckBoxFilter =\n/** @class */\nfunction () {\n  /**\n   * Constructor for checkbox filtering module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {FilterSettings} filterSettings - specifies the filtersettings\n   * @param {ServiceLocator} serviceLocator - specifies the ServiceLocator\n   * @hidden\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function CheckBoxFilter(parent, filterSettings, serviceLocator) {\n    this.parent = parent;\n    this.isresetFocus = true;\n    this.checkBoxBase = new CheckBoxFilterBase(parent);\n    this.addEventListener();\n  }\n  /**\n   * To destroy the check box filter.\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  CheckBoxFilter.prototype.destroy = function () {\n    this.removeEventListener();\n    this.checkBoxBase.closeDialog();\n  };\n\n  CheckBoxFilter.prototype.openDialog = function (options) {\n    this.checkBoxBase.openDialog(options);\n    this.parent.log('column_type_missing', {\n      column: options.column\n    });\n  };\n\n  CheckBoxFilter.prototype.closeDialog = function () {\n    this.destroy();\n\n    if (this.isresetFocus) {\n      this.parent.notify(events.restoreFocus, {});\n    }\n  };\n\n  CheckBoxFilter.prototype.closeResponsiveDialog = function () {\n    this.checkBoxBase.closeDialog();\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} - returns the module name\n   * @private\n   */\n\n\n  CheckBoxFilter.prototype.getModuleName = function () {\n    return 'checkboxFilter';\n  };\n\n  CheckBoxFilter.prototype.actionBegin = function (args) {\n    this.parent.trigger(events.actionBegin, args);\n  };\n\n  CheckBoxFilter.prototype.actionComplete = function (args) {\n    this.parent.trigger(events.actionComplete, args);\n  };\n\n  CheckBoxFilter.prototype.actionPrevent = function (args) {\n    if (isActionPrevent(this.parent)) {\n      this.parent.notify(events.preventBatch, args);\n      args.cancel = true;\n    }\n  };\n\n  CheckBoxFilter.prototype.clearCustomFilter = function (col) {\n    this.checkBoxBase.clearFilter(col);\n  };\n\n  CheckBoxFilter.prototype.applyCustomFilter = function () {\n    this.checkBoxBase.fltrBtnHandler();\n    this.checkBoxBase.closeDialog();\n  };\n\n  CheckBoxFilter.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\n    this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\n    this.parent.on(events.fltrPrevent, this.actionPrevent, this);\n  };\n\n  CheckBoxFilter.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.cBoxFltrBegin, this.actionBegin);\n    this.parent.off(events.cBoxFltrComplete, this.actionComplete);\n    this.parent.off(events.fltrPrevent, this.actionPrevent);\n  };\n\n  return CheckBoxFilter;\n}();\n\nexport { CheckBoxFilter };","map":{"version":3,"names":["events","isActionPrevent","CheckBoxFilterBase","CheckBoxFilter","parent","filterSettings","serviceLocator","isresetFocus","checkBoxBase","addEventListener","prototype","destroy","removeEventListener","closeDialog","openDialog","options","log","column","notify","restoreFocus","closeResponsiveDialog","getModuleName","actionBegin","args","trigger","actionComplete","actionPrevent","preventBatch","cancel","clearCustomFilter","col","clearFilter","applyCustomFilter","fltrBtnHandler","isDestroyed","on","cBoxFltrBegin","cBoxFltrComplete","fltrPrevent","off"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin Dashboard/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/checkbox-filter.js"],"sourcesContent":["import * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * @hidden\n * `CheckBoxFilter` module is used to handle filtering action.\n */\nvar CheckBoxFilter = /** @class */ (function () {\n    /**\n     * Constructor for checkbox filtering module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {FilterSettings} filterSettings - specifies the filtersettings\n     * @param {ServiceLocator} serviceLocator - specifies the ServiceLocator\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function CheckBoxFilter(parent, filterSettings, serviceLocator) {\n        this.parent = parent;\n        this.isresetFocus = true;\n        this.checkBoxBase = new CheckBoxFilterBase(parent);\n        this.addEventListener();\n    }\n    /**\n     * To destroy the check box filter.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilter.prototype.destroy = function () {\n        this.removeEventListener();\n        this.checkBoxBase.closeDialog();\n    };\n    CheckBoxFilter.prototype.openDialog = function (options) {\n        this.checkBoxBase.openDialog(options);\n        this.parent.log('column_type_missing', { column: options.column });\n    };\n    CheckBoxFilter.prototype.closeDialog = function () {\n        this.destroy();\n        if (this.isresetFocus) {\n            this.parent.notify(events.restoreFocus, {});\n        }\n    };\n    CheckBoxFilter.prototype.closeResponsiveDialog = function () {\n        this.checkBoxBase.closeDialog();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - returns the module name\n     * @private\n     */\n    CheckBoxFilter.prototype.getModuleName = function () {\n        return 'checkboxFilter';\n    };\n    CheckBoxFilter.prototype.actionBegin = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    CheckBoxFilter.prototype.actionComplete = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    CheckBoxFilter.prototype.actionPrevent = function (args) {\n        if (isActionPrevent(this.parent)) {\n            this.parent.notify(events.preventBatch, args);\n            args.cancel = true;\n        }\n    };\n    CheckBoxFilter.prototype.clearCustomFilter = function (col) {\n        this.checkBoxBase.clearFilter(col);\n    };\n    CheckBoxFilter.prototype.applyCustomFilter = function () {\n        this.checkBoxBase.fltrBtnHandler();\n        this.checkBoxBase.closeDialog();\n    };\n    CheckBoxFilter.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\n        this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\n        this.parent.on(events.fltrPrevent, this.actionPrevent, this);\n    };\n    CheckBoxFilter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cBoxFltrBegin, this.actionBegin);\n        this.parent.off(events.cBoxFltrComplete, this.actionComplete);\n        this.parent.off(events.fltrPrevent, this.actionPrevent);\n    };\n    return CheckBoxFilter;\n}());\nexport { CheckBoxFilter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}