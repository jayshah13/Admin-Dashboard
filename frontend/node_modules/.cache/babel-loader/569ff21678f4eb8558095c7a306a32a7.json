{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\nimport { Component, NotifyPropertyChanges, Property, Complex, Collection, detach } from '@syncfusion/ej2-base';\nimport { addClass, classList, removeClass, compile, formatUnit, L10n, Browser, Event } from '@syncfusion/ej2-base';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { Data } from './data';\nimport { SwimlaneSettings } from '../models/swimlane-settings';\nimport { CardSettings } from '../models/card-settings';\nimport { DialogSettings } from '../models/dialog-settings';\nimport { Columns } from '../models/columns';\nimport { StackedHeaders } from '../models/stacked-headers';\nimport { SortSettings } from '../models/sort-settings';\nimport { Action } from '../actions/action';\nimport { Crud } from '../actions/crud';\nimport { DragAndDrop } from '../actions/drag';\nimport { KanbanDialog } from '../actions/dialog';\nimport { Keyboard } from '../actions/keyboard';\nimport { KanbanTooltip } from '../actions/tooltip';\nimport { KanbanTouch } from '../actions/touch';\nimport { LayoutRender } from './layout-render';\nimport * as events from '../base/constant';\nimport * as cls from './css-constant';\n/**\n * The Kanban component is an efficient way to visually depict various stages of a process using cards with transparent workflows.\n * The component has rich set of APIs, methods, and events used to enable or disable its features and customize them.\n * ```html\n * <div id=\"kanban\"></div>\n * ```\n * ```typescript\n * <script>\n *   var kanbanObj = new Kanban();\n *   kanbanObj.appendTo(\"#kanban\");\n * </script>\n * ```\n */\n\nvar Kanban =\n/** @class */\nfunction (_super) {\n  __extends(Kanban, _super);\n  /**\n   * Constructor for creating the Kanban widget\n   *\n   * @param {KanbanModel} options Accepts the kanban properties to render the component.\n   * @param {string | HTMLElement} element Accepts the DOM element reference as either selector or element to render the component.\n   */\n\n\n  function Kanban(options, element) {\n    return _super.call(this, options, element) || this;\n  }\n  /**\n   * Initializes the values of private members.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Kanban.prototype.preRender = function () {\n    this.isAdaptive = Browser.isDevice;\n    this.kanbanData = [];\n\n    if (!this.enablePersistence || !this.swimlaneToggleArray) {\n      this.swimlaneToggleArray = [];\n    }\n\n    this.activeCardData = {\n      data: null,\n      element: null\n    };\n    var defaultLocale = {\n      items: 'items',\n      min: 'Min',\n      max: 'Max',\n      cardsSelected: 'Cards Selected',\n      addTitle: 'Add New Card',\n      editTitle: 'Edit Card Details',\n      deleteTitle: 'Delete Card',\n      deleteContent: 'Are you sure you want to delete this card?',\n      save: 'Save',\n      delete: 'Delete',\n      cancel: 'Cancel',\n      yes: 'Yes',\n      no: 'No',\n      close: 'Close',\n      noCard: 'No cards to display',\n      unassigned: 'Unassigned'\n    };\n    this.localeObj = new L10n(this.getModuleName(), defaultLocale, this.locale);\n    this.scrollPosition = {\n      content: {\n        left: 0,\n        top: 0\n      },\n      column: {}\n    };\n    this.isInitialRender = true;\n  };\n  /**\n   * To provide the array of modules needed for control rendering\n   *\n   * @returns {ModuleDeclaration[]} Returns the declared modules.\n   * @private\n   */\n\n\n  Kanban.prototype.requiredModules = function () {\n    var modules = [];\n    return modules;\n  };\n  /**\n   * Returns the properties to be maintained in the persisted state.\n   *\n   * @returns {string} Returns the persistance state.\n   * @private\n   */\n\n\n  Kanban.prototype.getPersistData = function () {\n    if (this.dataSource.length > 0) {\n      return this.addOnPersist(['columns', 'dataSource', 'swimlaneToggleArray']);\n    } else {\n      return this.addOnPersist(['columns', 'kanbanData', 'swimlaneToggleArray']);\n    }\n  };\n  /**\n   * Core method to return the component name.\n   *\n   * @returns {string} Returns the module name.\n   * @private\n   */\n\n\n  Kanban.prototype.getModuleName = function () {\n    return 'kanban';\n  };\n  /**\n   * Core method that initializes the control rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Kanban.prototype.render = function () {\n    var addClasses = [cls.ROOT_CLASS];\n    var removeClasses = [];\n\n    if (this.enableRtl) {\n      addClasses.push(cls.RTL_CLASS);\n    } else {\n      removeClasses.push(cls.RTL_CLASS);\n    }\n\n    if (this.isAdaptive) {\n      addClasses.push(cls.DEVICE_CLASS);\n    } else {\n      removeClasses.push(cls.DEVICE_CLASS);\n    }\n\n    if (this.cssClass) {\n      addClasses.push(this.cssClass);\n    }\n\n    this.element.setAttribute('role', 'main');\n    classList(this.element, addClasses, removeClasses);\n    this.element.style.width = formatUnit(this.width);\n    this.element.style.height = formatUnit(this.height);\n    createSpinner({\n      target: this.element\n    });\n    this.showSpinner();\n    this.initializeModules();\n  };\n  /**\n   * Called internally, if any of the property value changed.\n   *\n   * @param {KanbanModel} newProp Gets the updated values\n   * @param {KanbanModel} oldProp Gets the previous values\n   * @returns {void}\n   * @private\n   */\n\n\n  Kanban.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'cssClass':\n          if (oldProp.cssClass) {\n            removeClass([this.element], oldProp.cssClass);\n          }\n\n          if (newProp.cssClass) {\n            addClass([this.element], newProp.cssClass);\n          }\n\n          break;\n\n        case 'enableRtl':\n        case 'locale':\n          this.refresh();\n          break;\n\n        case 'width':\n          this.element.style.width = formatUnit(newProp.width);\n          this.element.querySelector('.' + cls.HEADER_CLASS).firstElementChild.style.width = 'auto';\n          this.notify(events.contentReady, {});\n          break;\n\n        case 'height':\n          this.element.style.height = formatUnit(newProp.height);\n          this.element.querySelector('.' + cls.CONTENT_CLASS).style.height = 'auto';\n          this.notify(events.contentReady, {});\n          break;\n\n        case 'dataSource':\n        case 'query':\n          if (this.dataModule) {\n            this.dataModule.setState({\n              isDataChanged: false\n            });\n          }\n\n          this.dataModule = new Data(this);\n          break;\n\n        case 'columns':\n        case 'constraintType':\n          this.notify(events.dataReady, {\n            processedData: this.kanbanData\n          });\n          break;\n\n        case 'swimlaneSettings':\n          this.onSwimlaneSettingsPropertyChanged(newProp.swimlaneSettings, oldProp.swimlaneSettings);\n          break;\n\n        case 'cardSettings':\n          this.onCardSettingsPropertyChanged(newProp.cardSettings, oldProp.cardSettings);\n          break;\n\n        case 'allowDragAndDrop':\n          if (newProp.allowDragAndDrop) {\n            this.layoutModule.wireDragEvent();\n          } else {\n            this.layoutModule.unWireDragEvent();\n          }\n\n          break;\n\n        case 'enableTooltip':\n          if (this.tooltipModule) {\n            this.tooltipModule.destroy();\n            this.tooltipModule = null;\n          }\n\n          if (newProp.enableTooltip) {\n            this.tooltipModule = new KanbanTooltip(this);\n            this.layoutModule.refreshCards();\n          }\n\n          break;\n\n        case 'dialogSettings':\n          if (newProp.dialogSettings) {\n            this.dialogModule = new KanbanDialog(this);\n          }\n\n          break;\n\n        case 'allowKeyboard':\n          if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n            this.keyboardModule = null;\n          }\n\n          if (newProp.allowKeyboard) {\n            this.keyboardModule = new Keyboard(this);\n          }\n\n          break;\n\n        case 'stackedHeaders':\n          this.layoutModule.refreshHeaders();\n          break;\n\n        case 'sortSettings':\n          this.notify(events.dataReady, {\n            processedData: this.kanbanData\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Kanban.prototype.onSwimlaneSettingsPropertyChanged = function (newProp, _oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'keyField':\n        case 'textField':\n        case 'showEmptyRow':\n        case 'showItemCount':\n        case 'template':\n        case 'sortDirection':\n          this.notify(events.dataReady, {\n            processedData: this.kanbanData\n          });\n          break;\n\n        case 'enableFrozenRows':\n          if (this.layoutModule.frozenSwimlaneRow && !this.swimlaneSettings.enableFrozenRows) {\n            this.layoutModule.removeFrozenRows();\n          }\n\n          break;\n      }\n    }\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Kanban.prototype.onCardSettingsPropertyChanged = function (newProp, _oldProp) {\n    var cards = [];\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'showHeader':\n        case 'headerField':\n        case 'contentField':\n        case 'template':\n        case 'tagsField':\n        case 'grabberField':\n        case 'footerCssField':\n          this.layoutModule.refreshCards();\n          break;\n\n        case 'selectionType':\n          cards = this.getSelectedCards();\n\n          if (cards.length > 0) {\n            removeClass(cards, cls.CARD_SELECTION_CLASS);\n            this.layoutModule.disableAttributeSelection(cards);\n          }\n\n          break;\n      }\n    }\n  };\n\n  Kanban.prototype.initializeModules = function () {\n    this.dataModule = new Data(this);\n    this.layoutModule = new LayoutRender(this);\n\n    if (this.allowKeyboard) {\n      this.keyboardModule = new Keyboard(this);\n    }\n\n    this.actionModule = new Action(this);\n    this.crudModule = new Crud(this);\n    this.dragAndDropModule = new DragAndDrop(this);\n    this.dialogModule = new KanbanDialog(this);\n\n    if (this.enableTooltip) {\n      this.tooltipModule = new KanbanTooltip(this);\n    }\n\n    if (Browser.isDevice || Browser.isTouch) {\n      this.touchModule = new KanbanTouch(this);\n    }\n  };\n\n  Kanban.prototype.renderTemplates = function () {\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  };\n\n  Kanban.prototype.resetTemplates = function (templates) {\n    if (this.isReact) {\n      this.clearTemplate(templates);\n    }\n  };\n\n  Kanban.prototype.destroyModules = function () {\n    if (this.layoutModule) {\n      this.layoutModule.destroy();\n      this.layoutModule = null;\n    }\n\n    if (this.keyboardModule) {\n      this.keyboardModule.destroy();\n      this.keyboardModule = null;\n    }\n\n    if (this.touchModule) {\n      this.touchModule.destroy();\n      this.touchModule = null;\n    }\n\n    this.dialogModule = null;\n    this.actionModule = null;\n    this.crudModule = null;\n    this.dataModule = null;\n    this.dragAndDropModule = null;\n  };\n\n  Kanban.prototype.templateParser = function (template) {\n    if (template) {\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        }\n      } catch (error) {\n        return compile(template);\n      }\n    }\n\n    return undefined;\n  };\n  /**\n   * Returns the card details based on card ID from the board.\n   *\n   * @function getCardDetails\n   * @param {Element} target Accepts the card element to get the details.\n   * @returns {Object} Returns the card details based on given target.\n   */\n\n\n  Kanban.prototype.getCardDetails = function (target) {\n    var _this = this;\n\n    var isNumeric = typeof this.kanbanData[0][this.cardSettings.headerField] === 'number';\n    var targetId = isNumeric ? parseInt(target.getAttribute('data-id'), 10) : target.getAttribute('data-id');\n    var cardObj = this.kanbanData.filter(function (data) {\n      return data[_this.cardSettings.headerField] === targetId;\n    })[0];\n    return cardObj;\n  };\n  /**\n   * Returns the column data based on column key input.\n   *\n   * @function getColumnData\n   * @param {string | number} columnKey Accepts the column key to get the objects.\n   * @param {Object[]} dataSource Accepts the collection of objects to get the results based on given columnKey.\n   * @returns {Object[]} Returns the collection of card objects based on given inputs.\n   */\n\n\n  Kanban.prototype.getColumnData = function (columnKey, dataSource) {\n    return this.layoutModule.getColumnCards(dataSource)[columnKey] || [];\n  };\n  /**\n   * Returns the swimlane column data based on swimlane keyField input.\n   *\n   * @function getSwimlaneData\n   * @param {string} keyField Accepts the swimlane keyField to get the objects.\n   * @returns {Object[]} Returns the collection of card objects based on given inputs.\n   */\n\n\n  Kanban.prototype.getSwimlaneData = function (keyField) {\n    return this.layoutModule.getSwimlaneCards()[keyField] || [];\n  };\n  /**\n   * Gets the list of selected cards from the board.\n   *\n   * @function getSelectedCards\n   * @returns {HTMLElement[]} Returns the card elements based on selection.\n   */\n\n\n  Kanban.prototype.getSelectedCards = function () {\n    return [].slice.call(this.element.querySelectorAll('.' + cls.CARD_CLASS + '.' + cls.CARD_SELECTION_CLASS));\n  };\n  /**\n   * Allows you to show the spinner on Kanban at the required scenarios.\n   *\n   * @function showSpinner\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.showSpinner = function () {\n    showSpinner(this.element);\n  };\n  /**\n   * When the spinner is shown manually using the showSpinner method, it can be hidden using this `hideSpinner` method.\n   *\n   * @function hideSpinner\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.hideSpinner = function () {\n    hideSpinner(this.element);\n  };\n  /**\n   * To manually open the dialog.\n   *\n   * @function openDialog\n   * @param {CurrentAction} action Accepts the action for which the dialog needs to be opened such as either for new card creation or\n   *  editing of existing cards. The applicable action names are `Add` and `Edit`.\n   * @param {Object} data It can be card data.\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.openDialog = function (action, data) {\n    this.dialogModule.openDialog(action, data);\n  };\n  /**\n   * To manually close the dialog.\n   *\n   * @function closeDialog\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.closeDialog = function () {\n    this.dialogModule.closeDialog();\n  };\n  /**\n   * Adds the new card to the data source of Kanban and layout.\n   *\n   * @function addCard\n   * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be added into Kanban.\n   * @param {number} index Accepts the index to insert the card in column.\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.addCard = function (cardData, index) {\n    this.crudModule.addCard(cardData, index);\n  };\n  /**\n   * Updates the changes made in the card object by passing it as a parameter to the data source.\n   *\n   * @function updateCard\n   * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be updated into Kanban.\n   * @param {number} index Accepts the index to update the card in column.\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.updateCard = function (cardData, index) {\n    this.crudModule.updateCard(cardData, index);\n  };\n  /**\n   * Deletes the card based on the provided ID or card collection in the argument list.\n   *\n   * @function deleteCard\n   * @param {string | number | Object | Object[]} cardData Accepts the ID of the remove card in string or number type or\n   * Single card object or Collection of card objects to be removed from Kanban\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.deleteCard = function (cardData) {\n    this.crudModule.deleteCard(cardData);\n  };\n  /**\n   * Add the column to Kanban board dynamically based on the provided column options and index in the argument list.\n   *\n   * @function addColumn\n   * @param {ColumnsModel} columnOptions Accepts the properties to new column that are going to be added in the board.\n   * @param {number} index Accepts the index of column to add the new column.\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.addColumn = function (columnOptions, index) {\n    this.actionModule.addColumn(columnOptions, index);\n  };\n  /**\n   * Deletes the column based on the provided index value.\n   *\n   * @function deleteColumn\n   * @param {number} index Accepts the index of column to delete the existing column from Kanban board.\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.deleteColumn = function (index) {\n    this.actionModule.deleteColumn(index);\n  };\n  /**\n   * Shows the column from hidden based on the provided key in the columns.\n   *\n   * @function showColumn\n   * @param {string | number} key Accepts the hidden column key name to be shown from the hidden state in board.\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.showColumn = function (key) {\n    this.actionModule.showColumn(key);\n  };\n  /**\n   * Hides the column from Kanban board based on the provided key in the columns.\n   *\n   * @function hideColumn\n   * @param {string | number} key Accepts the visible column key name to be hidden from the board.\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.hideColumn = function (key) {\n    this.actionModule.hideColumn(key);\n  };\n  /**\n   * Method to refresh the Kanban UI based on modified records.\n   *\n   * @function refreshUI\n   * @param {ActionEventArgs} args Accepts the added, changed or deleted data.\n   * @param {number} index Accepts the index of the changed items.\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.refreshUI = function (args, index) {\n    index = index ? index : 0;\n    this.dataModule.refreshUI(args, index);\n  };\n  /**\n   * Method to refresh the column header.\n   *\n   * @method refreshHeader\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.refreshHeader = function () {\n    this.resetTemplates(['columnTemplate']);\n\n    if (this.layoutModule) {\n      this.layoutModule.refreshHeaders();\n    }\n\n    this.renderTemplates();\n  };\n  /**\n   * Removes the control from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n   *\n   * @function destroy\n   * @returns {void}\n   */\n\n\n  Kanban.prototype.destroy = function () {\n    this.destroyModules();\n    [].slice.call(this.element.childNodes).forEach(function (node) {\n      detach(node);\n    });\n    var removeClasses = [cls.ROOT_CLASS];\n\n    if (this.cssClass) {\n      removeClasses = removeClasses.concat(this.cssClass.split(' '));\n    }\n\n    removeClass([this.element], removeClasses);\n\n    _super.prototype.destroy.call(this);\n  };\n\n  __decorate([Property()], Kanban.prototype, \"cssClass\", void 0);\n\n  __decorate([Property('auto')], Kanban.prototype, \"width\", void 0);\n\n  __decorate([Property('auto')], Kanban.prototype, \"height\", void 0);\n\n  __decorate([Property([])], Kanban.prototype, \"dataSource\", void 0);\n\n  __decorate([Property()], Kanban.prototype, \"query\", void 0);\n\n  __decorate([Property()], Kanban.prototype, \"keyField\", void 0);\n\n  __decorate([Property('Column')], Kanban.prototype, \"constraintType\", void 0);\n\n  __decorate([Property([])], Kanban.prototype, \"externalDropId\", void 0);\n\n  __decorate([Collection([], Columns)], Kanban.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], Kanban.prototype, \"allowKeyboard\", void 0);\n\n  __decorate([Collection([], StackedHeaders)], Kanban.prototype, \"stackedHeaders\", void 0);\n\n  __decorate([Complex({}, SwimlaneSettings)], Kanban.prototype, \"swimlaneSettings\", void 0);\n\n  __decorate([Complex({}, CardSettings)], Kanban.prototype, \"cardSettings\", void 0);\n\n  __decorate([Complex({}, SortSettings)], Kanban.prototype, \"sortSettings\", void 0);\n\n  __decorate([Complex({}, DialogSettings)], Kanban.prototype, \"dialogSettings\", void 0);\n\n  __decorate([Property(true)], Kanban.prototype, \"allowDragAndDrop\", void 0);\n\n  __decorate([Property(false)], Kanban.prototype, \"enableTooltip\", void 0);\n\n  __decorate([Property(false)], Kanban.prototype, \"showEmptyColumn\", void 0);\n\n  __decorate([Property(false)], Kanban.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Property()], Kanban.prototype, \"tooltipTemplate\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"created\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"dataBinding\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"cardClick\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"cardDoubleClick\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"queryCellInfo\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"cardRendered\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"dragStart\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"drag\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"dragStop\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"dialogOpen\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"dialogClose\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"dataStateChange\", void 0);\n\n  __decorate([Event()], Kanban.prototype, \"dataSourceChanged\", void 0);\n\n  Kanban = __decorate([NotifyPropertyChanges], Kanban);\n  return Kanban;\n}(Component);\n\nexport { Kanban };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","NotifyPropertyChanges","Property","Complex","Collection","detach","addClass","classList","removeClass","compile","formatUnit","L10n","Browser","Event","createSpinner","hideSpinner","showSpinner","Data","SwimlaneSettings","CardSettings","DialogSettings","Columns","StackedHeaders","SortSettings","Action","Crud","DragAndDrop","KanbanDialog","Keyboard","KanbanTooltip","KanbanTouch","LayoutRender","events","cls","Kanban","_super","options","element","call","preRender","isAdaptive","isDevice","kanbanData","enablePersistence","swimlaneToggleArray","activeCardData","data","defaultLocale","items","min","max","cardsSelected","addTitle","editTitle","deleteTitle","deleteContent","save","delete","cancel","yes","no","close","noCard","unassigned","localeObj","getModuleName","locale","scrollPosition","content","left","top","column","isInitialRender","requiredModules","modules","getPersistData","dataSource","addOnPersist","render","addClasses","ROOT_CLASS","removeClasses","enableRtl","push","RTL_CLASS","DEVICE_CLASS","cssClass","setAttribute","style","width","height","initializeModules","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","refresh","querySelector","HEADER_CLASS","firstElementChild","notify","contentReady","CONTENT_CLASS","dataModule","setState","isDataChanged","dataReady","processedData","onSwimlaneSettingsPropertyChanged","swimlaneSettings","onCardSettingsPropertyChanged","cardSettings","allowDragAndDrop","layoutModule","wireDragEvent","unWireDragEvent","tooltipModule","destroy","enableTooltip","refreshCards","dialogSettings","dialogModule","keyboardModule","allowKeyboard","refreshHeaders","_oldProp","frozenSwimlaneRow","enableFrozenRows","removeFrozenRows","cards","getSelectedCards","CARD_SELECTION_CLASS","disableAttributeSelection","actionModule","crudModule","dragAndDropModule","isTouch","touchModule","renderTemplates","isReact","renderReactTemplates","resetTemplates","templates","clearTemplate","destroyModules","templateParser","template","document","querySelectorAll","innerHTML","trim","error","undefined","getCardDetails","_this","isNumeric","headerField","targetId","parseInt","getAttribute","cardObj","filter","getColumnData","columnKey","getColumnCards","getSwimlaneData","keyField","getSwimlaneCards","slice","CARD_CLASS","openDialog","action","closeDialog","addCard","cardData","index","updateCard","deleteCard","addColumn","columnOptions","deleteColumn","showColumn","hideColumn","refreshUI","args","refreshHeader","childNodes","forEach","node","concat","split"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin Dashboard/Frontend/node_modules/@syncfusion/ej2-kanban/src/kanban/base/kanban.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, NotifyPropertyChanges, Property, Complex, Collection, detach } from '@syncfusion/ej2-base';\nimport { addClass, classList, removeClass, compile, formatUnit, L10n, Browser, Event } from '@syncfusion/ej2-base';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { Data } from './data';\nimport { SwimlaneSettings } from '../models/swimlane-settings';\nimport { CardSettings } from '../models/card-settings';\nimport { DialogSettings } from '../models/dialog-settings';\nimport { Columns } from '../models/columns';\nimport { StackedHeaders } from '../models/stacked-headers';\nimport { SortSettings } from '../models/sort-settings';\nimport { Action } from '../actions/action';\nimport { Crud } from '../actions/crud';\nimport { DragAndDrop } from '../actions/drag';\nimport { KanbanDialog } from '../actions/dialog';\nimport { Keyboard } from '../actions/keyboard';\nimport { KanbanTooltip } from '../actions/tooltip';\nimport { KanbanTouch } from '../actions/touch';\nimport { LayoutRender } from './layout-render';\nimport * as events from '../base/constant';\nimport * as cls from './css-constant';\n/**\n * The Kanban component is an efficient way to visually depict various stages of a process using cards with transparent workflows.\n * The component has rich set of APIs, methods, and events used to enable or disable its features and customize them.\n * ```html\n * <div id=\"kanban\"></div>\n * ```\n * ```typescript\n * <script>\n *   var kanbanObj = new Kanban();\n *   kanbanObj.appendTo(\"#kanban\");\n * </script>\n * ```\n */\nvar Kanban = /** @class */ (function (_super) {\n    __extends(Kanban, _super);\n    /**\n     * Constructor for creating the Kanban widget\n     *\n     * @param {KanbanModel} options Accepts the kanban properties to render the component.\n     * @param {string | HTMLElement} element Accepts the DOM element reference as either selector or element to render the component.\n     */\n    function Kanban(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Initializes the values of private members.\n     *\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.preRender = function () {\n        this.isAdaptive = Browser.isDevice;\n        this.kanbanData = [];\n        if (!this.enablePersistence || !this.swimlaneToggleArray) {\n            this.swimlaneToggleArray = [];\n        }\n        this.activeCardData = { data: null, element: null };\n        var defaultLocale = {\n            items: 'items',\n            min: 'Min',\n            max: 'Max',\n            cardsSelected: 'Cards Selected',\n            addTitle: 'Add New Card',\n            editTitle: 'Edit Card Details',\n            deleteTitle: 'Delete Card',\n            deleteContent: 'Are you sure you want to delete this card?',\n            save: 'Save',\n            delete: 'Delete',\n            cancel: 'Cancel',\n            yes: 'Yes',\n            no: 'No',\n            close: 'Close',\n            noCard: 'No cards to display',\n            unassigned: 'Unassigned'\n        };\n        this.localeObj = new L10n(this.getModuleName(), defaultLocale, this.locale);\n        this.scrollPosition = { content: { left: 0, top: 0 }, column: {} };\n        this.isInitialRender = true;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the declared modules.\n     * @private\n     */\n    Kanban.prototype.requiredModules = function () {\n        var modules = [];\n        return modules;\n    };\n    /**\n     * Returns the properties to be maintained in the persisted state.\n     *\n     * @returns {string} Returns the persistance state.\n     * @private\n     */\n    Kanban.prototype.getPersistData = function () {\n        if (this.dataSource.length > 0) {\n            return this.addOnPersist(['columns', 'dataSource', 'swimlaneToggleArray']);\n        }\n        else {\n            return this.addOnPersist(['columns', 'kanbanData', 'swimlaneToggleArray']);\n        }\n    };\n    /**\n     * Core method to return the component name.\n     *\n     * @returns {string} Returns the module name.\n     * @private\n     */\n    Kanban.prototype.getModuleName = function () {\n        return 'kanban';\n    };\n    /**\n     * Core method that initializes the control rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.render = function () {\n        var addClasses = [cls.ROOT_CLASS];\n        var removeClasses = [];\n        if (this.enableRtl) {\n            addClasses.push(cls.RTL_CLASS);\n        }\n        else {\n            removeClasses.push(cls.RTL_CLASS);\n        }\n        if (this.isAdaptive) {\n            addClasses.push(cls.DEVICE_CLASS);\n        }\n        else {\n            removeClasses.push(cls.DEVICE_CLASS);\n        }\n        if (this.cssClass) {\n            addClasses.push(this.cssClass);\n        }\n        this.element.setAttribute('role', 'main');\n        classList(this.element, addClasses, removeClasses);\n        this.element.style.width = formatUnit(this.width);\n        this.element.style.height = formatUnit(this.height);\n        createSpinner({ target: this.element });\n        this.showSpinner();\n        this.initializeModules();\n    };\n    /**\n     * Called internally, if any of the property value changed.\n     *\n     * @param {KanbanModel} newProp Gets the updated values\n     * @param {KanbanModel} oldProp Gets the previous values\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        removeClass([this.element], oldProp.cssClass);\n                    }\n                    if (newProp.cssClass) {\n                        addClass([this.element], newProp.cssClass);\n                    }\n                    break;\n                case 'enableRtl':\n                case 'locale':\n                    this.refresh();\n                    break;\n                case 'width':\n                    this.element.style.width = formatUnit(newProp.width);\n                    this.element.querySelector('.' + cls.HEADER_CLASS).firstElementChild.style.width = 'auto';\n                    this.notify(events.contentReady, {});\n                    break;\n                case 'height':\n                    this.element.style.height = formatUnit(newProp.height);\n                    this.element.querySelector('.' + cls.CONTENT_CLASS).style.height = 'auto';\n                    this.notify(events.contentReady, {});\n                    break;\n                case 'dataSource':\n                case 'query':\n                    if (this.dataModule) {\n                        this.dataModule.setState({ isDataChanged: false });\n                    }\n                    this.dataModule = new Data(this);\n                    break;\n                case 'columns':\n                case 'constraintType':\n                    this.notify(events.dataReady, { processedData: this.kanbanData });\n                    break;\n                case 'swimlaneSettings':\n                    this.onSwimlaneSettingsPropertyChanged(newProp.swimlaneSettings, oldProp.swimlaneSettings);\n                    break;\n                case 'cardSettings':\n                    this.onCardSettingsPropertyChanged(newProp.cardSettings, oldProp.cardSettings);\n                    break;\n                case 'allowDragAndDrop':\n                    if (newProp.allowDragAndDrop) {\n                        this.layoutModule.wireDragEvent();\n                    }\n                    else {\n                        this.layoutModule.unWireDragEvent();\n                    }\n                    break;\n                case 'enableTooltip':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.destroy();\n                        this.tooltipModule = null;\n                    }\n                    if (newProp.enableTooltip) {\n                        this.tooltipModule = new KanbanTooltip(this);\n                        this.layoutModule.refreshCards();\n                    }\n                    break;\n                case 'dialogSettings':\n                    if (newProp.dialogSettings) {\n                        this.dialogModule = new KanbanDialog(this);\n                    }\n                    break;\n                case 'allowKeyboard':\n                    if (this.keyboardModule) {\n                        this.keyboardModule.destroy();\n                        this.keyboardModule = null;\n                    }\n                    if (newProp.allowKeyboard) {\n                        this.keyboardModule = new Keyboard(this);\n                    }\n                    break;\n                case 'stackedHeaders':\n                    this.layoutModule.refreshHeaders();\n                    break;\n                case 'sortSettings':\n                    this.notify(events.dataReady, { processedData: this.kanbanData });\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Kanban.prototype.onSwimlaneSettingsPropertyChanged = function (newProp, _oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'keyField':\n                case 'textField':\n                case 'showEmptyRow':\n                case 'showItemCount':\n                case 'template':\n                case 'sortDirection':\n                    this.notify(events.dataReady, { processedData: this.kanbanData });\n                    break;\n                case 'enableFrozenRows':\n                    if (this.layoutModule.frozenSwimlaneRow && !this.swimlaneSettings.enableFrozenRows) {\n                        this.layoutModule.removeFrozenRows();\n                    }\n                    break;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Kanban.prototype.onCardSettingsPropertyChanged = function (newProp, _oldProp) {\n        var cards = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'showHeader':\n                case 'headerField':\n                case 'contentField':\n                case 'template':\n                case 'tagsField':\n                case 'grabberField':\n                case 'footerCssField':\n                    this.layoutModule.refreshCards();\n                    break;\n                case 'selectionType':\n                    cards = this.getSelectedCards();\n                    if (cards.length > 0) {\n                        removeClass(cards, cls.CARD_SELECTION_CLASS);\n                        this.layoutModule.disableAttributeSelection(cards);\n                    }\n                    break;\n            }\n        }\n    };\n    Kanban.prototype.initializeModules = function () {\n        this.dataModule = new Data(this);\n        this.layoutModule = new LayoutRender(this);\n        if (this.allowKeyboard) {\n            this.keyboardModule = new Keyboard(this);\n        }\n        this.actionModule = new Action(this);\n        this.crudModule = new Crud(this);\n        this.dragAndDropModule = new DragAndDrop(this);\n        this.dialogModule = new KanbanDialog(this);\n        if (this.enableTooltip) {\n            this.tooltipModule = new KanbanTooltip(this);\n        }\n        if (Browser.isDevice || Browser.isTouch) {\n            this.touchModule = new KanbanTouch(this);\n        }\n    };\n    Kanban.prototype.renderTemplates = function () {\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    Kanban.prototype.resetTemplates = function (templates) {\n        if (this.isReact) {\n            this.clearTemplate(templates);\n        }\n    };\n    Kanban.prototype.destroyModules = function () {\n        if (this.layoutModule) {\n            this.layoutModule.destroy();\n            this.layoutModule = null;\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n            this.keyboardModule = null;\n        }\n        if (this.touchModule) {\n            this.touchModule.destroy();\n            this.touchModule = null;\n        }\n        this.dialogModule = null;\n        this.actionModule = null;\n        this.crudModule = null;\n        this.dataModule = null;\n        this.dragAndDropModule = null;\n    };\n    Kanban.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Returns the card details based on card ID from the board.\n     *\n     * @function getCardDetails\n     * @param {Element} target Accepts the card element to get the details.\n     * @returns {Object} Returns the card details based on given target.\n     */\n    Kanban.prototype.getCardDetails = function (target) {\n        var _this = this;\n        var isNumeric = typeof (this.kanbanData[0])[this.cardSettings.headerField] === 'number';\n        var targetId = isNumeric ? parseInt(target.getAttribute('data-id'), 10) : target.getAttribute('data-id');\n        var cardObj = this.kanbanData.filter(function (data) {\n            return data[_this.cardSettings.headerField] === targetId;\n        })[0];\n        return cardObj;\n    };\n    /**\n     * Returns the column data based on column key input.\n     *\n     * @function getColumnData\n     * @param {string | number} columnKey Accepts the column key to get the objects.\n     * @param {Object[]} dataSource Accepts the collection of objects to get the results based on given columnKey.\n     * @returns {Object[]} Returns the collection of card objects based on given inputs.\n     */\n    Kanban.prototype.getColumnData = function (columnKey, dataSource) {\n        return this.layoutModule.getColumnCards(dataSource)[columnKey] || [];\n    };\n    /**\n     * Returns the swimlane column data based on swimlane keyField input.\n     *\n     * @function getSwimlaneData\n     * @param {string} keyField Accepts the swimlane keyField to get the objects.\n     * @returns {Object[]} Returns the collection of card objects based on given inputs.\n     */\n    Kanban.prototype.getSwimlaneData = function (keyField) {\n        return this.layoutModule.getSwimlaneCards()[keyField] || [];\n    };\n    /**\n     * Gets the list of selected cards from the board.\n     *\n     * @function getSelectedCards\n     * @returns {HTMLElement[]} Returns the card elements based on selection.\n     */\n    Kanban.prototype.getSelectedCards = function () {\n        return [].slice.call(this.element.querySelectorAll('.' + cls.CARD_CLASS + '.' + cls.CARD_SELECTION_CLASS));\n    };\n    /**\n     * Allows you to show the spinner on Kanban at the required scenarios.\n     *\n     * @function showSpinner\n     * @returns {void}\n     */\n    Kanban.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * When the spinner is shown manually using the showSpinner method, it can be hidden using this `hideSpinner` method.\n     *\n     * @function hideSpinner\n     * @returns {void}\n     */\n    Kanban.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * To manually open the dialog.\n     *\n     * @function openDialog\n     * @param {CurrentAction} action Accepts the action for which the dialog needs to be opened such as either for new card creation or\n     *  editing of existing cards. The applicable action names are `Add` and `Edit`.\n     * @param {Object} data It can be card data.\n     * @returns {void}\n     */\n    Kanban.prototype.openDialog = function (action, data) {\n        this.dialogModule.openDialog(action, data);\n    };\n    /**\n     * To manually close the dialog.\n     *\n     * @function closeDialog\n     * @returns {void}\n     */\n    Kanban.prototype.closeDialog = function () {\n        this.dialogModule.closeDialog();\n    };\n    /**\n     * Adds the new card to the data source of Kanban and layout.\n     *\n     * @function addCard\n     * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be added into Kanban.\n     * @param {number} index Accepts the index to insert the card in column.\n     * @returns {void}\n     */\n    Kanban.prototype.addCard = function (cardData, index) {\n        this.crudModule.addCard(cardData, index);\n    };\n    /**\n     * Updates the changes made in the card object by passing it as a parameter to the data source.\n     *\n     * @function updateCard\n     * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be updated into Kanban.\n     * @param {number} index Accepts the index to update the card in column.\n     * @returns {void}\n     */\n    Kanban.prototype.updateCard = function (cardData, index) {\n        this.crudModule.updateCard(cardData, index);\n    };\n    /**\n     * Deletes the card based on the provided ID or card collection in the argument list.\n     *\n     * @function deleteCard\n     * @param {string | number | Object | Object[]} cardData Accepts the ID of the remove card in string or number type or\n     * Single card object or Collection of card objects to be removed from Kanban\n     * @returns {void}\n     */\n    Kanban.prototype.deleteCard = function (cardData) {\n        this.crudModule.deleteCard(cardData);\n    };\n    /**\n     * Add the column to Kanban board dynamically based on the provided column options and index in the argument list.\n     *\n     * @function addColumn\n     * @param {ColumnsModel} columnOptions Accepts the properties to new column that are going to be added in the board.\n     * @param {number} index Accepts the index of column to add the new column.\n     * @returns {void}\n     */\n    Kanban.prototype.addColumn = function (columnOptions, index) {\n        this.actionModule.addColumn(columnOptions, index);\n    };\n    /**\n     * Deletes the column based on the provided index value.\n     *\n     * @function deleteColumn\n     * @param {number} index Accepts the index of column to delete the existing column from Kanban board.\n     * @returns {void}\n     */\n    Kanban.prototype.deleteColumn = function (index) {\n        this.actionModule.deleteColumn(index);\n    };\n    /**\n     * Shows the column from hidden based on the provided key in the columns.\n     *\n     * @function showColumn\n     * @param {string | number} key Accepts the hidden column key name to be shown from the hidden state in board.\n     * @returns {void}\n     */\n    Kanban.prototype.showColumn = function (key) {\n        this.actionModule.showColumn(key);\n    };\n    /**\n     * Hides the column from Kanban board based on the provided key in the columns.\n     *\n     * @function hideColumn\n     * @param {string | number} key Accepts the visible column key name to be hidden from the board.\n     * @returns {void}\n     */\n    Kanban.prototype.hideColumn = function (key) {\n        this.actionModule.hideColumn(key);\n    };\n    /**\n     * Method to refresh the Kanban UI based on modified records.\n     *\n     * @function refreshUI\n     * @param {ActionEventArgs} args Accepts the added, changed or deleted data.\n     * @param {number} index Accepts the index of the changed items.\n     * @returns {void}\n     */\n    Kanban.prototype.refreshUI = function (args, index) {\n        index = index ? index : 0;\n        this.dataModule.refreshUI(args, index);\n    };\n    /**\n     * Method to refresh the column header.\n     *\n     * @method refreshHeader\n     * @returns {void}\n     */\n    Kanban.prototype.refreshHeader = function () {\n        this.resetTemplates(['columnTemplate']);\n        if (this.layoutModule) {\n            this.layoutModule.refreshHeaders();\n        }\n        this.renderTemplates();\n    };\n    /**\n     * Removes the control from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Kanban.prototype.destroy = function () {\n        this.destroyModules();\n        [].slice.call(this.element.childNodes).forEach(function (node) { detach(node); });\n        var removeClasses = [cls.ROOT_CLASS];\n        if (this.cssClass) {\n            removeClasses = removeClasses.concat(this.cssClass.split(' '));\n        }\n        removeClass([this.element], removeClasses);\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        Property()\n    ], Kanban.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('auto')\n    ], Kanban.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], Kanban.prototype, \"height\", void 0);\n    __decorate([\n        Property([])\n    ], Kanban.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], Kanban.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], Kanban.prototype, \"keyField\", void 0);\n    __decorate([\n        Property('Column')\n    ], Kanban.prototype, \"constraintType\", void 0);\n    __decorate([\n        Property([])\n    ], Kanban.prototype, \"externalDropId\", void 0);\n    __decorate([\n        Collection([], Columns)\n    ], Kanban.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Kanban.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Collection([], StackedHeaders)\n    ], Kanban.prototype, \"stackedHeaders\", void 0);\n    __decorate([\n        Complex({}, SwimlaneSettings)\n    ], Kanban.prototype, \"swimlaneSettings\", void 0);\n    __decorate([\n        Complex({}, CardSettings)\n    ], Kanban.prototype, \"cardSettings\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Kanban.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, DialogSettings)\n    ], Kanban.prototype, \"dialogSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Kanban.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property(false)\n    ], Kanban.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], Kanban.prototype, \"showEmptyColumn\", void 0);\n    __decorate([\n        Property(false)\n    ], Kanban.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property()\n    ], Kanban.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dataBinding\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"cardClick\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"cardDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"cardRendered\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dialogOpen\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dialogClose\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dataSourceChanged\", void 0);\n    Kanban = __decorate([\n        NotifyPropertyChanges\n    ], Kanban);\n    return Kanban;\n}(Component));\nexport { Kanban };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}