{"ast":null,"code":"import * as CONSTANT from './../base/constant';\nimport { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Lists internal component\n *\n * @hidden\n */\n\nvar MDLists =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating the Lists plugin\n   *\n   * @param {IMDFormats} options - specifies the options\n   * @hidden\n   */\n  function MDLists(options) {\n    extend(this, this, options, true);\n    this.selection = this.parent.markdownSelection;\n    this.addEventListener();\n  }\n\n  MDLists.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.LISTS_COMMAND, this.applyListsHandler, this);\n    this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler, this);\n    this.parent.observer.on(EVENTS.KEY_UP_HANDLER, this.keyUpHandler, this);\n  };\n\n  MDLists.prototype.keyDownHandler = function (event) {\n    switch (event.event.which) {\n      case 9:\n        this.tabKey(event);\n        break;\n    }\n\n    switch (event.event.action) {\n      case 'ordered-list':\n        this.applyListsHandler({\n          subCommand: 'OL',\n          callBack: event.callBack\n        });\n        event.event.preventDefault();\n        break;\n\n      case 'unordered-list':\n        this.applyListsHandler({\n          subCommand: 'UL',\n          callBack: event.callBack\n        });\n        event.event.preventDefault();\n        break;\n    }\n  };\n\n  MDLists.prototype.keyUpHandler = function (event) {\n    switch (event.event.which) {\n      case 13:\n        this.enterKey(event);\n        break;\n    }\n  };\n\n  MDLists.prototype.tabKey = function (event) {\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    var addedLength = 0;\n    var isNotFirst = this.isNotFirstLine(textArea, parents[0]);\n\n    if (!isNotFirst && !event.event.shiftKey) {\n      this.restore(textArea, start, end + addedLength, event);\n      return;\n    }\n\n    var listFormat = this.olListType();\n    var regex = this.getListRegex();\n    this.currentAction = this.getAction(parents[0].text);\n\n    for (var i = 0; i < parents.length; i++) {\n      var prevIndex = event.event.shiftKey ? parents[i].line - 1 : parents[i].line - 1;\n      var prevLine = this.selection.getLine(textArea, prevIndex);\n\n      if (prevLine && (!event.event.shiftKey && isNotFirst || event.event.shiftKey)) {\n        var prevLineSplit = prevLine.split('. ');\n        var tabSpace = '\\t';\n        var tabSpaceLength = event.event.shiftKey ? -tabSpace.length : tabSpace.length;\n        var splitTab = parents[i].text.split('\\t');\n\n        if (event.event.shiftKey && splitTab.length === 1) {\n          break;\n        }\n\n        if (this.currentAction === 'OL' && /^\\d+$/.test(prevLineSplit[0].trim()) && listFormat) {\n          event.event.preventDefault();\n          parents[i].text = event.event.shiftKey ? splitTab.splice(1, splitTab.length).join('\\t') : tabSpace + parents[i].text;\n          var curTabSpace = this.getTabSpace(parents[i].text);\n          var prevTabSpace = this.getTabSpace(prevLine);\n          var splitText = parents[i].text.split('. ');\n\n          if (curTabSpace === prevTabSpace) {\n            this.changeTextAreaValue(splitText, this.nextOrderedListValue(prevLineSplit[0].trim()), event, textArea, parents, i, end);\n          } else if (prevTabSpace < curTabSpace) {\n            this.changeTextAreaValue(splitText, '1. ', event, textArea, parents, i, end);\n          } else {\n            for (; prevTabSpace.length > curTabSpace.length; null) {\n              prevIndex = prevIndex - 1;\n              prevLine = this.selection.getLine(textArea, prevIndex);\n              var prevLineSplit_1 = prevLine.trim().split('. ');\n\n              if (/^\\d+$/.test(prevLineSplit_1[0])) {\n                prevTabSpace = this.getTabSpace(prevLine);\n\n                if (prevTabSpace.length <= curTabSpace.length) {\n                  this.changeTextAreaValue(splitText, this.nextOrderedListValue(prevLineSplit_1[0]), event, textArea, parents, i, end);\n                  break;\n                }\n              }\n            }\n          }\n        } else if (this.currentAction === 'UL' && regex.test(prevLine.trim()) || !listFormat) {\n          event.event.preventDefault();\n          parents[i].text = event.event.shiftKey ? splitTab.splice(1, splitTab.length).join('\\t') : tabSpace + parents[i].text;\n          textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end, textArea.value.length);\n        }\n\n        start = i === 0 ? start + tabSpaceLength : start;\n        addedLength += tabSpaceLength;\n\n        if (parents.length !== 1) {\n          for (var j = i; j < parents.length; j++) {\n            parents[j].start = j !== 0 ? parents[j].start + tabSpaceLength : parents[j].start;\n            parents[j].end = parents[j].end + tabSpaceLength;\n          }\n        }\n      }\n    }\n\n    this.restore(textArea, start, end + addedLength, event);\n  };\n\n  MDLists.prototype.changeTextAreaValue = function (splitText, prefixValue, event, // eslint-disable-next-line\n  textArea, parents, k, end) {\n    var prefix = prefixValue;\n    splitText.splice(0, 1);\n    var textAreaLength = this.selection.getAllParents(textArea.value).length;\n    var changedList = '';\n    var curTabSpace = this.getTabSpace(parents[k].text); // eslint-disable-next-line\n\n    var prefixNumber = parseInt(prefix.split('.')[0], null);\n    var nestedTabSpace = this.getTabSpace(parents[k].text);\n    var nestedlistorder = true;\n    var nestedListStart = true;\n    var curTabSpaceLength;\n    var nextPrefixValue = -1;\n    var traversIncreased = true;\n    var nextLineLength = 0;\n    var lineBreak = '';\n    changedList = this.selection.getLine(textArea, parents[0].line + 1) !== '' ? '' : changedList + textArea.value.substr(parents[0].end, textArea.value.length);\n\n    for (var i = 1; i < textAreaLength && !isNullOrUndefined(this.selection.getLine(textArea, parents[0].line + i)) && this.selection.getLine(textArea, parents[0].line + i) !== ''; i++) {\n      var nextLine = this.selection.getLine(textArea, parents[0].line + i);\n      var nextTabSpace = this.getTabSpace(nextLine);\n      var nextLineSplit = nextLine.split('. ');\n\n      if (nextLineSplit.length === 1) {\n        changedList += textArea.value.substr(parents[0].end + nextLineLength, textArea.value.length);\n        break;\n      } else {\n        nextLineLength += nextLine.length;\n        var shiftTabTargetList = false;\n        curTabSpaceLength = event.event.shiftKey ? curTabSpace.length + 1 : curTabSpace.length - 1;\n\n        if (nextTabSpace.length > nestedTabSpace.length) {\n          traversIncreased = false;\n        }\n\n        if (curTabSpace.length !== nextTabSpace.length && nextTabSpace.length < nestedTabSpace.length) {\n          nestedListStart = true;\n          nestedlistorder = false;\n          shiftTabTargetList = event.event.shiftKey && curTabSpace.length === nextTabSpace.length ? (nestedListStart = false, true) : false;\n        } else if (traversIncreased && event.event.shiftKey && curTabSpace.length === nextTabSpace.length && nextTabSpace.length === nestedTabSpace.length) {\n          nestedListStart = false;\n          shiftTabTargetList = true;\n        }\n\n        lineBreak = changedList === '' ? '' : '\\n';\n\n        if (curTabSpaceLength === nextTabSpace.length && nestedListStart) {\n          var nextPrefix = event.event.shiftKey ? (nextPrefixValue++, this.nextOrderedListValue(nextPrefixValue.toString())) : this.previousOrderedListValue(nextLineSplit[0]);\n          nextLineSplit.splice(0, 1);\n          changedList = changedList + lineBreak + nextTabSpace + nextPrefix + nextLineSplit.join('. ');\n        } else if (curTabSpace.length === nextTabSpace.length && nestedlistorder || shiftTabTargetList) {\n          var nextPrefix = this.nextOrderedListValue(prefixNumber.toString());\n          prefixNumber++;\n          nextLineSplit.splice(0, 1);\n          changedList = changedList + lineBreak + nextTabSpace + nextPrefix + nextLineSplit.join('. ');\n        } else {\n          changedList = changedList + lineBreak + nextLine;\n          nestedListStart = false;\n        }\n\n        nestedTabSpace = this.getTabSpace(nextLine);\n      }\n    }\n\n    parents[k].text = this.getTabSpace(parents[k].text) + prefix + splitText.join('. ') + '\\n';\n    textArea.value = textArea.value.substr(0, parents[k].start) + parents[k].text + changedList;\n  };\n\n  MDLists.prototype.getTabSpace = function (line) {\n    var split = line.split('\\t');\n    var tabs = '';\n\n    for (var i = 0; i < split.length; i++) {\n      if (split[i] === '') {\n        tabs += '\\t';\n      } else {\n        break;\n      }\n    }\n\n    return tabs;\n  };\n\n  MDLists.prototype.isNotFirstLine = function (textArea, points) {\n    var currentLine = points.text;\n    var prevIndex = points.line - 1;\n    var prevLine = this.selection.getLine(textArea, prevIndex);\n    var regex = this.getListRegex();\n    var isNotFirst = false;\n    var regexFirstCondition;\n\n    if (prevLine) {\n      this.currentAction = this.getAction(prevLine);\n      var prevLineSplit = prevLine.split('. ');\n      regexFirstCondition = this.currentAction === 'OL' ? /^\\d+$/.test(prevLineSplit[0].trim()) : regex.test(prevLine.trim());\n    }\n\n    if (prevLine && regexFirstCondition) {\n      var curTabSpace = this.getTabSpace(currentLine);\n      var prevTabSpace = this.getTabSpace(prevLine);\n      isNotFirst = curTabSpace === prevTabSpace ? true : isNotFirst;\n\n      for (; prevTabSpace.length > curTabSpace.length; null) {\n        prevIndex = prevIndex - 1;\n        prevLine = this.selection.getLine(textArea, prevIndex);\n        var prevLineSplit = prevLine.trim().split('. ');\n        var regexSecondCondition = this.currentAction === 'OL' ? /^\\d+$/.test(prevLineSplit[0]) : regex.test(prevLine.trim());\n\n        if (regexSecondCondition) {\n          prevTabSpace = this.getTabSpace(prevLine);\n\n          if (prevTabSpace.length <= curTabSpace.length) {\n            isNotFirst = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return isNotFirst;\n  };\n\n  MDLists.prototype.getAction = function (line) {\n    var ol = line.split('. ')[0]; // eslint-disable-next-line\n\n    var currentState = /^\\d+$/.test(ol.trim());\n    var ul = line.trim().split(new RegExp('^(' + this.selection.replaceSpecialChar(this.syntax.UL).trim() + ')'))[1];\n    return currentState ? 'OL' : ul ? 'UL' : 'NOTLIST';\n  };\n\n  MDLists.prototype.nextOrderedListValue = function (previousLine) {\n    // eslint-disable-next-line\n    var currentValue = parseInt(previousLine, null);\n    var nextValue = currentValue + 1;\n    return nextValue.toString() + '. ';\n  };\n\n  MDLists.prototype.previousOrderedListValue = function (previousLine) {\n    // eslint-disable-next-line\n    var currentValue = parseInt(previousLine, null);\n    var nextValue = currentValue - 1;\n    return nextValue.toString() + '. ';\n  };\n\n  MDLists.prototype.enterKey = function (event) {\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    var prevLine = this.selection.getLine(textArea, parents[0].line - 1);\n    var listFormat = this.olListType();\n    var regex = this.getListRegex();\n    var prevLineSplit = [];\n\n    if (!isNullOrUndefined(prevLine)) {\n      prevLineSplit = prevLine.split('. ');\n      this.currentAction = this.getAction(prevLine);\n    }\n\n    var addedLength = 0;\n\n    if (this.currentAction === 'OL' && prevLineSplit.length > 1 && /^\\d+$/.test(prevLineSplit[0].trim()) && listFormat && prevLineSplit[1] !== '') {\n      var tabSpace = this.getTabSpace(prevLine);\n      this.currentAction = this.getAction(prevLine);\n      var prefix = this.nextOrderedListValue(prevLineSplit[0]);\n      parents[0].text = tabSpace + prefix + parents[0].text;\n      var textAreaLength = this.selection.getAllParents(textArea.value).length;\n      var changedList = '\\n';\n      var curTabSpace = this.getTabSpace(prevLine);\n      var nestedTabSpace = this.getTabSpace(parents[0].text);\n      var nestedListOrder = true;\n\n      for (var i = 1; i < textAreaLength && textArea.value.substr(parents[0].end, textArea.value.length) !== ''; i++) {\n        var nextLine = this.selection.getLine(textArea, parents[0].line + i);\n\n        if (isNullOrUndefined(nextLine)) {\n          changedList = changedList + '';\n        } else {\n          var nextLineSplit = nextLine.split('. ');\n          var nextTabSpace = this.getTabSpace(nextLine);\n\n          if (nextTabSpace.length < nestedTabSpace.length) {\n            nestedListOrder = false;\n          }\n\n          if (nextLineSplit.length > 1 && /^\\d+$/.test(nextLineSplit[0].trim()) && curTabSpace.length === nextTabSpace.length && nestedListOrder) {\n            var nextPrefix = this.nextOrderedListValue(nextLineSplit[0]);\n            nextLineSplit.splice(0, 1);\n            changedList = changedList + nextTabSpace + nextPrefix + nextLineSplit.join('. ') + '\\n';\n          } else {\n            changedList = changedList + nextLine + '\\n';\n            nestedTabSpace = this.getTabSpace(nextLine);\n          }\n        }\n      }\n\n      textArea.value = textArea.value.substr(0, parents[0].start) + curTabSpace + prefix + this.selection.getLine(textArea, parents[0].line) + changedList;\n      start = start + prefix.length + tabSpace.length;\n      addedLength += prefix.length + tabSpace.length;\n    } else if (this.currentAction === 'UL' && prevLine && regex.test(prevLine.trim()) && prevLine.trim().replace(regex, '') !== '' || this.currentAction === 'OL' && !listFormat) {\n      var tabSpace = this.getTabSpace(prevLine);\n      var prefix = this.syntax[this.currentAction];\n      parents[0].text = tabSpace + prefix + parents[0].text + (parents[0].text.trim().length > 0 ? '\\n' : '');\n      textArea.value = textArea.value.substr(0, parents[0].start) + parents[0].text + textArea.value.substr(parents[0].end, textArea.value.length);\n      start = start + prefix.length + tabSpace.length;\n      addedLength += prefix.length + tabSpace.length;\n    }\n\n    this.restore(textArea, start, end + addedLength, event);\n  };\n\n  MDLists.prototype.olListType = function () {\n    var olSyntaxList = this.syntax.OL.split('.,');\n    var listType = olSyntaxList.length === 1 ? null : // eslint-disable-next-line\n    parseInt(olSyntaxList[2].trim(), null) - parseInt(olSyntaxList[0].trim(), null);\n\n    if (listType) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n\n  MDLists.prototype.applyListsHandler = function (e) {\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    this.currentAction = e.subCommand;\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var addedLength = 0;\n    var startLength = 0;\n    var endLength = 0;\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    var prefix = '';\n    var listFormat = this.olListType();\n    var regex;\n    var perfixObj = {};\n\n    for (var i = 0; i < parents.length; i++) {\n      if (listFormat) {\n        regex = this.currentAction === 'OL' ? i + listFormat + '. ' : this.syntax[this.currentAction];\n      } else {\n        regex = this.currentAction === 'OL' ? this.syntax.OL : this.syntax[this.currentAction];\n      }\n\n      if (!this.selection.isStartWith(parents[i].text, regex)) {\n        if (parents[i].text === '' && i === 0) {\n          this.selection.save(start, end);\n\n          if (parents.length !== 1) {\n            for (var j = i; j < parents.length; j++) {\n              parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n              parents[j].end = 1 + parents[j].end;\n            }\n          }\n        }\n\n        var preLineTabSpaceLength = !isNullOrUndefined(parents[i - 1]) ? this.getTabSpace(parents[i - 1].text).length : 0;\n        var replace = this.appliedLine(parents[i].text, regex, perfixObj, preLineTabSpaceLength);\n        prefix = replace.line ? prefix : regex;\n        parents[i].text = replace.line ? replace.line : prefix + parents[i].text;\n        replace.space = replace.space ? replace.space : 0;\n        textArea.value = textArea.value.substr(0, parents[i].start + endLength) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end, textArea.value.length);\n        start = i === 0 ? start + prefix.length + replace.space > 0 ? start + prefix.length + replace.space : 0 : start;\n        addedLength += prefix.length + replace.space;\n\n        if (parents.length !== 1) {\n          for (var j = i; j < parents.length; j++) {\n            parents[j].start = j !== 0 ? prefix.length + parents[j].start + replace.space : parents[j].start;\n            parents[j].end = prefix.length + parents[j].end + replace.space;\n          }\n        }\n\n        this.restore(textArea, start, end + addedLength, null);\n      } else {\n        parents[i].text = parents[i].text.replace(regex, '');\n        textArea.value = textArea.value.substr(0, parents[i].start + endLength) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end + endLength, textArea.value.length);\n        endLength -= regex.length;\n        startLength = regex.length;\n        this.restore(textArea, start - startLength, end + endLength, null);\n      }\n    }\n\n    this.restore(textArea, null, null, e);\n  };\n\n  MDLists.prototype.appliedLine = function (line, prefixPattern, perfixObj, preTabSpaceLength) {\n    var points = {};\n    var regex = new RegExp('^[' + this.syntax.UL.trim() + ']');\n    var lineSplit = line.split('. ');\n    var currentPrefix = lineSplit[0] + '. ';\n    var isExist = regex.test(line.trim()) || line.trim() === this.syntax.OL.trim() || line.trim() === this.syntax.UL.trim() || /^\\d+$/.test(lineSplit[0].trim());\n    var listFormat = this.olListType();\n    var curTabSpaceLength = this.getTabSpace(line).length;\n\n    if (this.currentAction === 'OL' && listFormat) {\n      perfixObj[curTabSpaceLength.toString()] = !isNullOrUndefined(perfixObj[curTabSpaceLength.toString()]) ? perfixObj[curTabSpaceLength.toString()].valueOf() + 1 : 1;\n      prefixPattern = perfixObj[curTabSpaceLength.toString()].valueOf().toString() + '. ';\n\n      if (!isNullOrUndefined(preTabSpaceLength) && preTabSpaceLength > curTabSpaceLength) {\n        perfixObj[preTabSpaceLength.toString()] = 0;\n      }\n    }\n\n    if (isExist) {\n      var replace = void 0;\n      var pattern = void 0; // eslint-disable-next-line\n\n      var space = 0;\n\n      if (regex.test(line.trim())) {\n        pattern = this.syntax.UL;\n        replace = prefixPattern;\n        points.space = prefixPattern.trim().length - this.syntax.UL.trim().length;\n      } else if (/^\\d+$/.test(lineSplit[0].trim()) && listFormat) {\n        pattern = lineSplit[0].trim() + '. ';\n        replace = prefixPattern;\n        points.space = this.syntax.UL.trim().length - currentPrefix.trim().length;\n      } else if (/^\\d+$/.test(lineSplit[0].trim())) {\n        pattern = lineSplit[0].trim() + '. ';\n        replace = this.syntax.UL;\n        points.space = this.syntax.UL.trim().length - currentPrefix.trim().length;\n      }\n\n      points.line = line.replace(pattern, replace);\n    }\n\n    return points;\n  };\n\n  MDLists.prototype.restore = function (textArea, start, end, event) {\n    if (!isNullOrUndefined(start) && !isNullOrUndefined(start)) {\n      this.selection.save(start, end);\n    }\n\n    if (!isNullOrUndefined(event)) {\n      this.selection.restore(textArea);\n    }\n\n    if (event && event.callBack) {\n      event.callBack({\n        requestType: this.currentAction,\n        selectedText: this.selection.getSelectedText(textArea),\n        editorMode: 'Markdown',\n        event: event.event\n      });\n    }\n  };\n\n  MDLists.prototype.getListRegex = function () {\n    var regex = '';\n    var configKey = Object.keys(this.syntax);\n\n    for (var j = 0; j < configKey.length; j++) {\n      var syntax = this.selection.replaceSpecialChar(this.syntax[configKey[j]]);\n      regex += regex === '' ? '^(' + syntax + ')|^(' + syntax.trim() + ')' : '|^(' + syntax + ')|^(' + syntax.trim() + ')';\n    }\n\n    return new RegExp(regex);\n  };\n\n  return MDLists;\n}();\n\nexport { MDLists };","map":{"version":3,"names":["CONSTANT","extend","EVENTS","isNullOrUndefined","MDLists","options","selection","parent","markdownSelection","addEventListener","prototype","observer","on","LISTS_COMMAND","applyListsHandler","KEY_DOWN_HANDLER","keyDownHandler","KEY_UP_HANDLER","keyUpHandler","event","which","tabKey","action","subCommand","callBack","preventDefault","enterKey","textArea","element","save","selectionStart","selectionEnd","start","end","parents","getSelectedParentPoints","addedLength","isNotFirst","isNotFirstLine","shiftKey","restore","listFormat","olListType","regex","getListRegex","currentAction","getAction","text","i","length","prevIndex","line","prevLine","getLine","prevLineSplit","split","tabSpace","tabSpaceLength","splitTab","test","trim","splice","join","curTabSpace","getTabSpace","prevTabSpace","splitText","changeTextAreaValue","nextOrderedListValue","prevLineSplit_1","value","substr","j","prefixValue","k","prefix","textAreaLength","getAllParents","changedList","prefixNumber","parseInt","nestedTabSpace","nestedlistorder","nestedListStart","curTabSpaceLength","nextPrefixValue","traversIncreased","nextLineLength","lineBreak","nextLine","nextTabSpace","nextLineSplit","shiftTabTargetList","nextPrefix","toString","previousOrderedListValue","tabs","points","currentLine","regexFirstCondition","regexSecondCondition","ol","currentState","ul","RegExp","replaceSpecialChar","syntax","UL","previousLine","currentValue","nextValue","nestedListOrder","replace","olSyntaxList","OL","listType","e","startLength","endLength","perfixObj","isStartWith","preLineTabSpaceLength","appliedLine","space","prefixPattern","preTabSpaceLength","lineSplit","currentPrefix","isExist","valueOf","pattern","requestType","selectedText","getSelectedText","editorMode","configKey","Object","keys"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-richtexteditor/src/markdown-parser/plugin/lists.js"],"sourcesContent":["import * as CONSTANT from './../base/constant';\nimport { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Lists internal component\n *\n * @hidden\n */\nvar MDLists = /** @class */ (function () {\n    /**\n     * Constructor for creating the Lists plugin\n     *\n     * @param {IMDFormats} options - specifies the options\n     * @hidden\n     */\n    function MDLists(options) {\n        extend(this, this, options, true);\n        this.selection = this.parent.markdownSelection;\n        this.addEventListener();\n    }\n    MDLists.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.LISTS_COMMAND, this.applyListsHandler, this);\n        this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler, this);\n        this.parent.observer.on(EVENTS.KEY_UP_HANDLER, this.keyUpHandler, this);\n    };\n    MDLists.prototype.keyDownHandler = function (event) {\n        switch (event.event.which) {\n            case 9:\n                this.tabKey(event);\n                break;\n        }\n        switch (event.event.action) {\n            case 'ordered-list':\n                this.applyListsHandler({ subCommand: 'OL', callBack: event.callBack });\n                event.event.preventDefault();\n                break;\n            case 'unordered-list':\n                this.applyListsHandler({ subCommand: 'UL', callBack: event.callBack });\n                event.event.preventDefault();\n                break;\n        }\n    };\n    MDLists.prototype.keyUpHandler = function (event) {\n        switch (event.event.which) {\n            case 13:\n                this.enterKey(event);\n                break;\n        }\n    };\n    MDLists.prototype.tabKey = function (event) {\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        var addedLength = 0;\n        var isNotFirst = this.isNotFirstLine(textArea, parents[0]);\n        if (!isNotFirst && !event.event.shiftKey) {\n            this.restore(textArea, start, end + addedLength, event);\n            return;\n        }\n        var listFormat = this.olListType();\n        var regex = this.getListRegex();\n        this.currentAction = this.getAction(parents[0].text);\n        for (var i = 0; i < parents.length; i++) {\n            var prevIndex = event.event.shiftKey ? parents[i].line - 1 : parents[i].line - 1;\n            var prevLine = this.selection.getLine(textArea, prevIndex);\n            if (prevLine && (!event.event.shiftKey && isNotFirst || (event.event.shiftKey))) {\n                var prevLineSplit = prevLine.split('. ');\n                var tabSpace = '\\t';\n                var tabSpaceLength = event.event.shiftKey ? -tabSpace.length : tabSpace.length;\n                var splitTab = parents[i].text.split('\\t');\n                if (event.event.shiftKey && splitTab.length === 1) {\n                    break;\n                }\n                if (this.currentAction === 'OL' && /^\\d+$/.test(prevLineSplit[0].trim()) && listFormat) {\n                    event.event.preventDefault();\n                    parents[i].text = event.event.shiftKey ? splitTab.splice(1, splitTab.length).join('\\t') : tabSpace + parents[i].text;\n                    var curTabSpace = this.getTabSpace(parents[i].text);\n                    var prevTabSpace = this.getTabSpace(prevLine);\n                    var splitText = parents[i].text.split('. ');\n                    if (curTabSpace === prevTabSpace) {\n                        this.changeTextAreaValue(splitText, this.nextOrderedListValue(prevLineSplit[0].trim()), event, textArea, parents, i, end);\n                    }\n                    else if (prevTabSpace < curTabSpace) {\n                        this.changeTextAreaValue(splitText, '1. ', event, textArea, parents, i, end);\n                    }\n                    else {\n                        for (; prevTabSpace.length > curTabSpace.length; null) {\n                            prevIndex = prevIndex - 1;\n                            prevLine = this.selection.getLine(textArea, prevIndex);\n                            var prevLineSplit_1 = prevLine.trim().split('. ');\n                            if (/^\\d+$/.test(prevLineSplit_1[0])) {\n                                prevTabSpace = this.getTabSpace(prevLine);\n                                if (prevTabSpace.length <= curTabSpace.length) {\n                                    this.changeTextAreaValue(splitText, this.nextOrderedListValue(prevLineSplit_1[0]), event, textArea, parents, i, end);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (this.currentAction === 'UL' && regex.test(prevLine.trim()) || !listFormat) {\n                    event.event.preventDefault();\n                    parents[i].text = event.event.shiftKey ? splitTab.splice(1, splitTab.length).join('\\t') : tabSpace + parents[i].text;\n                    textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' +\n                        textArea.value.substr(parents[i].end, textArea.value.length);\n                }\n                start = i === 0 ? start + tabSpaceLength : start;\n                addedLength += tabSpaceLength;\n                if (parents.length !== 1) {\n                    for (var j = i; j < parents.length; j++) {\n                        parents[j].start = j !== 0 ? parents[j].start + tabSpaceLength : parents[j].start;\n                        parents[j].end = parents[j].end + tabSpaceLength;\n                    }\n                }\n            }\n        }\n        this.restore(textArea, start, end + addedLength, event);\n    };\n    MDLists.prototype.changeTextAreaValue = function (splitText, prefixValue, event, \n    // eslint-disable-next-line\n    textArea, parents, k, end) {\n        var prefix = prefixValue;\n        splitText.splice(0, 1);\n        var textAreaLength = this.selection.getAllParents(textArea.value).length;\n        var changedList = '';\n        var curTabSpace = this.getTabSpace(parents[k].text);\n        // eslint-disable-next-line\n        var prefixNumber = parseInt(prefix.split('.')[0], null);\n        var nestedTabSpace = this.getTabSpace(parents[k].text);\n        var nestedlistorder = true;\n        var nestedListStart = true;\n        var curTabSpaceLength;\n        var nextPrefixValue = -1;\n        var traversIncreased = true;\n        var nextLineLength = 0;\n        var lineBreak = '';\n        changedList = (this.selection.getLine(textArea, parents[0].line + 1) !== '') ?\n            '' : changedList + textArea.value.substr(parents[0].end, textArea.value.length);\n        for (var i = 1; i < textAreaLength &&\n            !isNullOrUndefined(this.selection.getLine(textArea, parents[0].line + i))\n            && this.selection.getLine(textArea, parents[0].line + i) !== ''; i++) {\n            var nextLine = this.selection.getLine(textArea, parents[0].line + i);\n            var nextTabSpace = this.getTabSpace(nextLine);\n            var nextLineSplit = nextLine.split('. ');\n            if (nextLineSplit.length === 1) {\n                changedList += textArea.value.substr(parents[0].end + nextLineLength, textArea.value.length);\n                break;\n            }\n            else {\n                nextLineLength += nextLine.length;\n                var shiftTabTargetList = false;\n                curTabSpaceLength = event.event.shiftKey ? curTabSpace.length + 1 : curTabSpace.length - 1;\n                if (nextTabSpace.length > nestedTabSpace.length) {\n                    traversIncreased = false;\n                }\n                if (curTabSpace.length !== nextTabSpace.length && nextTabSpace.length < nestedTabSpace.length) {\n                    nestedListStart = true;\n                    nestedlistorder = false;\n                    shiftTabTargetList = event.event.shiftKey &&\n                        curTabSpace.length === nextTabSpace.length ? (nestedListStart = false, true) : false;\n                }\n                else if (traversIncreased && event.event.shiftKey &&\n                    curTabSpace.length === nextTabSpace.length && nextTabSpace.length === nestedTabSpace.length) {\n                    nestedListStart = false;\n                    shiftTabTargetList = true;\n                }\n                lineBreak = changedList === '' ? '' : '\\n';\n                if (curTabSpaceLength === nextTabSpace.length && nestedListStart) {\n                    var nextPrefix = event.event.shiftKey ?\n                        (nextPrefixValue++, this.nextOrderedListValue(nextPrefixValue.toString()))\n                        : this.previousOrderedListValue(nextLineSplit[0]);\n                    nextLineSplit.splice(0, 1);\n                    changedList = changedList + lineBreak + nextTabSpace + nextPrefix + nextLineSplit.join('. ');\n                }\n                else if (curTabSpace.length === nextTabSpace.length && nestedlistorder || shiftTabTargetList) {\n                    var nextPrefix = this.nextOrderedListValue(prefixNumber.toString());\n                    prefixNumber++;\n                    nextLineSplit.splice(0, 1);\n                    changedList = changedList + lineBreak + nextTabSpace + nextPrefix + nextLineSplit.join('. ');\n                }\n                else {\n                    changedList = changedList + lineBreak + nextLine;\n                    nestedListStart = false;\n                }\n                nestedTabSpace = this.getTabSpace(nextLine);\n            }\n        }\n        parents[k].text = this.getTabSpace(parents[k].text) + prefix + splitText.join('. ') + '\\n';\n        textArea.value = textArea.value.substr(0, parents[k].start) + parents[k].text + changedList;\n    };\n    MDLists.prototype.getTabSpace = function (line) {\n        var split = line.split('\\t');\n        var tabs = '';\n        for (var i = 0; i < split.length; i++) {\n            if (split[i] === '') {\n                tabs += '\\t';\n            }\n            else {\n                break;\n            }\n        }\n        return tabs;\n    };\n    MDLists.prototype.isNotFirstLine = function (textArea, points) {\n        var currentLine = points.text;\n        var prevIndex = points.line - 1;\n        var prevLine = this.selection.getLine(textArea, prevIndex);\n        var regex = this.getListRegex();\n        var isNotFirst = false;\n        var regexFirstCondition;\n        if (prevLine) {\n            this.currentAction = this.getAction(prevLine);\n            var prevLineSplit = prevLine.split('. ');\n            regexFirstCondition = this.currentAction === 'OL' ? /^\\d+$/.test(prevLineSplit[0].trim()) : regex.test(prevLine.trim());\n        }\n        if (prevLine && regexFirstCondition) {\n            var curTabSpace = this.getTabSpace(currentLine);\n            var prevTabSpace = this.getTabSpace(prevLine);\n            isNotFirst = curTabSpace === prevTabSpace ? true : isNotFirst;\n            for (; prevTabSpace.length > curTabSpace.length; null) {\n                prevIndex = prevIndex - 1;\n                prevLine = this.selection.getLine(textArea, prevIndex);\n                var prevLineSplit = prevLine.trim().split('. ');\n                var regexSecondCondition = this.currentAction === 'OL' ?\n                    /^\\d+$/.test(prevLineSplit[0]) : regex.test(prevLine.trim());\n                if (regexSecondCondition) {\n                    prevTabSpace = this.getTabSpace(prevLine);\n                    if (prevTabSpace.length <= curTabSpace.length) {\n                        isNotFirst = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return isNotFirst;\n    };\n    MDLists.prototype.getAction = function (line) {\n        var ol = line.split('. ')[0];\n        // eslint-disable-next-line\n        var currentState = /^\\d+$/.test(ol.trim());\n        var ul = line.trim().split(new RegExp('^(' + this.selection.replaceSpecialChar(this.syntax.UL).trim() + ')'))[1];\n        return (currentState ? 'OL' : ul ? 'UL' : 'NOTLIST');\n    };\n    MDLists.prototype.nextOrderedListValue = function (previousLine) {\n        // eslint-disable-next-line\n        var currentValue = parseInt(previousLine, null);\n        var nextValue = currentValue + 1;\n        return nextValue.toString() + '. ';\n    };\n    MDLists.prototype.previousOrderedListValue = function (previousLine) {\n        // eslint-disable-next-line\n        var currentValue = parseInt(previousLine, null);\n        var nextValue = currentValue - 1;\n        return nextValue.toString() + '. ';\n    };\n    MDLists.prototype.enterKey = function (event) {\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        var prevLine = this.selection.getLine(textArea, parents[0].line - 1);\n        var listFormat = this.olListType();\n        var regex = this.getListRegex();\n        var prevLineSplit = [];\n        if (!isNullOrUndefined(prevLine)) {\n            prevLineSplit = prevLine.split('. ');\n            this.currentAction = this.getAction(prevLine);\n        }\n        var addedLength = 0;\n        if (this.currentAction === 'OL' && prevLineSplit.length > 1 && /^\\d+$/.test(prevLineSplit[0].trim()) && listFormat\n            && prevLineSplit[1] !== '') {\n            var tabSpace = this.getTabSpace(prevLine);\n            this.currentAction = this.getAction(prevLine);\n            var prefix = this.nextOrderedListValue(prevLineSplit[0]);\n            parents[0].text = tabSpace + prefix + parents[0].text;\n            var textAreaLength = this.selection.getAllParents(textArea.value).length;\n            var changedList = '\\n';\n            var curTabSpace = this.getTabSpace(prevLine);\n            var nestedTabSpace = this.getTabSpace(parents[0].text);\n            var nestedListOrder = true;\n            for (var i = 1; i < textAreaLength &&\n                textArea.value.substr(parents[0].end, textArea.value.length) !== ''; i++) {\n                var nextLine = this.selection.getLine(textArea, parents[0].line + i);\n                if (isNullOrUndefined(nextLine)) {\n                    changedList = changedList + '';\n                }\n                else {\n                    var nextLineSplit = nextLine.split('. ');\n                    var nextTabSpace = this.getTabSpace(nextLine);\n                    if (nextTabSpace.length < nestedTabSpace.length) {\n                        nestedListOrder = false;\n                    }\n                    if (nextLineSplit.length > 1 && /^\\d+$/.test(nextLineSplit[0].trim()) &&\n                        curTabSpace.length === nextTabSpace.length && nestedListOrder) {\n                        var nextPrefix = this.nextOrderedListValue(nextLineSplit[0]);\n                        nextLineSplit.splice(0, 1);\n                        changedList = changedList + nextTabSpace + nextPrefix + nextLineSplit.join('. ') + '\\n';\n                    }\n                    else {\n                        changedList = changedList + nextLine + '\\n';\n                        nestedTabSpace = this.getTabSpace(nextLine);\n                    }\n                }\n            }\n            textArea.value = textArea.value.substr(0, parents[0].start) + curTabSpace +\n                prefix + this.selection.getLine(textArea, parents[0].line) + changedList;\n            start = start + prefix.length + tabSpace.length;\n            addedLength += prefix.length + tabSpace.length;\n        }\n        else if (this.currentAction === 'UL' && (prevLine && regex.test(prevLine.trim())) &&\n            prevLine.trim().replace(regex, '') !== '' || this.currentAction === 'OL' && !listFormat) {\n            var tabSpace = this.getTabSpace(prevLine);\n            var prefix = this.syntax[this.currentAction];\n            parents[0].text = tabSpace + prefix + parents[0].text +\n                (parents[0].text.trim().length > 0 ? '\\n' : '');\n            textArea.value = textArea.value.substr(0, parents[0].start) + parents[0].text +\n                textArea.value.substr(parents[0].end, textArea.value.length);\n            start = start + prefix.length + tabSpace.length;\n            addedLength += prefix.length + tabSpace.length;\n        }\n        this.restore(textArea, start, end + addedLength, event);\n    };\n    MDLists.prototype.olListType = function () {\n        var olSyntaxList = this.syntax.OL.split('.,');\n        var listType = olSyntaxList.length === 1 ? null :\n            // eslint-disable-next-line\n            parseInt(olSyntaxList[2].trim(), null) - parseInt(olSyntaxList[0].trim(), null);\n        if (listType) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    };\n    MDLists.prototype.applyListsHandler = function (e) {\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        this.currentAction = e.subCommand;\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var addedLength = 0;\n        var startLength = 0;\n        var endLength = 0;\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        var prefix = '';\n        var listFormat = this.olListType();\n        var regex;\n        var perfixObj = {};\n        for (var i = 0; i < parents.length; i++) {\n            if (listFormat) {\n                regex = this.currentAction === 'OL' ? i + listFormat + '. ' : this.syntax[this.currentAction];\n            }\n            else {\n                regex = this.currentAction === 'OL' ? this.syntax.OL : this.syntax[this.currentAction];\n            }\n            if (!this.selection.isStartWith(parents[i].text, regex)) {\n                if (parents[i].text === '' && i === 0) {\n                    this.selection.save(start, end);\n                    if (parents.length !== 1) {\n                        for (var j = i; j < parents.length; j++) {\n                            parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n                            parents[j].end = 1 + parents[j].end;\n                        }\n                    }\n                }\n                var preLineTabSpaceLength = !isNullOrUndefined(parents[i - 1]) ?\n                    this.getTabSpace(parents[i - 1].text).length : 0;\n                var replace = this.appliedLine(parents[i].text, regex, perfixObj, preLineTabSpaceLength);\n                prefix = replace.line ? prefix : regex;\n                parents[i].text = replace.line ? replace.line : prefix + parents[i].text;\n                replace.space = replace.space ? replace.space : 0;\n                textArea.value = textArea.value.substr(0, parents[i].start + endLength) + parents[i].text + '\\n' +\n                    textArea.value.substr(parents[i].end, textArea.value.length);\n                start = i === 0 ? (start + prefix.length + replace.space) > 0 ?\n                    start + prefix.length + replace.space : 0 : start;\n                addedLength += prefix.length + replace.space;\n                if (parents.length !== 1) {\n                    for (var j = i; j < parents.length; j++) {\n                        parents[j].start = j !== 0 ? prefix.length +\n                            parents[j].start + replace.space : parents[j].start;\n                        parents[j].end = prefix.length + parents[j].end + replace.space;\n                    }\n                }\n                this.restore(textArea, start, end + addedLength, null);\n            }\n            else {\n                parents[i].text = parents[i].text.replace(regex, '');\n                textArea.value = textArea.value.substr(0, parents[i].start + endLength) + parents[i].text + '\\n' +\n                    textArea.value.substr(parents[i].end + endLength, textArea.value.length);\n                endLength -= regex.length;\n                startLength = regex.length;\n                this.restore(textArea, start - startLength, end + endLength, null);\n            }\n        }\n        this.restore(textArea, null, null, e);\n    };\n    MDLists.prototype.appliedLine = function (line, prefixPattern, perfixObj, preTabSpaceLength) {\n        var points = {};\n        var regex = new RegExp('^[' + this.syntax.UL.trim() + ']');\n        var lineSplit = line.split('. ');\n        var currentPrefix = lineSplit[0] + '. ';\n        var isExist = regex.test(line.trim()) || line.trim() === this.syntax.OL.trim()\n            || line.trim() === this.syntax.UL.trim() || /^\\d+$/.test(lineSplit[0].trim());\n        var listFormat = this.olListType();\n        var curTabSpaceLength = this.getTabSpace(line).length;\n        if (this.currentAction === 'OL' && listFormat) {\n            perfixObj[curTabSpaceLength.toString()] = !isNullOrUndefined(perfixObj[curTabSpaceLength.toString()]) ?\n                perfixObj[curTabSpaceLength.toString()].valueOf() + 1 : 1;\n            prefixPattern = perfixObj[curTabSpaceLength.toString()].valueOf().toString() + '. ';\n            if (!isNullOrUndefined(preTabSpaceLength) && preTabSpaceLength > curTabSpaceLength) {\n                perfixObj[preTabSpaceLength.toString()] = 0;\n            }\n        }\n        if (isExist) {\n            var replace = void 0;\n            var pattern = void 0;\n            // eslint-disable-next-line\n            var space = 0;\n            if (regex.test(line.trim())) {\n                pattern = this.syntax.UL;\n                replace = prefixPattern;\n                points.space = prefixPattern.trim().length - this.syntax.UL.trim().length;\n            }\n            else if (/^\\d+$/.test(lineSplit[0].trim()) && listFormat) {\n                pattern = lineSplit[0].trim() + '. ';\n                replace = prefixPattern;\n                points.space = this.syntax.UL.trim().length - currentPrefix.trim().length;\n            }\n            else if (/^\\d+$/.test(lineSplit[0].trim())) {\n                pattern = lineSplit[0].trim() + '. ';\n                replace = this.syntax.UL;\n                points.space = this.syntax.UL.trim().length - currentPrefix.trim().length;\n            }\n            points.line = line.replace(pattern, replace);\n        }\n        return points;\n    };\n    MDLists.prototype.restore = function (textArea, start, end, event) {\n        if (!isNullOrUndefined(start) && !isNullOrUndefined(start)) {\n            this.selection.save(start, end);\n        }\n        if (!isNullOrUndefined(event)) {\n            this.selection.restore(textArea);\n        }\n        if (event && event.callBack) {\n            event.callBack({\n                requestType: this.currentAction,\n                selectedText: this.selection.getSelectedText(textArea),\n                editorMode: 'Markdown',\n                event: event.event\n            });\n        }\n    };\n    MDLists.prototype.getListRegex = function () {\n        var regex = '';\n        var configKey = Object.keys(this.syntax);\n        for (var j = 0; j < configKey.length; j++) {\n            var syntax = this.selection.replaceSpecialChar(this.syntax[configKey[j]]);\n            regex += regex === '' ? '^(' + syntax + ')|^(' + syntax.trim() + ')' :\n                '|^(' + syntax + ')|^(' + syntax.trim() + ')';\n        }\n        return new RegExp(regex);\n    };\n    return MDLists;\n}());\nexport { MDLists };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}