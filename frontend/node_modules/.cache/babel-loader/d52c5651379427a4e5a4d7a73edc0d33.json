{"ast":null,"code":"import * as events from '../base/constant';\nimport { Workbook } from '@syncfusion/ej2-excel-export';\nimport { isNullOrUndefined, getEnumValue, compile, getValue, detach, extend } from '@syncfusion/ej2-base';\nimport { Data } from '../actions/data';\nimport { ExportHelper, ExportValueFormatter } from './export-helper';\nimport { SummaryModelGenerator, GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { CellType } from '../base/enum';\nimport { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getPrintGridModel, getUid, isExportColumns, updateColumnTypeForExportColumns, prepareColumns, measureColumnDepth } from '../base/util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\n\nvar ExcelExport =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid Excel Export module.\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} locator - specifies the ServiceLocator\n   * @hidden\n   */\n  function ExcelExport(parent, locator) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.book = {};\n    this.workSheet = [];\n    this.rows = [];\n    this.columns = [];\n    this.styles = [];\n    this.rowLength = 1;\n    this.expType = 'AppendToSheet';\n    this.includeHiddenColumn = false;\n    this.isCsvExport = false;\n    this.isElementIdChanged = false;\n    this.gridPool = {};\n    this.sheet = {};\n    this.parent = parent;\n    this.helper = new ExportHelper(parent);\n    this.locator = locator;\n    this.l10n = this.locator.getService('localization');\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   */\n\n\n  ExcelExport.prototype.getModuleName = function () {\n    return 'ExcelExport';\n  };\n\n  ExcelExport.prototype.init = function (gObj) {\n    if (gObj.element !== null && gObj.element.id === '') {\n      gObj.element.id = new Date().toISOString();\n      this.isElementIdChanged = true;\n    }\n\n    this.parent = gObj;\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.isExporting = undefined;\n    this.book = {};\n    this.workSheet = [];\n    this.rows = [];\n    this.columns = [];\n    this.styles = [];\n    this.rowLength = 1;\n    this.footer = undefined;\n    this.expType = 'AppendToSheet';\n    this.includeHiddenColumn = false;\n    this.exportValueFormatter = new ExportValueFormatter(gObj.locale);\n    gObj.id = getUid('main-grid');\n    this.gridPool[gObj.id] = false;\n  };\n  /**\n   * Export Grid to Excel file.\n   *\n   * @param {IGrid} grid - Defines the grid.\n   * @param  {exportProperties} exportProperties - Defines the export properties of the Grid.\n   * @param  {isMultipleExport} isMultipleExport - Defines is multiple Grid's are exported.\n   * @param  {Workbook} workbook - Defined the Workbook if multiple Grid is exported.\n   * @param  {boolean} isCsv - true if export to CSV.\n   * @param {boolean} isBlob - true if isBlob is enabled.\n   * @returns {Promise<any>} - Returns the map for export.\n   */\n  // eslint-disable-next-line\n\n\n  ExcelExport.prototype.Map = function (grid, exportProperties, isMultipleExport, workbook, isCsv, isBlob) {\n    var gObj = grid;\n    var cancel = 'cancel';\n    var isBlb = 'isBlob';\n    var csv = 'isCsv';\n    var workbk = 'workbook';\n    var isMultiEx = 'isMultipleExport';\n    this.gridPool = {};\n\n    if (grid.childGrid && !(!isNullOrUndefined(exportProperties) && exportProperties.hierarchyExportMode === 'None')) {\n      grid.expandedRows = getPrintGridModel(grid).expandedRows;\n    }\n\n    var args = {\n      requestType: 'beforeExcelExport',\n      gridObject: gObj,\n      cancel: false,\n      isMultipleExport: isMultipleExport,\n      workbook: workbook,\n      isCsv: isCsv,\n      isBlob: isBlob\n    };\n    gObj.trigger(events.beforeExcelExport, args);\n\n    if (args[cancel]) {\n      return new Promise(function (resolve) {\n        return resolve();\n      });\n    }\n\n    this.parent.log('exporting_begin', this.getModuleName());\n    this.data = new Data(gObj);\n    this.isExporting = true;\n    this.isBlob = args[isBlb];\n\n    if (args[csv]) {\n      this.isCsvExport = args[csv];\n    } else {\n      this.isCsvExport = false;\n    }\n\n    if (isExportColumns(exportProperties)) {\n      updateColumnTypeForExportColumns(exportProperties, gObj);\n    }\n\n    return this.processRecords(gObj, exportProperties, args[isMultiEx], args[workbk]);\n  };\n\n  ExcelExport.prototype.exportingSuccess = function (resolve) {\n    this.isExporting = false;\n    this.parent.trigger(events.excelExportComplete, this.isBlob ? {\n      promise: this.blobPromise\n    } : {});\n    this.parent.log('exporting_complete', this.getModuleName());\n    resolve(this.book);\n    this.sheet.images = [];\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  ExcelExport.prototype.processRecords = function (gObj, exportProperties, isMultipleExport, workbook) {\n    var _this = this;\n\n    if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.dataSource) && exportProperties.dataSource instanceof DataManager) {\n      var query_1 = exportProperties.query ? exportProperties.query : new Query();\n\n      if (isNullOrUndefined(query_1.isCountRequired) || gObj.aggregates) {\n        query_1.isCountRequired = true;\n      }\n\n      return new Promise(function (resolve) {\n        var dataManager = exportProperties.dataSource.executeQuery(query_1);\n        dataManager.then(function (r) {\n          _this.init(gObj);\n\n          _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, r).then(function () {\n            _this.exportingSuccess(resolve);\n          });\n        });\n      });\n    } else if (!isNullOrUndefined(exportProperties) && exportProperties.exportType === 'CurrentPage') {\n      return new Promise(function (resolve) {\n        _this.init(gObj);\n\n        _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, _this.parent.getCurrentViewRecords());\n\n        _this.exportingSuccess(resolve);\n      });\n    } else {\n      var allPromise_1 = [];\n      allPromise_1.push(this.data.getData({}, ExportHelper.getQuery(gObj, this.data)));\n      allPromise_1.push(this.helper.getColumnData(gObj));\n      return new Promise(function (resolve, reject) {\n        Promise.all(allPromise_1).then(function (e) {\n          _this.init(gObj);\n\n          _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, e[0]).then(function () {\n            _this.exportingSuccess(resolve);\n          });\n        }).catch(function (e) {\n          reject(_this.book);\n\n          _this.parent.trigger(events.actionFailure, e);\n        });\n      });\n    }\n  };\n\n  ExcelExport.prototype.processInnerRecords = function (gObj, exportProperties, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isMultipleExport, workbook, r) {\n    var _this = this;\n\n    this.groupedColLength = gObj.groupSettings.columns.length;\n    var blankRows = 5;\n    var separator;\n    var rows = [];\n    var colDepth = measureColumnDepth(gObj.columns);\n    var isExportPropertiesPresent = !isNullOrUndefined(exportProperties);\n\n    if (isExportPropertiesPresent && !isNullOrUndefined(exportProperties.multipleExport)) {\n      this.expType = !isNullOrUndefined(exportProperties.multipleExport.type) ? exportProperties.multipleExport.type : 'AppendToSheet';\n\n      if (!isNullOrUndefined(exportProperties.multipleExport.blankRows)) {\n        blankRows = exportProperties.multipleExport.blankRows;\n      }\n    }\n\n    if (isNullOrUndefined(workbook)) {\n      this.workSheet = [];\n      this.rows = [];\n      this.columns = [];\n      this.styles = [];\n    } else if (this.expType === 'NewSheet') {\n      this.workSheet = workbook.worksheets;\n      this.rows = [];\n      this.columns = [];\n      this.styles = workbook.styles;\n    } else {\n      this.workSheet = [];\n      this.rows = workbook.worksheets[0].rows;\n      this.columns = workbook.worksheets[0].columns;\n      this.styles = workbook.styles;\n      this.rowLength = this.rows[this.rows.length - 1].index + blankRows;\n      this.rowLength++;\n    }\n\n    if (isExportPropertiesPresent) {\n      if (!isNullOrUndefined(isMultipleExport)) {\n        if (!isNullOrUndefined(exportProperties.header) && (isMultipleExport || this.expType === 'NewSheet')) {\n          this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n        }\n\n        if (!isNullOrUndefined(exportProperties.footer)) {\n          if (this.expType === 'AppendToSheet') {\n            if (!isMultipleExport) {\n              this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n            }\n          } else {\n            this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n          }\n        }\n      } else {\n        if (!isNullOrUndefined(exportProperties.header)) {\n          this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n        }\n\n        if (!isNullOrUndefined(exportProperties.footer)) {\n          this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n        }\n      }\n    }\n\n    this.includeHiddenColumn = isExportPropertiesPresent ? exportProperties.includeHiddenColumn : false; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n    return new Promise(function (resolve, reject) {\n      gObj.childGridLevel = 0;\n      rows = _this.processGridExport(gObj, exportProperties, r);\n      _this.globalResolve = resolve;\n      _this.gridPool[gObj.id] = true;\n\n      _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n    }).then(function () {\n      var organisedRows = [];\n\n      _this.organiseRows(rows, rows[0].index, organisedRows);\n\n      _this.rows = _this.rows.concat(organisedRows); //footer template add\n\n      if (!isNullOrUndefined(_this.footer)) {\n        if (_this.expType === 'AppendToSheet' && !isMultipleExport || _this.expType === 'NewSheet') {\n          _this.processExcelFooter(_this.footer);\n        }\n      }\n\n      if (_this.columns.length > 0) {\n        _this.sheet.columns = _this.columns;\n      } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      _this.sheet.rows = _this.rows;\n      _this.sheet.enableRtl = _this.parent.enableRtl;\n\n      if (_this.parent.allowFiltering && gObj.getVisibleColumns().length && isExportPropertiesPresent && exportProperties.enableFilter) {\n        var headerRowLen = exportProperties.header ? exportProperties.header.headerRows || exportProperties.header.rows.length : 0;\n        var autoFilters = {\n          row: colDepth + headerRowLen,\n          column: _this.groupedColLength ? _this.groupedColLength + 1 : _this.sheet.columns[0].index,\n          lastRow: _this.sheet.rows.length,\n          lastColumn: _this.sheet.columns.length\n        };\n        _this.sheet.autoFilters = autoFilters;\n      }\n\n      _this.workSheet.push(_this.sheet);\n\n      _this.book.worksheets = _this.workSheet;\n      _this.book.styles = _this.styles;\n      gObj.notify('finalPageSetup', _this.book);\n\n      if (!isMultipleExport) {\n        if (_this.isCsvExport) {\n          if (isExportPropertiesPresent && !isNullOrUndefined(exportProperties.separator) && exportProperties.separator !== ',') {\n            separator = exportProperties.separator;\n          }\n\n          var book = new Workbook(_this.book, 'csv', gObj.locale, gObj.currencyCode, separator);\n\n          if (!_this.isBlob) {\n            if (isExportPropertiesPresent && exportProperties.fileName) {\n              book.save(exportProperties.fileName);\n            } else {\n              book.save('Export.csv');\n            }\n          } else {\n            _this.blobPromise = book.saveAsBlob('text/csv');\n          }\n        } else {\n          var book = new Workbook(_this.book, 'xlsx', gObj.locale, gObj.currencyCode);\n\n          if (!_this.isBlob) {\n            if (isExportPropertiesPresent && exportProperties.fileName) {\n              book.save(exportProperties.fileName);\n            } else {\n              book.save('Export.xlsx');\n            }\n          } else {\n            _this.blobPromise = book.saveAsBlob('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n          }\n        }\n\n        if (_this.isElementIdChanged) {\n          gObj.element.id = '';\n        }\n\n        delete gObj.expandedRows;\n      }\n\n      return workbook;\n    });\n  };\n\n  ExcelExport.prototype.organiseRows = function (rows, initialIndex, organisedRows) {\n    if (!rows.length) {\n      return initialIndex;\n    }\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      var childRows = row.childRows;\n\n      if (childRows) {\n        row.index = initialIndex++;\n        delete row.childRows;\n        organisedRows.push(row);\n        initialIndex = this.organiseRows(childRows, initialIndex, organisedRows);\n      } else {\n        row.index = initialIndex++;\n        organisedRows.push(row);\n      }\n    }\n\n    return initialIndex;\n  };\n\n  ExcelExport.prototype.processGridExport = function (gObj, exportProperties, r) {\n    var excelRows = [];\n    var isFrozen = this.parent.isFrozenGrid() && !this.parent.getFrozenColumns();\n\n    if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.theme)) {\n      this.theme = exportProperties.theme;\n    }\n\n    if (gObj.childGrid && !isNullOrUndefined(exportProperties)) {\n      gObj.hierarchyPrintMode = exportProperties.hierarchyExportMode || 'Expanded';\n    }\n\n    var helper = new ExportHelper(gObj, this.helper.getForeignKeyData());\n    var gColumns = isExportColumns(exportProperties) ? prepareColumns(exportProperties.columns, gObj.enableColumnVirtualization) : helper.getGridExportColumns(isFrozen ? gObj.getColumns() : gObj.columns);\n    var headerRow = helper.getHeaders(gColumns, this.includeHiddenColumn);\n    var groupIndent = gObj.groupSettings.columns.length ? gObj.groupSettings.columns.length - 1 : 0;\n    excelRows = this.processHeaderContent(gObj, headerRow, groupIndent, excelRows); // eslint-disable-next-line max-len\n\n    if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.dataSource) && !(exportProperties.dataSource instanceof DataManager)) {\n      // eslint-disable-next-line max-len\n      excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, exportProperties.dataSource, excelRows, helper);\n    } else if (!isNullOrUndefined(exportProperties) && exportProperties.exportType === 'CurrentPage') {\n      excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, gObj.currentViewData, excelRows, helper);\n    } else {\n      excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, undefined, excelRows, helper);\n    }\n\n    gObj.notify(events.exportDataBound, {\n      excelRows: excelRows,\n      type: 'excel'\n    });\n    return excelRows;\n  };\n\n  ExcelExport.prototype.processRecordContent = function (gObj, returnType, headerRow, exportProperties, currentViewRecords, excelRow, helper) {\n    var record;\n\n    if (!isNullOrUndefined(currentViewRecords) && currentViewRecords.length) {\n      record = currentViewRecords;\n    } else {\n      record = returnType.result;\n    }\n\n    if (!isNullOrUndefined(record.level)) {\n      this.processGroupedRows(gObj, record, headerRow, record.level, 0, exportProperties, excelRow, helper);\n    } else {\n      this.processRecordRows(gObj, record, headerRow, 0, 0, exportProperties, excelRow, helper);\n    }\n\n    if (!isNullOrUndefined(returnType.aggregates)) {\n      if (!isNullOrUndefined(currentViewRecords)) {\n        this.processAggregates(gObj, returnType.result, excelRow, currentViewRecords);\n      } else {\n        var result = returnType.result.GroupGuid ? returnType.result.records : returnType.result;\n        this.processAggregates(gObj, result, excelRow);\n      }\n    }\n\n    return excelRow;\n  };\n\n  ExcelExport.prototype.processGroupedRows = function ( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  gObj, dataSource, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n    for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n      var item = dataSource_1[_i];\n      var cells = [];\n      var index = 1; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      var cell = {};\n      cell.index = index + level - 1;\n      var col = gObj.getColumnByField(item.field); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      var args = {\n        value: item.key,\n        column: col,\n        style: undefined,\n        isForeignKey: col.isForeignColumn()\n      };\n      var value = gObj.getColumnByField(item.field).headerText + ': ' + (!col.enableGroupByFormat ? this.exportValueFormatter.formatCellValue(args) : item.key) + ' - ';\n\n      if (item.count > 1) {\n        value += item.count + ' items';\n      } else {\n        value += item.count + ' item';\n      }\n\n      var cArgs = {\n        captionText: value,\n        type: this.isCsvExport ? 'CSV' : 'Excel',\n        data: item\n      };\n      this.parent.trigger(events.exportGroupCaption, cArgs);\n      cell.value = cArgs.captionText;\n      cell.style = this.getCaptionThemeStyle(this.theme);\n      var captionModelGen = new CaptionSummaryModelGenerator(gObj);\n      var groupCaptionSummaryRows = captionModelGen.generateRows(item);\n      this.fillAggregates(gObj, groupCaptionSummaryRows, dataSource.level + dataSource.childLevels - 1, excelRows, this.rowLength);\n      cells.push(cell);\n\n      if (excelRows[excelRows.length - 1].cells.length > 0) {\n        var lIndex = dataSource.level + dataSource.childLevels + groupCaptionSummaryRows[0].cells.length;\n        var hIndex = 0;\n\n        for (var _a = 0, _b = excelRows[excelRows.length - 1].cells; _a < _b.length; _a++) {\n          var tCell = _b[_a];\n\n          if (tCell.index < lIndex) {\n            lIndex = tCell.index;\n          }\n\n          if (tCell.index > hIndex) {\n            hIndex = tCell.index;\n          }\n\n          if (cells[cells.length - 1].index !== tCell.index) {\n            cells.push(tCell);\n          }\n        }\n\n        if (lIndex - cell.index > 1) {\n          cell.colSpan = lIndex - cell.index;\n        }\n\n        while (hIndex < headerRow.columns.length + level + dataSource.childLevels) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var sCell = {};\n          sCell.index = hIndex + 1;\n          sCell.style = this.getCaptionThemeStyle(this.theme);\n          cells.push(sCell);\n          hIndex++;\n        }\n      } else {\n        var span = 0; //Calculation for column span when group caption dont have aggregates\n\n        for (var _c = 0, _d = headerRow.columns; _c < _d.length; _c++) {\n          var col_1 = _d[_c];\n\n          if (col_1.visible) {\n            span++;\n          }\n        }\n\n        cell.colSpan = dataSource.childLevels + span;\n      }\n\n      excelRows[excelRows.length - 1].cells = cells;\n      this.rowLength++;\n\n      if (this.groupedColLength < 8 && level > 1) {\n        var grouping = {\n          outlineLevel: level - 1,\n          isCollapsed: true\n        };\n        excelRows[excelRows.length - 1].grouping = grouping;\n      }\n\n      if (!isNullOrUndefined(dataSource.childLevels) && dataSource.childLevels > 0) {\n        this.processGroupedRows(gObj, item.items, headerRow, item.items.level, startIndex, excelExportProperties, excelRows, helper);\n        this.processAggregates(gObj, item, excelRows, undefined, level - 1 + dataSource.childLevels, true);\n      } else {\n        startIndex = this.processRecordRows(gObj, item.items, headerRow, level - 1, startIndex, excelExportProperties, excelRows, helper);\n        this.processAggregates(gObj, item, excelRows, undefined, level - 1, true);\n      }\n    }\n  };\n\n  ExcelExport.prototype.processRecordRows = function (gObj, record, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n    var index = 1;\n    var cells = [];\n    var columns = headerRow.columns;\n    var rows = helper.getGridRowModel(columns, record, gObj, startIndex);\n\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n      cells = [];\n      startIndex++;\n      index = 1;\n      var templateRowHeight = void 0;\n\n      for (var c = 0, len = row.cells.length; c < len; c++) {\n        var gCell = row.cells[c];\n\n        if (gCell.cellType !== CellType.Data) {\n          continue;\n        }\n\n        var column = gCell.column;\n        var field = column.field;\n        var cellValue = !isNullOrUndefined(field) ? column.valueAccessor(field, row.data, column) : '';\n        var value = !isNullOrUndefined(cellValue) ? cellValue : '';\n        var fkData = void 0;\n\n        if (column.isForeignColumn && column.isForeignColumn()) {\n          fkData = helper.getFData(value, column);\n          value = getValue(column.foreignKeyValue, fkData);\n        }\n\n        if (!isNullOrUndefined(value)) {\n          var cell = {};\n          var idx = index + level + gObj.childGridLevel; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          var excelCellArgs = {\n            data: row.data,\n            column: column,\n            foreignKeyData: fkData,\n            value: value,\n            style: undefined,\n            colSpan: 1,\n            cell: cell\n          };\n          gObj.trigger(events.excelQueryCellInfo, excelCellArgs);\n\n          if (!isNullOrUndefined(excelCellArgs.image) && !isNullOrUndefined(excelCellArgs.image.base64)) {\n            templateRowHeight = this.setImage(excelCellArgs, idx);\n          }\n\n          if (!isNullOrUndefined(excelCellArgs.hyperLink)) {\n            excelCellArgs.cell.hyperlink = {\n              target: excelCellArgs.hyperLink.target\n            };\n            excelCellArgs.value = excelCellArgs.hyperLink.displayText || excelCellArgs.value;\n          }\n\n          cell = excelCellArgs.cell;\n          cell.index = idx;\n          cell.value = excelCellArgs.value;\n\n          if (excelCellArgs.data === '' && gObj.childGridLevel && index === 1) {\n            var style = {};\n            style.hAlign = 'left';\n            excelCellArgs = {\n              style: style\n            };\n            cell.colSpan = gObj.getVisibleColumns().length;\n            cell.value = this.l10n.getConstant('EmptyRecord');\n          }\n\n          if (excelCellArgs.colSpan > 1) {\n            cell.colSpan = excelCellArgs.colSpan;\n          }\n\n          if (!isNullOrUndefined(excelCellArgs.style)) {\n            var styleIndex = this.getColumnStyle(gObj, index + level);\n            cell.style = this.mergeOptions(this.styles[styleIndex], excelCellArgs.style);\n          } else {\n            cell.style = {\n              name: gObj.element.id + 'column' + (index + level)\n            };\n          }\n\n          cells.push(cell);\n        }\n\n        index++;\n      }\n\n      var excelRow = {\n        index: this.rowLength++,\n        cells: cells\n      };\n\n      if (!isNullOrUndefined(templateRowHeight)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        excelRow.height = templateRowHeight;\n      }\n\n      if (this.groupedColLength && this.groupedColLength < 8 && level + 1 > 0) {\n        excelRow.grouping = {\n          outlineLevel: level + 1,\n          isCollapsed: true\n        };\n        excelRows.push(excelRow);\n      } else {\n        excelRows.push(excelRow);\n      }\n\n      if (row.isExpand && !isNullOrUndefined(gObj.childGrid)) {\n        gObj.isPrinting = true;\n        var exportType = !isNullOrUndefined(excelExportProperties) && excelExportProperties.exportType ? excelExportProperties.exportType : 'AllPages';\n        var returnVal = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n        var childGridObj = returnVal.childGrid;\n        var element = returnVal.element;\n        childGridObj.actionFailure = helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n        childGridObj.childGridLevel = gObj.childGridLevel + 1;\n        var args = {\n          childGrid: childGridObj,\n          row: row,\n          exportProperties: excelExportProperties\n        };\n        this.parent.trigger(events.exportDetailDataBound, args);\n        childGridObj.beforeDataBound = this.childGridCell(excelRow, childGridObj, excelExportProperties, row);\n        childGridObj.appendTo(element);\n      }\n\n      gObj.notify(events.exportRowDataBound, {\n        rowObj: row,\n        type: 'excel',\n        excelRows: excelRows\n      });\n    }\n\n    return startIndex;\n  };\n\n  ExcelExport.prototype.setImage = function (args, idx) {\n    if (isNullOrUndefined(this.sheet.images)) {\n      this.sheet.images = [];\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    var excelImage = {\n      image: args.image.base64,\n      row: this.rowLength,\n      column: idx,\n      lastRow: this.rowLength,\n      lastColumn: idx\n    };\n    this.sheet.images.push(excelImage);\n    this.columns[idx - 1].width = args.image.width || this.columns[idx - 1].width;\n    return args.image.height || 50;\n  };\n\n  ExcelExport.prototype.childGridCell = function (excelRow, childGridObj, excelExportProps, gRow) {\n    var _this = this;\n\n    return function (result) {\n      childGridObj.beforeDataBound = null;\n      result.cancel = true;\n\n      if (result.result.length === 0) {\n        result.result = [''];\n      }\n\n      excelRow.childRows = _this.processGridExport(childGridObj, excelExportProps, result);\n      var intent = _this.parent.groupSettings.columns.length;\n      var rows = excelRow.childRows;\n\n      for (var i = 0; i < rows.length; i++) {\n        rows[i].grouping = {\n          outlineLevel: intent + childGridObj.childGridLevel,\n          isCollapsed: !gRow.isExpand,\n          isHidden: !gRow.isExpand\n        };\n      }\n\n      childGridObj.destroy();\n      detach(childGridObj.element);\n      _this.gridPool[childGridObj.id] = true;\n\n      _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n\n      return excelRow;\n    };\n  };\n\n  ExcelExport.prototype.processAggregates = function (gObj, rec, excelRows, currentViewRecords, indent, byGroup) {\n    var summaryModel = new SummaryModelGenerator(gObj);\n    var columns = summaryModel.getColumns();\n    columns = columns.filter(function (col) {\n      return isNullOrUndefined(col.commands) && col.type !== 'checkbox';\n    });\n\n    if (gObj.aggregates.length && this.parent !== gObj) {\n      gObj.aggregateModule.prepareSummaryInfo();\n    }\n\n    var data = undefined;\n\n    if (!isNullOrUndefined(currentViewRecords)) {\n      data = currentViewRecords;\n    } else {\n      data = rec;\n    }\n\n    if (indent === undefined) {\n      indent = 0;\n    }\n\n    if (gObj.groupSettings.columns.length > 0 && byGroup) {\n      var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n      var groupSummaryRows = groupSummaryModel.generateRows(data, {\n        level: data.level\n      });\n\n      if (groupSummaryRows.length > 0) {\n        excelRows = this.fillAggregates(gObj, groupSummaryRows, indent, excelRows);\n      }\n    } else {\n      indent = gObj.groupSettings.columns.length > 0 && !byGroup ? gObj.groupSettings.columns.length : indent;\n      var sRows = summaryModel.generateRows(data, rec.aggregates, null, null, columns);\n\n      if (sRows.length > 0 && !byGroup) {\n        indent = gObj.groupSettings.columns.length ? indent - 1 : indent;\n        excelRows = this.fillAggregates(gObj, sRows, indent, excelRows);\n      }\n    }\n\n    return excelRows;\n  };\n\n  ExcelExport.prototype.fillAggregates = function (gObj, rows, indent, excelRows, customIndex) {\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n      var cells = [];\n      var isEmpty = true;\n      var index = 0;\n\n      for (var _a = 0, _b = row.cells; _a < _b.length; _a++) {\n        var cell = _b[_a]; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        var eCell = {};\n\n        if (cell.cellType === CellType.DetailFooterIntent) {\n          continue;\n        }\n\n        if (cell.visible || this.includeHiddenColumn) {\n          index++;\n\n          if (cell.isDataCell) {\n            isEmpty = false;\n            var footerTemplate = !isNullOrUndefined(cell.column.footerTemplate);\n            var groupFooterTemplate = !isNullOrUndefined(cell.column.groupFooterTemplate);\n            var groupCaptionTemplate = !isNullOrUndefined(cell.column.groupCaptionTemplate);\n            eCell.index = index + indent + gObj.childGridLevel;\n\n            if (footerTemplate) {\n              eCell.value = this.getAggreateValue(CellType.Summary, cell.column.footerTemplate, cell, row);\n            } else if (groupFooterTemplate) {\n              eCell.value = this.getAggreateValue(CellType.GroupSummary, cell.column.groupFooterTemplate, cell, row);\n            } else if (groupCaptionTemplate) {\n              eCell.value = this.getAggreateValue(CellType.CaptionSummary, cell.column.groupCaptionTemplate, cell, row);\n            } else {\n              for (var _c = 0, _d = Object.keys(row.data[cell.column.field]); _c < _d.length; _c++) {\n                var key = _d[_c];\n\n                if (key === cell.column.type) {\n                  if (!isNullOrUndefined(row.data[cell.column.field].Sum)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - sum\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Average)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - average\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Max)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - max\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Min)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - min\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Count)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - count\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].TrueCount)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - truecount\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].FalseCount)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - falsecount\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Custom)) {\n                    eCell.value = row.data[cell.column.field].Custom;\n                  }\n                }\n              }\n            }\n\n            eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n\n            this.aggregateStyle(cell.column, eCell.style, cell.column.field);\n            var gridCellStyle = cell.attributes.style;\n\n            if (gridCellStyle.textAlign) {\n              eCell.style.hAlign = gridCellStyle.textAlign.toLowerCase();\n            }\n\n            var args = {\n              row: row,\n              type: footerTemplate ? 'Footer' : groupFooterTemplate ? 'GroupFooter' : 'GroupCaption',\n              style: eCell\n            };\n            this.parent.trigger(events.excelAggregateQueryCellInfo, args);\n            cells.push(eCell);\n          } else {\n            if (customIndex === undefined) {\n              eCell.index = index + indent + gObj.childGridLevel;\n              eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n\n              cells.push(eCell);\n            }\n          }\n        }\n      }\n\n      if (!isNullOrUndefined(customIndex)) {\n        excelRows.push({\n          index: customIndex,\n          cells: cells\n        });\n      } else {\n        var row_1 = {};\n\n        if (this.groupedColLength < 8 && this.groupedColLength > 0) {\n          var dummyOutlineLevel = 'outlineLevel';\n          var dummyGrouping = 'grouping';\n          var level = excelRows[excelRows.length - 1][dummyGrouping][dummyOutlineLevel];\n          var grouping = {\n            outlineLevel: level,\n            isCollapsed: true\n          };\n          row_1 = {\n            index: this.rowLength++,\n            cells: cells,\n            grouping: grouping\n          };\n        } else {\n          row_1 = {\n            index: this.rowLength++,\n            cells: cells\n          };\n        }\n\n        if (!isEmpty) {\n          excelRows.push(row_1);\n        }\n      }\n    }\n\n    return excelRows;\n  };\n\n  ExcelExport.prototype.aggregateStyle = function (col, style, field) {\n    var column = this.parent.getColumnByField(field);\n\n    if (typeof col.format === 'object') {\n      var format = col.format;\n      style.numberFormat = !isNullOrUndefined(format.format) ? format.format : format.skeleton;\n\n      if (!isNullOrUndefined(format.type)) {\n        style.type = format.type.toLowerCase();\n      }\n    } else {\n      style.numberFormat = col.format;\n    }\n\n    if (!isNullOrUndefined(column) && isNullOrUndefined(style.type)) {\n      style.type = column.type.toLowerCase();\n    }\n  };\n\n  ExcelExport.prototype.getAggreateValue = function (cellType, template, cell, row) {\n    var templateFn = {};\n    templateFn[getEnumValue(CellType, cell.cellType)] = compile(template);\n    var txt;\n    var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n\n    if (this.parent.isReact || this.parent.isVue) {\n      txt = templateFn[getEnumValue(CellType, cell.cellType)](data, this.parent);\n\n      if (this.parent.isReact) {\n        this.parent.renderTemplates();\n      }\n    } else {\n      txt = templateFn[getEnumValue(CellType, cell.cellType)](data);\n    }\n\n    return txt[0].textContent;\n  };\n\n  ExcelExport.prototype.mergeOptions = function (JSON1, JSON2) {\n    var result = {};\n    var attrname = Object.keys(JSON1);\n\n    for (var index = 0; index < attrname.length; index++) {\n      if (attrname[index] !== 'name') {\n        result[attrname[index]] = JSON1[attrname[index]];\n      }\n    }\n\n    attrname = Object.keys(JSON2);\n\n    for (var index = 0; index < attrname.length; index++) {\n      if (attrname[index] !== 'name') {\n        result[attrname[index]] = JSON2[attrname[index]];\n      }\n    }\n\n    return result;\n  };\n\n  ExcelExport.prototype.getColumnStyle = function (gObj, columnIndex) {\n    var index = 0;\n\n    for (var _i = 0, _a = this.styles; _i < _a.length; _i++) {\n      var style = _a[_i];\n\n      if (style.name === gObj.element.id + 'column' + columnIndex) {\n        return index;\n      }\n\n      index++;\n    }\n\n    return undefined;\n  };\n\n  ExcelExport.prototype.processHeaderContent = function (gObj, headerRow, indent, excelRows) {\n    var rowIndex = 1;\n    var gridRows = headerRow.rows; // Column collection with respect to the records in the grid\n\n    var gridColumns = headerRow.columns;\n    var spannedCells = [];\n\n    if (indent > 0) {\n      var index = 0;\n\n      while (index !== indent) {\n        this.columns.push({\n          index: index + 1,\n          width: 30\n        });\n        index++;\n      }\n    }\n\n    for (var col = 0; col < gridColumns.length; col++) {\n      this.parseStyles(gObj, gridColumns[col], this.getRecordThemeStyle(this.theme), indent + col + 1);\n    }\n\n    var templateRowHeight;\n\n    for (var row = 0; row < gridRows.length; row++) {\n      var currentCellIndex = 1 + indent;\n      var cells = [];\n\n      for (var column = 0; column < gridRows[row].cells.length; column++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var style = {};\n        var cell = {};\n        var gridCell = gridRows[row].cells[column];\n\n        if (gridCell.cellType === CellType.HeaderIndent || gridCell.cellType === CellType.DetailHeader) {\n          continue;\n        }\n\n        var result = {\n          contains: true,\n          index: 1\n        };\n\n        while (result.contains) {\n          result = this.getIndex(spannedCells, rowIndex, currentCellIndex);\n          currentCellIndex = result.index;\n\n          if (!result.contains) {\n            cell.index = result.index + gObj.childGridLevel;\n            break;\n          }\n        }\n\n        if (!isNullOrUndefined(gridCell.rowSpan) && gridCell.rowSpan !== 1) {\n          cell.rowSpan = gridCell.rowSpan;\n\n          for (var i = rowIndex; i < gridCell.rowSpan + rowIndex; i++) {\n            var spannedCell = {\n              rowIndex: 0,\n              columnIndex: 0\n            };\n            spannedCell.rowIndex = i;\n            spannedCell.columnIndex = currentCellIndex;\n            spannedCells.push(spannedCell);\n          }\n        }\n\n        if (!isNullOrUndefined(gridCell.colSpan) && gridCell.colSpan !== 1) {\n          cell.colSpan = gridCell.colSpan;\n          currentCellIndex = currentCellIndex + cell.colSpan - 1;\n        }\n\n        cell.value = gridCell.column.headerText;\n        style = this.getHeaderThemeStyle(this.theme);\n\n        if (!isNullOrUndefined(gridCell.column.textAlign)) {\n          style.hAlign = gridCell.column.textAlign.toLowerCase();\n        }\n\n        if (!isNullOrUndefined(gridCell.column.headerTextAlign)) {\n          style.hAlign = gridCell.column.headerTextAlign.toLowerCase();\n        }\n\n        var excelHeaderCellArgs = {\n          cell: cell,\n          gridCell: gridCell,\n          style: style\n        };\n        gObj.trigger(events.excelHeaderQueryCellInfo, excelHeaderCellArgs);\n\n        if (!isNullOrUndefined(excelHeaderCellArgs.image) && !isNullOrUndefined(excelHeaderCellArgs.image.base64)) {\n          templateRowHeight = this.setImage(excelHeaderCellArgs, currentCellIndex);\n        }\n\n        if (!isNullOrUndefined(excelHeaderCellArgs.hyperLink)) {\n          excelHeaderCellArgs.cell.hyperlink = {\n            target: excelHeaderCellArgs.hyperLink.target\n          };\n          cell.value = excelHeaderCellArgs.hyperLink.displayText || cell.value;\n        }\n\n        cell.style = excelHeaderCellArgs.style;\n        cells.push(cell);\n        currentCellIndex++;\n      }\n\n      var excelRow = {\n        index: this.rowLength++,\n        cells: cells\n      };\n\n      if (!isNullOrUndefined(templateRowHeight)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        excelRow.height = templateRowHeight;\n      }\n\n      excelRows.push(excelRow);\n    }\n\n    return excelRows;\n  };\n\n  ExcelExport.prototype.getHeaderThemeStyle = function (theme) {\n    var style = {};\n    style.fontSize = 12;\n    style.borders = {\n      color: '#E0E0E0'\n    };\n    style.bold = true;\n\n    if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.header)) {\n      style = this.updateThemeStyle(theme.header, style);\n    }\n\n    return style;\n  };\n\n  ExcelExport.prototype.updateThemeStyle = function (themestyle, style) {\n    return extend(style, themestyle);\n  };\n\n  ExcelExport.prototype.getCaptionThemeStyle = function (theme) {\n    var style = {};\n    style.fontSize = 13;\n    style.backColor = '#F6F6F6';\n\n    if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.caption)) {\n      style = this.updateThemeStyle(theme.caption, style);\n    }\n\n    return style;\n  };\n\n  ExcelExport.prototype.getRecordThemeStyle = function (theme) {\n    var style = {};\n    style.fontSize = 13;\n    style.borders = {\n      color: '#E0E0E0'\n    };\n\n    if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.record)) {\n      style = this.updateThemeStyle(theme.record, style);\n    }\n\n    return style;\n  };\n\n  ExcelExport.prototype.processExcelHeader = function (header) {\n    if (!isNullOrUndefined(header.rows) && (this.expType === 'NewSheet' || this.rowLength === 1)) {\n      var noRows = void 0;\n\n      if (header.headerRows === undefined) {\n        this.rowLength = header.rows.length;\n      } else {\n        this.rowLength = header.headerRows;\n      }\n\n      if (this.rowLength < header.rows.length) {\n        noRows = this.rowLength;\n      } else {\n        noRows = header.rows.length;\n      }\n\n      this.rowLength++;\n\n      for (var row = 0; row < noRows; row++) {\n        var json = header.rows[row]; //Row index\n\n        if (!(json.index !== null && !isNullOrUndefined(json.index))) {\n          json.index = row + 1;\n        }\n\n        this.updatedCellIndex(json);\n      }\n    }\n  };\n\n  ExcelExport.prototype.updatedCellIndex = function (json) {\n    var cellsLength = json.cells.length;\n\n    for (var cellId = 0; cellId < cellsLength; cellId++) {\n      var jsonCell = json.cells[cellId]; //cell index\n\n      if (!(jsonCell.index !== null && !isNullOrUndefined(jsonCell.index))) {\n        jsonCell.index = cellId + 1;\n      }\n    }\n\n    this.rows.push(json);\n  };\n\n  ExcelExport.prototype.processExcelFooter = function (footer) {\n    if (!isNullOrUndefined(footer.rows)) {\n      var noRows = void 0;\n\n      if (footer.footerRows === undefined) {\n        this.rowLength += footer.rows.length;\n      } else {\n        if (footer.footerRows > footer.rows.length) {\n          this.rowLength += footer.footerRows - footer.rows.length;\n          noRows = footer.rows.length;\n        } else {\n          noRows = footer.footerRows;\n        }\n      }\n\n      for (var row = 0; row < noRows; row++) {\n        var json = footer.rows[row]; //Row index\n\n        if (json.index === null || json.index === undefined) {\n          json.index = this.rowLength++;\n        } else {\n          json.index += this.rowLength;\n        }\n\n        this.updatedCellIndex(json);\n      }\n    }\n  };\n\n  ExcelExport.prototype.getIndex = function (spannedCells, rowIndex, columnIndex) {\n    for (var _i = 0, spannedCells_1 = spannedCells; _i < spannedCells_1.length; _i++) {\n      var spannedCell = spannedCells_1[_i];\n\n      if (spannedCell.rowIndex === rowIndex && spannedCell.columnIndex === columnIndex) {\n        columnIndex = columnIndex + 1;\n        return {\n          contains: true,\n          index: columnIndex\n        };\n      }\n    }\n\n    return {\n      contains: false,\n      index: columnIndex\n    };\n  };\n\n  ExcelExport.prototype.parseStyles = function (gObj, col, style, index) {\n    if (!isNullOrUndefined(col.format)) {\n      if (typeof col.format === 'object') {\n        var format = col.format;\n        style.numberFormat = !isNullOrUndefined(format.format) ? format.format : format.skeleton;\n\n        if (!isNullOrUndefined(format.type)) {\n          style.type = format.type.toLowerCase();\n        }\n      } else {\n        style.numberFormat = col.format;\n        style.type = col.type;\n      }\n    }\n\n    if (!isNullOrUndefined(col.textAlign)) {\n      style.hAlign = col.textAlign.toLowerCase();\n    }\n\n    if (Object.keys(style).length > 0) {\n      style.name = gObj.element.id + 'column' + index;\n      this.styles.push(style);\n    }\n\n    if (!isNullOrUndefined(col.width) && col.width !== 'auto') {\n      this.columns.push({\n        index: index + gObj.childGridLevel,\n        width: typeof col.width === 'number' ? col.width : this.helper.getConvertedWidth(col.width)\n      });\n    }\n  };\n\n  ExcelExport.prototype.destroy = function () {//destroy for exporting\n  };\n\n  return ExcelExport;\n}();\n\nexport { ExcelExport };","map":{"version":3,"names":["events","Workbook","isNullOrUndefined","getEnumValue","compile","getValue","detach","extend","Data","ExportHelper","ExportValueFormatter","SummaryModelGenerator","GroupSummaryModelGenerator","CaptionSummaryModelGenerator","CellType","Query","DataManager","getPrintGridModel","getUid","isExportColumns","updateColumnTypeForExportColumns","prepareColumns","measureColumnDepth","ExcelExport","parent","locator","book","workSheet","rows","columns","styles","rowLength","expType","includeHiddenColumn","isCsvExport","isElementIdChanged","gridPool","sheet","helper","l10n","getService","prototype","getModuleName","init","gObj","element","id","Date","toISOString","isDestroyed","isExporting","undefined","footer","exportValueFormatter","locale","Map","grid","exportProperties","isMultipleExport","workbook","isCsv","isBlob","cancel","isBlb","csv","workbk","isMultiEx","childGrid","hierarchyExportMode","expandedRows","args","requestType","gridObject","trigger","beforeExcelExport","Promise","resolve","log","data","processRecords","exportingSuccess","excelExportComplete","promise","blobPromise","images","_this","dataSource","query_1","query","isCountRequired","aggregates","dataManager","executeQuery","then","r","processInnerRecords","exportType","getCurrentViewRecords","allPromise_1","push","getData","getQuery","getColumnData","reject","all","e","catch","actionFailure","groupedColLength","groupSettings","length","blankRows","separator","colDepth","isExportPropertiesPresent","multipleExport","type","worksheets","index","header","processExcelHeader","JSON","parse","stringify","childGridLevel","processGridExport","globalResolve","checkAndExport","organisedRows","organiseRows","concat","processExcelFooter","enableRtl","allowFiltering","getVisibleColumns","enableFilter","headerRowLen","headerRows","autoFilters","row","column","lastRow","lastColumn","notify","currencyCode","fileName","save","saveAsBlob","initialIndex","i","childRows","excelRows","isFrozen","isFrozenGrid","getFrozenColumns","theme","hierarchyPrintMode","getForeignKeyData","gColumns","enableColumnVirtualization","getGridExportColumns","getColumns","headerRow","getHeaders","groupIndent","processHeaderContent","processRecordContent","currentViewData","exportDataBound","returnType","currentViewRecords","excelRow","record","result","level","processGroupedRows","processRecordRows","processAggregates","GroupGuid","records","startIndex","excelExportProperties","_i","dataSource_1","item","cells","cell","col","getColumnByField","field","value","key","style","isForeignKey","isForeignColumn","headerText","enableGroupByFormat","formatCellValue","count","cArgs","captionText","exportGroupCaption","getCaptionThemeStyle","captionModelGen","groupCaptionSummaryRows","generateRows","fillAggregates","childLevels","lIndex","hIndex","_a","_b","tCell","colSpan","sCell","span","_c","_d","col_1","visible","grouping","outlineLevel","isCollapsed","items","getGridRowModel","rows_1","templateRowHeight","c","len","gCell","cellType","cellValue","valueAccessor","fkData","getFData","foreignKeyValue","idx","excelCellArgs","foreignKeyData","excelQueryCellInfo","image","base64","setImage","hyperLink","hyperlink","target","displayText","hAlign","getConstant","styleIndex","getColumnStyle","mergeOptions","name","height","isExpand","isPrinting","returnVal","createChildGrid","childGridObj","failureHandler","exportDetailDataBound","beforeDataBound","childGridCell","appendTo","exportRowDataBound","rowObj","excelImage","width","excelExportProps","gRow","intent","isHidden","destroy","rec","indent","byGroup","summaryModel","filter","commands","aggregateModule","prepareSummaryInfo","groupSummaryModel","groupSummaryRows","sRows","customIndex","rows_2","isEmpty","eCell","DetailFooterIntent","isDataCell","footerTemplate","groupFooterTemplate","groupCaptionTemplate","getAggreateValue","Summary","GroupSummary","CaptionSummary","Object","keys","Sum","Average","Max","Min","Count","TrueCount","FalseCount","Custom","aggregateStyle","gridCellStyle","attributes","textAlign","toLowerCase","excelAggregateQueryCellInfo","row_1","dummyOutlineLevel","dummyGrouping","format","numberFormat","skeleton","template","templateFn","txt","columnName","isReact","isVue","renderTemplates","textContent","JSON1","JSON2","attrname","columnIndex","rowIndex","gridRows","gridColumns","spannedCells","parseStyles","getRecordThemeStyle","currentCellIndex","gridCell","HeaderIndent","DetailHeader","contains","getIndex","rowSpan","spannedCell","getHeaderThemeStyle","headerTextAlign","excelHeaderCellArgs","excelHeaderQueryCellInfo","fontSize","borders","color","bold","updateThemeStyle","themestyle","backColor","caption","noRows","json","updatedCellIndex","cellsLength","cellId","jsonCell","footerRows","spannedCells_1","getConvertedWidth"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin Dashboard/Frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/excel-export.js"],"sourcesContent":["import * as events from '../base/constant';\nimport { Workbook } from '@syncfusion/ej2-excel-export';\nimport { isNullOrUndefined, getEnumValue, compile, getValue, detach, extend } from '@syncfusion/ej2-base';\nimport { Data } from '../actions/data';\nimport { ExportHelper, ExportValueFormatter } from './export-helper';\nimport { SummaryModelGenerator, GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { CellType } from '../base/enum';\nimport { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getPrintGridModel, getUid, isExportColumns, updateColumnTypeForExportColumns, prepareColumns, measureColumnDepth } from '../base/util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the Grid Excel Export module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function ExcelExport(parent, locator) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.book = {};\n        this.workSheet = [];\n        this.rows = [];\n        this.columns = [];\n        this.styles = [];\n        this.rowLength = 1;\n        this.expType = 'AppendToSheet';\n        this.includeHiddenColumn = false;\n        this.isCsvExport = false;\n        this.isElementIdChanged = false;\n        this.gridPool = {};\n        this.sheet = {};\n        this.parent = parent;\n        this.helper = new ExportHelper(parent);\n        this.locator = locator;\n        this.l10n = this.locator.getService('localization');\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    ExcelExport.prototype.init = function (gObj) {\n        if (gObj.element !== null && gObj.element.id === '') {\n            gObj.element.id = new Date().toISOString();\n            this.isElementIdChanged = true;\n        }\n        this.parent = gObj;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.isExporting = undefined;\n        this.book = {};\n        this.workSheet = [];\n        this.rows = [];\n        this.columns = [];\n        this.styles = [];\n        this.rowLength = 1;\n        this.footer = undefined;\n        this.expType = 'AppendToSheet';\n        this.includeHiddenColumn = false;\n        this.exportValueFormatter = new ExportValueFormatter(gObj.locale);\n        gObj.id = getUid('main-grid');\n        this.gridPool[gObj.id] = false;\n    };\n    /**\n     * Export Grid to Excel file.\n     *\n     * @param {IGrid} grid - Defines the grid.\n     * @param  {exportProperties} exportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Defines is multiple Grid's are exported.\n     * @param  {Workbook} workbook - Defined the Workbook if multiple Grid is exported.\n     * @param  {boolean} isCsv - true if export to CSV.\n     * @param {boolean} isBlob - true if isBlob is enabled.\n     * @returns {Promise<any>} - Returns the map for export.\n     */\n    // eslint-disable-next-line\n    ExcelExport.prototype.Map = function (grid, exportProperties, isMultipleExport, workbook, isCsv, isBlob) {\n        var gObj = grid;\n        var cancel = 'cancel';\n        var isBlb = 'isBlob';\n        var csv = 'isCsv';\n        var workbk = 'workbook';\n        var isMultiEx = 'isMultipleExport';\n        this.gridPool = {};\n        if (grid.childGrid && !(!isNullOrUndefined(exportProperties) && exportProperties.hierarchyExportMode === 'None')) {\n            grid.expandedRows = getPrintGridModel(grid).expandedRows;\n        }\n        var args = {\n            requestType: 'beforeExcelExport', gridObject: gObj, cancel: false,\n            isMultipleExport: isMultipleExport, workbook: workbook, isCsv: isCsv, isBlob: isBlob\n        };\n        gObj.trigger(events.beforeExcelExport, args);\n        if (args[cancel]) {\n            return new Promise(function (resolve) {\n                return resolve();\n            });\n        }\n        this.parent.log('exporting_begin', this.getModuleName());\n        this.data = new Data(gObj);\n        this.isExporting = true;\n        this.isBlob = args[isBlb];\n        if (args[csv]) {\n            this.isCsvExport = args[csv];\n        }\n        else {\n            this.isCsvExport = false;\n        }\n        if (isExportColumns(exportProperties)) {\n            updateColumnTypeForExportColumns(exportProperties, gObj);\n        }\n        return this.processRecords(gObj, exportProperties, args[isMultiEx], args[workbk]);\n    };\n    ExcelExport.prototype.exportingSuccess = function (resolve) {\n        this.isExporting = false;\n        this.parent.trigger(events.excelExportComplete, this.isBlob ? { promise: this.blobPromise } : {});\n        this.parent.log('exporting_complete', this.getModuleName());\n        resolve(this.book);\n        this.sheet.images = [];\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ExcelExport.prototype.processRecords = function (gObj, exportProperties, isMultipleExport, workbook) {\n        var _this = this;\n        if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.dataSource) &&\n            exportProperties.dataSource instanceof DataManager) {\n            var query_1 = exportProperties.query ? exportProperties.query : new Query();\n            if (isNullOrUndefined(query_1.isCountRequired) || gObj.aggregates) {\n                query_1.isCountRequired = true;\n            }\n            return new Promise(function (resolve) {\n                var dataManager = exportProperties.dataSource.executeQuery(query_1);\n                dataManager.then(function (r) {\n                    _this.init(gObj);\n                    _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, r).then(function () {\n                        _this.exportingSuccess(resolve);\n                    });\n                });\n            });\n        }\n        else if (!isNullOrUndefined(exportProperties) && exportProperties.exportType === 'CurrentPage') {\n            return new Promise(function (resolve) {\n                _this.init(gObj);\n                _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, _this.parent.getCurrentViewRecords());\n                _this.exportingSuccess(resolve);\n            });\n        }\n        else {\n            var allPromise_1 = [];\n            allPromise_1.push(this.data.getData({}, ExportHelper.getQuery(gObj, this.data)));\n            allPromise_1.push(this.helper.getColumnData(gObj));\n            return new Promise(function (resolve, reject) {\n                Promise.all(allPromise_1).then(function (e) {\n                    _this.init(gObj);\n                    _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, e[0]).then(function () {\n                        _this.exportingSuccess(resolve);\n                    });\n                }).catch(function (e) {\n                    reject(_this.book);\n                    _this.parent.trigger(events.actionFailure, e);\n                });\n            });\n        }\n    };\n    ExcelExport.prototype.processInnerRecords = function (gObj, exportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, r) {\n        var _this = this;\n        this.groupedColLength = gObj.groupSettings.columns.length;\n        var blankRows = 5;\n        var separator;\n        var rows = [];\n        var colDepth = measureColumnDepth(gObj.columns);\n        var isExportPropertiesPresent = !isNullOrUndefined(exportProperties);\n        if (isExportPropertiesPresent && !isNullOrUndefined(exportProperties.multipleExport)) {\n            this.expType = (!isNullOrUndefined(exportProperties.multipleExport.type) ? exportProperties.multipleExport.type : 'AppendToSheet');\n            if (!isNullOrUndefined(exportProperties.multipleExport.blankRows)) {\n                blankRows = exportProperties.multipleExport.blankRows;\n            }\n        }\n        if (isNullOrUndefined(workbook)) {\n            this.workSheet = [];\n            this.rows = [];\n            this.columns = [];\n            this.styles = [];\n        }\n        else if (this.expType === 'NewSheet') {\n            this.workSheet = workbook.worksheets;\n            this.rows = [];\n            this.columns = [];\n            this.styles = workbook.styles;\n        }\n        else {\n            this.workSheet = [];\n            this.rows = workbook.worksheets[0].rows;\n            this.columns = workbook.worksheets[0].columns;\n            this.styles = workbook.styles;\n            this.rowLength = (this.rows[this.rows.length - 1].index + blankRows);\n            this.rowLength++;\n        }\n        if (isExportPropertiesPresent) {\n            if (!isNullOrUndefined(isMultipleExport)) {\n                if (!isNullOrUndefined(exportProperties.header) && (isMultipleExport || this.expType === 'NewSheet')) {\n                    this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n                }\n                if (!isNullOrUndefined(exportProperties.footer)) {\n                    if (this.expType === 'AppendToSheet') {\n                        if (!isMultipleExport) {\n                            this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                        }\n                    }\n                    else {\n                        this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(exportProperties.header)) {\n                    this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n                }\n                if (!isNullOrUndefined(exportProperties.footer)) {\n                    this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                }\n            }\n        }\n        this.includeHiddenColumn = (isExportPropertiesPresent ? exportProperties.includeHiddenColumn : false);\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        return new Promise(function (resolve, reject) {\n            gObj.childGridLevel = 0;\n            rows = _this.processGridExport(gObj, exportProperties, r);\n            _this.globalResolve = resolve;\n            _this.gridPool[gObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n        }).then(function () {\n            var organisedRows = [];\n            _this.organiseRows(rows, rows[0].index, organisedRows);\n            _this.rows = _this.rows.concat(organisedRows);\n            //footer template add\n            if (!isNullOrUndefined(_this.footer)) {\n                if ((_this.expType === 'AppendToSheet' && !isMultipleExport) || (_this.expType === 'NewSheet')) {\n                    _this.processExcelFooter(_this.footer);\n                }\n            }\n            if (_this.columns.length > 0) {\n                _this.sheet.columns = _this.columns;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            _this.sheet.rows = _this.rows;\n            _this.sheet.enableRtl = _this.parent.enableRtl;\n            if (_this.parent.allowFiltering && gObj.getVisibleColumns().length && isExportPropertiesPresent &&\n                exportProperties.enableFilter) {\n                var headerRowLen = exportProperties.header ? exportProperties.header.headerRows ||\n                    exportProperties.header.rows.length : 0;\n                var autoFilters = {\n                    row: colDepth + headerRowLen, column: _this.groupedColLength ? _this.groupedColLength + 1 :\n                        _this.sheet.columns[0].index, lastRow: _this.sheet.rows.length, lastColumn: _this.sheet.columns.length\n                };\n                _this.sheet.autoFilters = autoFilters;\n            }\n            _this.workSheet.push(_this.sheet);\n            _this.book.worksheets = _this.workSheet;\n            _this.book.styles = _this.styles;\n            gObj.notify('finalPageSetup', _this.book);\n            if (!isMultipleExport) {\n                if (_this.isCsvExport) {\n                    if (isExportPropertiesPresent && !isNullOrUndefined(exportProperties.separator)\n                        && exportProperties.separator !== ',') {\n                        separator = exportProperties.separator;\n                    }\n                    var book = new Workbook(_this.book, 'csv', gObj.locale, gObj.currencyCode, separator);\n                    if (!_this.isBlob) {\n                        if (isExportPropertiesPresent && exportProperties.fileName) {\n                            book.save(exportProperties.fileName);\n                        }\n                        else {\n                            book.save('Export.csv');\n                        }\n                    }\n                    else {\n                        _this.blobPromise = book.saveAsBlob('text/csv');\n                    }\n                }\n                else {\n                    var book = new Workbook(_this.book, 'xlsx', gObj.locale, gObj.currencyCode);\n                    if (!_this.isBlob) {\n                        if (isExportPropertiesPresent && exportProperties.fileName) {\n                            book.save(exportProperties.fileName);\n                        }\n                        else {\n                            book.save('Export.xlsx');\n                        }\n                    }\n                    else {\n                        _this.blobPromise = book.saveAsBlob('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n                    }\n                }\n                if (_this.isElementIdChanged) {\n                    gObj.element.id = '';\n                }\n                delete gObj.expandedRows;\n            }\n            return workbook;\n        });\n    };\n    ExcelExport.prototype.organiseRows = function (rows, initialIndex, organisedRows) {\n        if (!rows.length) {\n            return initialIndex;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var childRows = row.childRows;\n            if (childRows) {\n                row.index = initialIndex++;\n                delete row.childRows;\n                organisedRows.push(row);\n                initialIndex = this.organiseRows(childRows, initialIndex, organisedRows);\n            }\n            else {\n                row.index = initialIndex++;\n                organisedRows.push(row);\n            }\n        }\n        return initialIndex;\n    };\n    ExcelExport.prototype.processGridExport = function (gObj, exportProperties, r) {\n        var excelRows = [];\n        var isFrozen = this.parent.isFrozenGrid() && !this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.theme)) {\n            this.theme = exportProperties.theme;\n        }\n        if (gObj.childGrid && !isNullOrUndefined(exportProperties)) {\n            gObj.hierarchyPrintMode = exportProperties.hierarchyExportMode || 'Expanded';\n        }\n        var helper = new ExportHelper(gObj, this.helper.getForeignKeyData());\n        var gColumns = isExportColumns(exportProperties) ?\n            prepareColumns(exportProperties.columns, gObj.enableColumnVirtualization) :\n            helper.getGridExportColumns(isFrozen ? gObj.getColumns() : gObj.columns);\n        var headerRow = helper.getHeaders(gColumns, this.includeHiddenColumn);\n        var groupIndent = gObj.groupSettings.columns.length ? gObj.groupSettings.columns.length - 1 : 0;\n        excelRows = this.processHeaderContent(gObj, headerRow, groupIndent, excelRows);\n        // eslint-disable-next-line max-len\n        if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.dataSource) && !(exportProperties.dataSource instanceof DataManager)) {\n            // eslint-disable-next-line max-len\n            excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, exportProperties.dataSource, excelRows, helper);\n        }\n        else if (!isNullOrUndefined(exportProperties) && exportProperties.exportType === 'CurrentPage') {\n            excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, gObj.currentViewData, excelRows, helper);\n        }\n        else {\n            excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, undefined, excelRows, helper);\n        }\n        gObj.notify(events.exportDataBound, { excelRows: excelRows, type: 'excel' });\n        return excelRows;\n    };\n    ExcelExport.prototype.processRecordContent = function (gObj, returnType, headerRow, exportProperties, currentViewRecords, excelRow, helper) {\n        var record;\n        if (!isNullOrUndefined(currentViewRecords) && currentViewRecords.length) {\n            record = currentViewRecords;\n        }\n        else {\n            record = returnType.result;\n        }\n        if (!isNullOrUndefined(record.level)) {\n            this.processGroupedRows(gObj, record, headerRow, record.level, 0, exportProperties, excelRow, helper);\n        }\n        else {\n            this.processRecordRows(gObj, record, headerRow, 0, 0, exportProperties, excelRow, helper);\n        }\n        if (!isNullOrUndefined(returnType.aggregates)) {\n            if (!isNullOrUndefined(currentViewRecords)) {\n                this.processAggregates(gObj, returnType.result, excelRow, currentViewRecords);\n            }\n            else {\n                var result = returnType.result.GroupGuid ?\n                    returnType.result.records : returnType.result;\n                this.processAggregates(gObj, result, excelRow);\n            }\n        }\n        return excelRow;\n    };\n    ExcelExport.prototype.processGroupedRows = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    gObj, dataSource, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n        for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n            var item = dataSource_1[_i];\n            var cells = [];\n            var index = 1;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var cell = {};\n            cell.index = (index + level) - 1;\n            var col = gObj.getColumnByField(item.field);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var args = {\n                value: item.key,\n                column: col,\n                style: undefined,\n                isForeignKey: col.isForeignColumn()\n            };\n            var value = gObj.getColumnByField(item.field).headerText +\n                ': ' + (!col.enableGroupByFormat ? this.exportValueFormatter.formatCellValue(args) : item.key) + ' - ';\n            if (item.count > 1) {\n                value += item.count + ' items';\n            }\n            else {\n                value += item.count + ' item';\n            }\n            var cArgs = { captionText: value, type: this.isCsvExport ? 'CSV' : 'Excel', data: item };\n            this.parent.trigger(events.exportGroupCaption, cArgs);\n            cell.value = cArgs.captionText;\n            cell.style = this.getCaptionThemeStyle(this.theme);\n            var captionModelGen = new CaptionSummaryModelGenerator(gObj);\n            var groupCaptionSummaryRows = captionModelGen.generateRows(item);\n            this.fillAggregates(gObj, groupCaptionSummaryRows, (dataSource.level + dataSource.childLevels) - 1, excelRows, this.rowLength);\n            cells.push(cell);\n            if (excelRows[excelRows.length - 1].cells.length > 0) {\n                var lIndex = dataSource.level + dataSource.childLevels + groupCaptionSummaryRows[0].cells.length;\n                var hIndex = 0;\n                for (var _a = 0, _b = excelRows[excelRows.length - 1].cells; _a < _b.length; _a++) {\n                    var tCell = _b[_a];\n                    if (tCell.index < lIndex) {\n                        lIndex = tCell.index;\n                    }\n                    if (tCell.index > hIndex) {\n                        hIndex = tCell.index;\n                    }\n                    if (cells[cells.length - 1].index !== tCell.index) {\n                        cells.push(tCell);\n                    }\n                }\n                if ((lIndex - cell.index) > 1) {\n                    cell.colSpan = lIndex - cell.index;\n                }\n                while (hIndex < (headerRow.columns.length + level + dataSource.childLevels)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var sCell = {};\n                    sCell.index = (hIndex + 1);\n                    sCell.style = this.getCaptionThemeStyle(this.theme);\n                    cells.push(sCell);\n                    hIndex++;\n                }\n            }\n            else {\n                var span = 0;\n                //Calculation for column span when group caption dont have aggregates\n                for (var _c = 0, _d = headerRow.columns; _c < _d.length; _c++) {\n                    var col_1 = _d[_c];\n                    if (col_1.visible) {\n                        span++;\n                    }\n                }\n                cell.colSpan = (dataSource.childLevels + span);\n            }\n            excelRows[excelRows.length - 1].cells = cells;\n            this.rowLength++;\n            if (this.groupedColLength < 8 && level > 1) {\n                var grouping = { outlineLevel: level - 1, isCollapsed: true };\n                excelRows[excelRows.length - 1].grouping = grouping;\n            }\n            if (!isNullOrUndefined(dataSource.childLevels) && dataSource.childLevels > 0) {\n                this.processGroupedRows(gObj, item.items, headerRow, item.items.level, startIndex, excelExportProperties, excelRows, helper);\n                this.processAggregates(gObj, item, excelRows, undefined, (level - 1) + dataSource.childLevels, true);\n            }\n            else {\n                startIndex = this.processRecordRows(gObj, item.items, headerRow, (level - 1), startIndex, excelExportProperties, excelRows, helper);\n                this.processAggregates(gObj, item, excelRows, undefined, (level - 1), true);\n            }\n        }\n    };\n    ExcelExport.prototype.processRecordRows = function (gObj, record, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n        var index = 1;\n        var cells = [];\n        var columns = headerRow.columns;\n        var rows = helper.getGridRowModel(columns, record, gObj, startIndex);\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            cells = [];\n            startIndex++;\n            index = 1;\n            var templateRowHeight = void 0;\n            for (var c = 0, len = row.cells.length; c < len; c++) {\n                var gCell = row.cells[c];\n                if (gCell.cellType !== CellType.Data) {\n                    continue;\n                }\n                var column = gCell.column;\n                var field = column.field;\n                var cellValue = !isNullOrUndefined(field) ? column.valueAccessor(field, row.data, column) : '';\n                var value = !isNullOrUndefined(cellValue) ? cellValue : '';\n                var fkData = void 0;\n                if (column.isForeignColumn && column.isForeignColumn()) {\n                    fkData = helper.getFData(value, column);\n                    value = getValue(column.foreignKeyValue, fkData);\n                }\n                if (!isNullOrUndefined(value)) {\n                    var cell = {};\n                    var idx = index + level + gObj.childGridLevel;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var excelCellArgs = {\n                        data: row.data, column: column, foreignKeyData: fkData,\n                        value: value, style: undefined, colSpan: 1, cell: cell\n                    };\n                    gObj.trigger(events.excelQueryCellInfo, excelCellArgs);\n                    if (!isNullOrUndefined(excelCellArgs.image) && !isNullOrUndefined(excelCellArgs.image.base64)) {\n                        templateRowHeight = this.setImage(excelCellArgs, idx);\n                    }\n                    if (!isNullOrUndefined(excelCellArgs.hyperLink)) {\n                        excelCellArgs.cell.hyperlink = { target: excelCellArgs.hyperLink.target };\n                        excelCellArgs.value = excelCellArgs.hyperLink.displayText || excelCellArgs.value;\n                    }\n                    cell = excelCellArgs.cell;\n                    cell.index = idx;\n                    cell.value = excelCellArgs.value;\n                    if (excelCellArgs.data === '' && gObj.childGridLevel && index === 1) {\n                        var style = {};\n                        style.hAlign = 'left';\n                        excelCellArgs = { style: style };\n                        cell.colSpan = gObj.getVisibleColumns().length;\n                        cell.value = this.l10n.getConstant('EmptyRecord');\n                    }\n                    if (excelCellArgs.colSpan > 1) {\n                        cell.colSpan = excelCellArgs.colSpan;\n                    }\n                    if (!isNullOrUndefined(excelCellArgs.style)) {\n                        var styleIndex = this.getColumnStyle(gObj, index + level);\n                        cell.style = this.mergeOptions(this.styles[styleIndex], excelCellArgs.style);\n                    }\n                    else {\n                        cell.style = { name: gObj.element.id + 'column' + (index + level) };\n                    }\n                    cells.push(cell);\n                }\n                index++;\n            }\n            var excelRow = { index: this.rowLength++, cells: cells };\n            if (!isNullOrUndefined(templateRowHeight)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                excelRow.height = templateRowHeight;\n            }\n            if (this.groupedColLength && this.groupedColLength < 8 && (level + 1) > 0) {\n                excelRow.grouping = { outlineLevel: (level + 1), isCollapsed: true };\n                excelRows.push(excelRow);\n            }\n            else {\n                excelRows.push(excelRow);\n            }\n            if (row.isExpand && !isNullOrUndefined(gObj.childGrid)) {\n                gObj.isPrinting = true;\n                var exportType = (!isNullOrUndefined(excelExportProperties) && excelExportProperties.exportType) ?\n                    excelExportProperties.exportType : 'AllPages';\n                var returnVal = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n                var childGridObj = returnVal.childGrid;\n                var element = returnVal.element;\n                childGridObj.actionFailure =\n                    helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n                childGridObj.childGridLevel = gObj.childGridLevel + 1;\n                var args = { childGrid: childGridObj, row: row, exportProperties: excelExportProperties };\n                this.parent.trigger(events.exportDetailDataBound, args);\n                childGridObj.beforeDataBound = this.childGridCell(excelRow, childGridObj, excelExportProperties, row);\n                childGridObj.appendTo(element);\n            }\n            gObj.notify(events.exportRowDataBound, { rowObj: row, type: 'excel', excelRows: excelRows });\n        }\n        return startIndex;\n    };\n    ExcelExport.prototype.setImage = function (args, idx) {\n        if (isNullOrUndefined(this.sheet.images)) {\n            this.sheet.images = [];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var excelImage = {\n            image: args.image.base64, row: this.rowLength, column: idx,\n            lastRow: this.rowLength, lastColumn: idx\n        };\n        this.sheet.images.push(excelImage);\n        this.columns[idx - 1].width = args.image.width || this.columns[idx - 1].width;\n        return args.image.height || 50;\n    };\n    ExcelExport.prototype.childGridCell = function (excelRow, childGridObj, excelExportProps, gRow) {\n        var _this = this;\n        return function (result) {\n            childGridObj.beforeDataBound = null;\n            result.cancel = true;\n            if (result.result.length === 0) {\n                result.result = [''];\n            }\n            excelRow.childRows = _this.processGridExport(childGridObj, excelExportProps, result);\n            var intent = _this.parent.groupSettings.columns.length;\n            var rows = excelRow.childRows;\n            for (var i = 0; i < rows.length; i++) {\n                rows[i].grouping = { outlineLevel: intent + childGridObj.childGridLevel,\n                    isCollapsed: !gRow.isExpand, isHidden: !gRow.isExpand };\n            }\n            childGridObj.destroy();\n            detach(childGridObj.element);\n            _this.gridPool[childGridObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n            return excelRow;\n        };\n    };\n    ExcelExport.prototype.processAggregates = function (gObj, rec, excelRows, currentViewRecords, indent, byGroup) {\n        var summaryModel = new SummaryModelGenerator(gObj);\n        var columns = summaryModel.getColumns();\n        columns = columns.filter(function (col) { return isNullOrUndefined(col.commands) && col.type !== 'checkbox'; });\n        if (gObj.aggregates.length && this.parent !== gObj) {\n            gObj.aggregateModule.prepareSummaryInfo();\n        }\n        var data = undefined;\n        if (!isNullOrUndefined(currentViewRecords)) {\n            data = currentViewRecords;\n        }\n        else {\n            data = rec;\n        }\n        if (indent === undefined) {\n            indent = 0;\n        }\n        if (gObj.groupSettings.columns.length > 0 && byGroup) {\n            var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n            var groupSummaryRows = groupSummaryModel.generateRows(data, { level: data.level });\n            if (groupSummaryRows.length > 0) {\n                excelRows = this.fillAggregates(gObj, groupSummaryRows, indent, excelRows);\n            }\n        }\n        else {\n            indent = gObj.groupSettings.columns.length > 0 && !byGroup ? gObj.groupSettings.columns.length : indent;\n            var sRows = summaryModel.generateRows(data, rec.aggregates, null, null, columns);\n            if (sRows.length > 0 && !byGroup) {\n                indent = gObj.groupSettings.columns.length ? indent - 1 : indent;\n                excelRows = this.fillAggregates(gObj, sRows, indent, excelRows);\n            }\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.fillAggregates = function (gObj, rows, indent, excelRows, customIndex) {\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            var cells = [];\n            var isEmpty = true;\n            var index = 0;\n            for (var _a = 0, _b = row.cells; _a < _b.length; _a++) {\n                var cell = _b[_a];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var eCell = {};\n                if (cell.cellType === CellType.DetailFooterIntent) {\n                    continue;\n                }\n                if ((cell.visible || this.includeHiddenColumn)) {\n                    index++;\n                    if (cell.isDataCell) {\n                        isEmpty = false;\n                        var footerTemplate = !isNullOrUndefined(cell.column.footerTemplate);\n                        var groupFooterTemplate = !isNullOrUndefined(cell.column.groupFooterTemplate);\n                        var groupCaptionTemplate = !isNullOrUndefined(cell.column.groupCaptionTemplate);\n                        eCell.index = index + indent + gObj.childGridLevel;\n                        if (footerTemplate) {\n                            eCell.value = this.getAggreateValue(CellType.Summary, cell.column.footerTemplate, cell, row);\n                        }\n                        else if (groupFooterTemplate) {\n                            eCell.value = this.getAggreateValue(CellType.GroupSummary, cell.column.groupFooterTemplate, cell, row);\n                        }\n                        else if (groupCaptionTemplate) {\n                            eCell.value = this.getAggreateValue(CellType.CaptionSummary, cell.column.groupCaptionTemplate, cell, row);\n                        }\n                        else {\n                            for (var _c = 0, _d = Object.keys(row.data[cell.column.field]); _c < _d.length; _c++) {\n                                var key = _d[_c];\n                                if (key === cell.column.type) {\n                                    if (!isNullOrUndefined(row.data[cell.column.field].Sum)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - sum\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Average)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - average\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Max)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - max\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Min)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - min\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Count)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - count\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].TrueCount)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - truecount\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].FalseCount)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - falsecount\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Custom)) {\n                                        eCell.value = row.data[cell.column.field].Custom;\n                                    }\n                                }\n                            }\n                        }\n                        eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n                        this.aggregateStyle(cell.column, eCell.style, cell.column.field);\n                        var gridCellStyle = cell.attributes.style;\n                        if (gridCellStyle.textAlign) {\n                            eCell.style.hAlign = gridCellStyle.textAlign.toLowerCase();\n                        }\n                        var args = {\n                            row: row,\n                            type: footerTemplate ? 'Footer' : groupFooterTemplate ? 'GroupFooter' : 'GroupCaption',\n                            style: eCell\n                        };\n                        this.parent.trigger(events.excelAggregateQueryCellInfo, args);\n                        cells.push(eCell);\n                    }\n                    else {\n                        if (customIndex === undefined) {\n                            eCell.index = index + indent + gObj.childGridLevel;\n                            eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n                            cells.push(eCell);\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(customIndex)) {\n                excelRows.push({ index: customIndex, cells: cells });\n            }\n            else {\n                var row_1 = {};\n                if (this.groupedColLength < 8 && this.groupedColLength > 0) {\n                    var dummyOutlineLevel = 'outlineLevel';\n                    var dummyGrouping = 'grouping';\n                    var level = excelRows[excelRows.length - 1][dummyGrouping][dummyOutlineLevel];\n                    var grouping = { outlineLevel: level, isCollapsed: true };\n                    row_1 = { index: this.rowLength++, cells: cells, grouping: grouping };\n                }\n                else {\n                    row_1 = { index: this.rowLength++, cells: cells };\n                }\n                if (!isEmpty) {\n                    excelRows.push(row_1);\n                }\n            }\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.aggregateStyle = function (col, style, field) {\n        var column = this.parent.getColumnByField(field);\n        if (typeof col.format === 'object') {\n            var format = col.format;\n            style.numberFormat = !isNullOrUndefined(format.format) ? format.format : format.skeleton;\n            if (!isNullOrUndefined(format.type)) {\n                style.type = format.type.toLowerCase();\n            }\n        }\n        else {\n            style.numberFormat = col.format;\n        }\n        if (!isNullOrUndefined(column) && isNullOrUndefined(style.type)) {\n            style.type = column.type.toLowerCase();\n        }\n    };\n    ExcelExport.prototype.getAggreateValue = function (cellType, template, cell, row) {\n        var templateFn = {};\n        templateFn[getEnumValue(CellType, cell.cellType)] = compile(template);\n        var txt;\n        var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n        if (this.parent.isReact || this.parent.isVue) {\n            txt = (templateFn[getEnumValue(CellType, cell.cellType)](data, this.parent));\n            if (this.parent.isReact) {\n                this.parent.renderTemplates();\n            }\n        }\n        else {\n            txt = (templateFn[getEnumValue(CellType, cell.cellType)](data));\n        }\n        return txt[0].textContent;\n    };\n    ExcelExport.prototype.mergeOptions = function (JSON1, JSON2) {\n        var result = {};\n        var attrname = Object.keys(JSON1);\n        for (var index = 0; index < attrname.length; index++) {\n            if (attrname[index] !== 'name') {\n                result[attrname[index]] = JSON1[attrname[index]];\n            }\n        }\n        attrname = Object.keys(JSON2);\n        for (var index = 0; index < attrname.length; index++) {\n            if (attrname[index] !== 'name') {\n                result[attrname[index]] = JSON2[attrname[index]];\n            }\n        }\n        return result;\n    };\n    ExcelExport.prototype.getColumnStyle = function (gObj, columnIndex) {\n        var index = 0;\n        for (var _i = 0, _a = this.styles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            if (style.name === gObj.element.id + 'column' + columnIndex) {\n                return index;\n            }\n            index++;\n        }\n        return undefined;\n    };\n    ExcelExport.prototype.processHeaderContent = function (gObj, headerRow, indent, excelRows) {\n        var rowIndex = 1;\n        var gridRows = headerRow.rows;\n        // Column collection with respect to the records in the grid\n        var gridColumns = headerRow.columns;\n        var spannedCells = [];\n        if (indent > 0) {\n            var index = 0;\n            while (index !== indent) {\n                this.columns.push({ index: index + 1, width: 30 });\n                index++;\n            }\n        }\n        for (var col = 0; col < gridColumns.length; col++) {\n            this.parseStyles(gObj, gridColumns[col], this.getRecordThemeStyle(this.theme), indent + col + 1);\n        }\n        var templateRowHeight;\n        for (var row = 0; row < gridRows.length; row++) {\n            var currentCellIndex = 1 + indent;\n            var cells = [];\n            for (var column = 0; column < gridRows[row].cells.length; column++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var style = {};\n                var cell = {};\n                var gridCell = gridRows[row].cells[column];\n                if (gridCell.cellType === CellType.HeaderIndent || gridCell.cellType === CellType.DetailHeader) {\n                    continue;\n                }\n                var result = { contains: true, index: 1 };\n                while (result.contains) {\n                    result = this.getIndex(spannedCells, rowIndex, currentCellIndex);\n                    currentCellIndex = result.index;\n                    if (!result.contains) {\n                        cell.index = result.index + gObj.childGridLevel;\n                        break;\n                    }\n                }\n                if (!isNullOrUndefined(gridCell.rowSpan) && gridCell.rowSpan !== 1) {\n                    cell.rowSpan = gridCell.rowSpan;\n                    for (var i = rowIndex; i < gridCell.rowSpan + rowIndex; i++) {\n                        var spannedCell = { rowIndex: 0, columnIndex: 0 };\n                        spannedCell.rowIndex = i;\n                        spannedCell.columnIndex = currentCellIndex;\n                        spannedCells.push(spannedCell);\n                    }\n                }\n                if (!isNullOrUndefined(gridCell.colSpan) && gridCell.colSpan !== 1) {\n                    cell.colSpan = gridCell.colSpan;\n                    currentCellIndex = currentCellIndex + cell.colSpan - 1;\n                }\n                cell.value = gridCell.column.headerText;\n                style = this.getHeaderThemeStyle(this.theme);\n                if (!isNullOrUndefined(gridCell.column.textAlign)) {\n                    style.hAlign = gridCell.column.textAlign.toLowerCase();\n                }\n                if (!isNullOrUndefined(gridCell.column.headerTextAlign)) {\n                    style.hAlign = gridCell.column.headerTextAlign.toLowerCase();\n                }\n                var excelHeaderCellArgs = { cell: cell, gridCell: gridCell, style: style };\n                gObj.trigger(events.excelHeaderQueryCellInfo, excelHeaderCellArgs);\n                if (!isNullOrUndefined(excelHeaderCellArgs.image) && !isNullOrUndefined(excelHeaderCellArgs.image.base64)) {\n                    templateRowHeight = this.setImage(excelHeaderCellArgs, currentCellIndex);\n                }\n                if (!isNullOrUndefined(excelHeaderCellArgs.hyperLink)) {\n                    excelHeaderCellArgs.cell.hyperlink = { target: excelHeaderCellArgs.hyperLink.target };\n                    cell.value = excelHeaderCellArgs.hyperLink.displayText || cell.value;\n                }\n                cell.style = excelHeaderCellArgs.style;\n                cells.push(cell);\n                currentCellIndex++;\n            }\n            var excelRow = { index: this.rowLength++, cells: cells };\n            if (!isNullOrUndefined(templateRowHeight)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                excelRow.height = templateRowHeight;\n            }\n            excelRows.push(excelRow);\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.getHeaderThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 12;\n        style.borders = { color: '#E0E0E0' };\n        style.bold = true;\n        if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.header)) {\n            style = this.updateThemeStyle(theme.header, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.updateThemeStyle = function (themestyle, style) {\n        return extend(style, themestyle);\n    };\n    ExcelExport.prototype.getCaptionThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 13;\n        style.backColor = '#F6F6F6';\n        if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.caption)) {\n            style = this.updateThemeStyle(theme.caption, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.getRecordThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 13;\n        style.borders = { color: '#E0E0E0' };\n        if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.record)) {\n            style = this.updateThemeStyle(theme.record, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.processExcelHeader = function (header) {\n        if (!isNullOrUndefined(header.rows) && (this.expType === 'NewSheet' || this.rowLength === 1)) {\n            var noRows = void 0;\n            if (header.headerRows === undefined) {\n                this.rowLength = header.rows.length;\n            }\n            else {\n                this.rowLength = header.headerRows;\n            }\n            if (this.rowLength < header.rows.length) {\n                noRows = this.rowLength;\n            }\n            else {\n                noRows = header.rows.length;\n            }\n            this.rowLength++;\n            for (var row = 0; row < noRows; row++) {\n                var json = header.rows[row];\n                //Row index\n                if (!(json.index !== null && !isNullOrUndefined(json.index))) {\n                    json.index = (row + 1);\n                }\n                this.updatedCellIndex(json);\n            }\n        }\n    };\n    ExcelExport.prototype.updatedCellIndex = function (json) {\n        var cellsLength = json.cells.length;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            var jsonCell = json.cells[cellId];\n            //cell index\n            if (!(jsonCell.index !== null && !isNullOrUndefined(jsonCell.index))) {\n                jsonCell.index = (cellId + 1);\n            }\n        }\n        this.rows.push(json);\n    };\n    ExcelExport.prototype.processExcelFooter = function (footer) {\n        if (!isNullOrUndefined(footer.rows)) {\n            var noRows = void 0;\n            if (footer.footerRows === undefined) {\n                this.rowLength += footer.rows.length;\n            }\n            else {\n                if (footer.footerRows > footer.rows.length) {\n                    this.rowLength += (footer.footerRows - footer.rows.length);\n                    noRows = footer.rows.length;\n                }\n                else {\n                    noRows = footer.footerRows;\n                }\n            }\n            for (var row = 0; row < noRows; row++) {\n                var json = footer.rows[row];\n                //Row index\n                if (json.index === null || json.index === undefined) {\n                    json.index = this.rowLength++;\n                }\n                else {\n                    json.index += this.rowLength;\n                }\n                this.updatedCellIndex(json);\n            }\n        }\n    };\n    ExcelExport.prototype.getIndex = function (spannedCells, rowIndex, columnIndex) {\n        for (var _i = 0, spannedCells_1 = spannedCells; _i < spannedCells_1.length; _i++) {\n            var spannedCell = spannedCells_1[_i];\n            if ((spannedCell.rowIndex === rowIndex) && (spannedCell.columnIndex === columnIndex)) {\n                columnIndex = columnIndex + 1;\n                return { contains: true, index: columnIndex };\n            }\n        }\n        return { contains: false, index: columnIndex };\n    };\n    ExcelExport.prototype.parseStyles = function (gObj, col, style, index) {\n        if (!isNullOrUndefined(col.format)) {\n            if (typeof col.format === 'object') {\n                var format = col.format;\n                style.numberFormat = !isNullOrUndefined(format.format) ? format.format : format.skeleton;\n                if (!isNullOrUndefined(format.type)) {\n                    style.type = format.type.toLowerCase();\n                }\n            }\n            else {\n                style.numberFormat = col.format;\n                style.type = col.type;\n            }\n        }\n        if (!isNullOrUndefined(col.textAlign)) {\n            style.hAlign = col.textAlign.toLowerCase();\n        }\n        if (Object.keys(style).length > 0) {\n            style.name = gObj.element.id + 'column' + index;\n            this.styles.push(style);\n        }\n        if (!isNullOrUndefined(col.width) && col.width !== 'auto') {\n            this.columns.push({ index: index + gObj.childGridLevel, width: typeof col.width === 'number' ?\n                    col.width : this.helper.getConvertedWidth(col.width) });\n        }\n    };\n    ExcelExport.prototype.destroy = function () {\n        //destroy for exporting\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}