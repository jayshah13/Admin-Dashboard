{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base'; // constant class definitions\n\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\n\nvar Panel =\n/** @class */\nfunction (_super) {\n  __extends(Panel, _super);\n\n  function Panel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], Panel.prototype, \"id\", void 0);\n\n  __decorate([Property('')], Panel.prototype, \"cssClass\", void 0);\n\n  __decorate([Property('')], Panel.prototype, \"header\", void 0);\n\n  __decorate([Property('')], Panel.prototype, \"content\", void 0);\n\n  __decorate([Property(true)], Panel.prototype, \"enabled\", void 0);\n\n  __decorate([Property(0)], Panel.prototype, \"row\", void 0);\n\n  __decorate([Property(0)], Panel.prototype, \"col\", void 0);\n\n  __decorate([Property(1)], Panel.prototype, \"sizeX\", void 0);\n\n  __decorate([Property(1)], Panel.prototype, \"sizeY\", void 0);\n\n  __decorate([Property(1)], Panel.prototype, \"minSizeY\", void 0);\n\n  __decorate([Property(1)], Panel.prototype, \"minSizeX\", void 0);\n\n  __decorate([Property(null)], Panel.prototype, \"maxSizeY\", void 0);\n\n  __decorate([Property(null)], Panel.prototype, \"maxSizeX\", void 0);\n\n  __decorate([Property(1000)], Panel.prototype, \"zIndex\", void 0);\n\n  return Panel;\n}(ChildProperty);\n\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\n\nvar DashboardLayout =\n/** @class */\nfunction (_super) {\n  __extends(DashboardLayout, _super);\n\n  function DashboardLayout(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.rows = 1;\n    _this.panelID = 0;\n    _this.movePanelCalled = false;\n    _this.resizeCalled = false;\n    _this.mOffX = 0;\n    _this.mOffY = 0;\n    _this.maxTop = 9999;\n    _this.maxRows = 100;\n    _this.mouseX = 0;\n    _this.mouseY = 0;\n    _this.minTop = 0;\n    _this.minLeft = 0;\n    _this.isInlineRendering = false;\n    _this.removeAllCalled = false; // to check whether removePanel is executed in mobile device\n\n    _this.isPanelRemoved = false; // to maintain sizeY in mobile device\n\n    _this.panelsSizeY = 0;\n    _this.resizeHeight = false;\n    setValue('mergePersistData', _this.mergePersistPanelData, _this);\n    return _this;\n  }\n  /**\n   * Initialize the event handler\n   *\n   * @private\n   */\n\n\n  DashboardLayout.prototype.preRender = function () {\n    this.panelCollection = [];\n    this.sortedArray = [];\n    this.gridPanelCollection = [];\n    this.overlapElement = [];\n    this.overlapElementClone = [];\n    this.overlapSubElementClone = [];\n    this.collisionChecker = {};\n    this.dragCollection = [];\n    this.elementRef = {\n      top: '',\n      left: '',\n      height: '',\n      width: ''\n    };\n    this.dimensions = [];\n    this.allItems = [];\n    this.oldRowCol = {};\n    this.availableClasses = [];\n    this.setOldRowCol();\n    this.calculateCellSize();\n    this.contentTemplateChild = [].slice.call(this.element.children);\n  };\n\n  DashboardLayout.prototype.setOldRowCol = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      if (!this.panels[i].id) {\n        this.panelPropertyChange(this.panels[i], {\n          id: 'layout_' + this.panelID.toString()\n        });\n        this.panelID = this.panelID + 1;\n      }\n\n      this.oldRowCol[this.panels[i].id] = {\n        row: this.panels[i].row,\n        col: this.panels[i].col\n      };\n    }\n  };\n\n  DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n    var ele = this.createElement('div');\n\n    if (cssClass && cssClass.length > 0) {\n      addClass([ele], cssClass);\n    }\n\n    if (idValue) {\n      ele.setAttribute('id', idValue);\n    }\n\n    return ele;\n  };\n  /**\n   * To Initialize the control rendering.\n   *\n   * @returns void\n   * @private\n   */\n\n\n  DashboardLayout.prototype.render = function () {\n    this.initialize();\n    this.isRenderComplete = true;\n\n    if (this.showGridLines && !this.checkMediaQuery()) {\n      this.initGridLines();\n    }\n\n    this.updateDragArea();\n    this.renderComplete();\n    this.renderReactTemplates();\n  };\n\n  DashboardLayout.prototype.initGridLines = function () {\n    this.table = document.createElement('table');\n    var tbody = document.createElement('tbody');\n    this.table.classList.add('e-dashboard-gridline-table');\n\n    for (var i = 0; i < this.maxRow(); i++) {\n      var tr = document.createElement('tr');\n\n      for (var j = 0; j < this.columns; j++) {\n        var td = document.createElement('td');\n        td.classList.add('e-dashboard-gridline');\n        this.setAttributes({\n          value: {\n            row: i.toString(),\n            col: j.toString(),\n            sizeX: '1',\n            sizeY: '1'\n          }\n        }, td);\n        td.setAttribute('id', '' + j);\n        this.setPanelPosition(td, i, j);\n        this.setHeightAndWidth(td, {\n          row: i,\n          col: j,\n          sizeX: 1,\n          sizeY: 1\n        });\n        tr.appendChild(td);\n      }\n\n      tbody.appendChild(tr);\n    }\n\n    this.table.appendChild(tbody);\n    this.element.appendChild(this.table);\n    this.renderReactTemplates();\n  };\n\n  DashboardLayout.prototype.initialize = function () {\n    this.updateRowHeight();\n\n    if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n      var panelElements = [];\n      this.setProperties({\n        panels: []\n      }, true);\n      this.isInlineRendering = true;\n\n      for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n        panelElements.push(this.element.querySelectorAll('.e-panel')[i]);\n      }\n\n      for (var i = 0; i < panelElements.length; i++) {\n        var panelElement = panelElements[i];\n\n        if (this.enableRtl) {\n          addClass([panelElement], 'e-rtl');\n        }\n\n        this.getInlinePanels(panelElement);\n        this.maxCol();\n        this.maxRow();\n      }\n\n      for (var i = 0; i < this.panels.length; i++) {\n        var panelElement = this.element.querySelector('#' + this.panels[i].id);\n        this.setMinMaxValues(this.panels[i]);\n\n        if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < this.panels[i].col + this.panels[i].sizeX) {\n          var colValue = this.maxColumnValue - this.panels[i].sizeX;\n          this.panelPropertyChange(this.panels[i], {\n            col: colValue < 0 ? 0 : colValue\n          });\n        }\n\n        this.setXYAttributes(panelElement, this.panels[i]);\n        var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n        this.panelCollection.push(panel_1);\n        this.setHeightAndWidth(panelElement, this.panels[i]);\n        this.tempObject = this;\n\n        if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n          this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n          this.mainElement = panelElement;\n          this.updatePanelLayout(panelElement, this.panels[i]);\n          this.mainElement = null;\n        }\n\n        this.setClasses([panelElement]);\n      }\n\n      this.updateOldRowColumn();\n\n      if (this.checkMediaQuery()) {\n        this.checkMediaQuerySizing();\n      }\n    } else {\n      this.renderDashBoardCells(this.panels);\n    }\n\n    if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n      this.enableDraggingContent(this.panelCollection);\n    }\n\n    this.sortedPanel();\n    this.bindEvents();\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkColumnValue = this.maxColumnValue;\n\n    if (!this.checkMediaQuery()) {\n      this.panelResponsiveUpdate();\n    }\n\n    this.setEnableRtl();\n  };\n\n  DashboardLayout.prototype.checkMediaQuery = function () {\n    return this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches;\n  };\n\n  DashboardLayout.prototype.calculateCellSize = function () {\n    this.cellSize = [];\n\n    if (this.checkMediaQuery()) {\n      this.cellSize[1] = this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio;\n    } else {\n      this.cellSize[0] = this.element.parentElement && this.element.parentElement.offsetWidth;\n      this.cellSize[0] = this.element.parentElement && (this.element.parentElement.offsetWidth - (this.maxCol() - 1) * this.cellSpacing[0]) / this.maxCol();\n      this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n    }\n  };\n\n  DashboardLayout.prototype.maxRow = function (recheck) {\n    var maxRow = 1;\n\n    if (this.rows > 1 && isNullOrUndefined(recheck)) {\n      maxRow = this.rows;\n      return maxRow;\n    }\n\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n        maxRow = this.panels[i].sizeY + this.panels[i].row;\n      }\n    }\n\n    if (this.panels.length === 0) {\n      maxRow = this.columns;\n    }\n\n    return maxRow;\n  };\n\n  DashboardLayout.prototype.maxCol = function () {\n    var maxCol = 1;\n    maxCol = this.columns;\n    this.maxColumnValue = maxCol;\n    return maxCol;\n  };\n\n  DashboardLayout.prototype.updateOldRowColumn = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      var id = this.panels[i].id;\n\n      if (document.getElementById(id)) {\n        var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n        var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n        this.oldRowCol[this.panels[i].id] = {\n          row: row,\n          col: col\n        };\n      } else {\n        continue;\n      }\n    }\n  };\n\n  DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n    var element = this.createElement('div');\n\n    if (className) {\n      addClass([element], [className]);\n    }\n\n    if (cssClass && cssClass.length > 0) {\n      addClass([element], cssClass);\n    }\n\n    if (idValue) {\n      element.setAttribute('id', idValue);\n    }\n\n    return element;\n  }; // eslint-disable-next-line\n\n\n  DashboardLayout.prototype.templateParser = function (template) {\n    if (template) {\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        }\n      } catch (error) {\n        var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n        return compile(this.enableHtmlSanitizer && typeof template === 'string' ? sanitizedValue : template);\n      }\n    }\n\n    return undefined;\n  };\n\n  DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n    // eslint-disable-next-line\n    var templateFn = this.templateParser(content);\n    var templateElements = [];\n\n    if ((content[0] === '.' || content[0] === '#') && document.querySelector(content).tagName !== 'SCRIPT') {\n      var eleVal = document.querySelector(content);\n\n      if (!isNullOrUndefined(eleVal)) {\n        if (eleVal.style.display === 'none') {\n          eleVal.style.removeProperty('display');\n        }\n\n        if (eleVal.getAttribute('style') === '') {\n          eleVal.removeAttribute('style');\n        }\n\n        appendElement.appendChild(eleVal);\n        return;\n      } else {\n        content = content.trim();\n      }\n    } else {\n      // eslint-disable-next-line\n      var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n\n      if (compilerFn) {\n        for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n          var item = compilerFn_1[_i];\n          templateElements.push(item);\n        }\n\n        append([].slice.call(templateElements), appendElement);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n    addClass([cellElement], [panel, panelTransition]);\n    var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n    this.panelContent = cellElement.querySelector('.e-panel-container') ? cellElement.querySelector('.e-panel-container') : this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n    cellElement.appendChild(this.panelContent);\n\n    if (!panelModel.enabled) {\n      this.disablePanel(cellElement);\n    }\n\n    if (panelModel.header) {\n      var headerTemplateElement = cellElement.querySelector('.e-panel-header') ? cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n      addClass([headerTemplateElement], [header]);\n\n      if (!cellElement.querySelector('.e-panel-header')) {\n        var id = this.element.id + 'HeaderTemplate' + panelId;\n        this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n        this.panelContent.appendChild(headerTemplateElement);\n        this.renderReactTemplates();\n      }\n    }\n\n    if (panelModel.content) {\n      var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n      this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') : this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n      var headerHeight = this.panelContent.querySelector('.e-panel-header') ? window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n      var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n      setStyle(this.panelBody, {\n        height: contentHeightValue\n      });\n\n      if (!cellElement.querySelector('.e-panel-content')) {\n        var id = this.element.id + 'ContentTemplate' + panelId;\n        this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n        this.panelContent.appendChild(this.panelBody);\n        this.renderReactTemplates();\n      }\n    }\n\n    return cellElement;\n  };\n\n  DashboardLayout.prototype.disablePanel = function (panelElement) {\n    addClass([panelElement], [disable]);\n  };\n\n  DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n    var model = {\n      sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n      sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n      minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n      minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n      maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n      maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n      row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n      col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n      id: panelElement.getAttribute('id'),\n      zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n      header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n      content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n    };\n\n    if (!model.id) {\n      model.id = 'layout_' + this.panelID.toString();\n      panelElement.setAttribute('id', model.id);\n      this.panelID = this.panelID + 1;\n    }\n\n    if (isUndefined(model.enabled)) {\n      model.enabled = true;\n    }\n\n    panelElement.style.zIndex = '' + model.zIndex; // eslint-disable-next-line\n\n    var panelProp = new Panel(this, 'panels', model, true);\n    this.panels.push(panelProp);\n  };\n\n  DashboardLayout.prototype.resizeEvents = function () {\n    if (this.allowResizing) {\n      var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n\n      for (var i = 0; i < panelElements.length; i++) {\n        var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n        EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n\n        if (Browser.info.name !== 'msie') {\n          EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n        }\n      }\n    }\n  };\n\n  DashboardLayout.prototype.bindEvents = function () {\n    this.refreshListener = this.refresh.bind(this); // eslint-disable-next-line\n\n    EventHandler.add(window, 'resize', this.refreshListener);\n    this.resizeEvents();\n  };\n\n  DashboardLayout.prototype.downResizeHandler = function (e) {\n    this.downHandler(e);\n    this.lastMouseX = e.pageX;\n    this.lastMouseY = e.pageY;\n    var moveEventName = Browser.info.name === 'msie' ? 'mousemove pointermove' : 'mousemove';\n    var upEventName = Browser.info.name === 'msie' ? 'mouseup pointerup' : 'mouseup';\n\n    if (!this.isMouseMoveBound) {\n      EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n      this.isMouseMoveBound = true;\n    }\n\n    if (!this.isMouseUpBound) {\n      EventHandler.add(document, upEventName, this.upResizeHandler, this);\n      this.isMouseUpBound = true;\n    }\n  };\n\n  DashboardLayout.prototype.downHandler = function (e) {\n    this.resizeCalled = false;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var el = closest(e.currentTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    this.trigger('resizeStart', args);\n    this.downTarget = e.currentTarget;\n    this.shadowEle = document.createElement('div');\n    this.shadowEle.classList.add('e-holder');\n    addClass([this.element], [preventSelect]);\n    this.element.appendChild(this.shadowEle);\n    this.renderReactTemplates();\n    this.elementX = parseFloat(el.style.left);\n    this.elementY = parseFloat(el.style.top);\n    this.elementWidth = el.offsetWidth;\n    this.elementHeight = el.offsetHeight;\n    this.originalWidth = this.getCellInstance(el.id).sizeX;\n    this.originalHeight = this.getCellInstance(el.id).sizeY;\n    this.previousRow = this.getCellInstance(el.id).row;\n  };\n\n  DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n    this.downHandler(e);\n    this.lastMouseX = e.changedTouches[0].pageX;\n    this.lastMouseY = e.changedTouches[0].pageY;\n\n    if (!this.isMouseMoveBound) {\n      EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n      this.isMouseMoveBound = true;\n    }\n\n    if (!this.isMouseUpBound) {\n      EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n      this.isMouseUpBound = true;\n    }\n  };\n\n  DashboardLayout.prototype.getCellSize = function () {\n    return [this.cellSize[0], this.cellSize[1]];\n  };\n\n  DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n    this.moveTarget = this.downTarget;\n    var el = closest(this.moveTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    this.trigger('resize', args);\n  };\n\n  DashboardLayout.prototype.updateResizeElement = function (el) {\n    this.maxLeft = this.element.offsetWidth - 1;\n    this.maxTop = this.cellSize[1] * this.maxRows - 1;\n    removeClass([el], 'e-panel-transition');\n    addClass([el], [dragging]);\n    var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n\n    for (var i = 0; i < this.moveTarget.classList.length; i++) {\n      if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n        this.handleClass = this.moveTarget.classList[i];\n      }\n    }\n  };\n\n  DashboardLayout.prototype.moveResizeHandler = function (e) {\n    this.updateMaxTopLeft(e);\n    var el = closest(this.moveTarget, '.e-panel');\n\n    if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n      return;\n    }\n\n    this.updateResizeElement(el);\n    var panelModel = this.getCellInstance(el.getAttribute('id'));\n    this.mouseX = e.pageX;\n    this.mouseY = e.pageY;\n    var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n    var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n    this.mOffX = this.mOffY = 0;\n    this.lastMouseY = this.mouseY;\n    this.lastMouseX = this.mouseX;\n    this.resizingPanel(el, panelModel, diffX, diffY);\n  };\n\n  DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n    this.updateMaxTopLeft(e);\n    var el = closest(this.moveTarget, '.e-panel');\n\n    if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n      return;\n    }\n\n    this.updateResizeElement(el);\n    var panelModel = this.getCellInstance(el.getAttribute('id'));\n    this.mouseX = e.changedTouches[0].pageX;\n    this.mouseY = e.changedTouches[0].pageY;\n    var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n    var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n    this.mOffX = this.mOffY = 0;\n    this.lastMouseX = this.mouseX;\n    this.lastMouseY = this.mouseY;\n    this.resizingPanel(el, panelModel, diffX, diffY);\n  };\n  /* istanbul ignore next */\n\n\n  DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n    var oldSizeX = this.getCellInstance(el.id).sizeX;\n    var oldSizeY = this.getCellInstance(el.id).sizeY;\n    var dY = currentY;\n    var dX = currentX;\n\n    if (this.handleClass.indexOf('north') >= 0) {\n      if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n        currentY = this.elementHeight - this.getMinHeight(panelModel);\n        this.mOffY = dY - currentY;\n      } else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n        currentY = this.elementHeight - this.getMaxHeight(panelModel);\n        this.mOffY = dY - currentY;\n      } else if (this.elementY + dY < this.minTop) {\n        currentY = this.minTop - this.elementY;\n        this.mOffY = dY - currentY;\n      }\n\n      this.elementY += currentY;\n      this.elementHeight -= currentY;\n    }\n\n    if (this.handleClass.indexOf('south') >= 0) {\n      if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n        currentY = this.getMinHeight(panelModel) - this.elementHeight;\n        this.mOffY = dY - currentY;\n      } else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n        currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n        this.mOffY = dY - currentY;\n      }\n\n      this.elementHeight += currentY;\n    }\n\n    if (this.handleClass.indexOf('west') >= 0) {\n      if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n        currentX = this.elementWidth - this.getMinWidth(panelModel);\n        this.mOffX = dX - currentX;\n      } else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n        currentX = this.elementWidth - this.getMaxWidth(panelModel);\n        this.mOffX = dX - currentX;\n      } else if (this.elementX + dX < this.minLeft) {\n        currentX = this.minLeft - this.elementX;\n        this.mOffX = dX - currentX;\n      }\n\n      this.elementX += currentX;\n      this.elementWidth -= currentX;\n    }\n\n    if (this.handleClass.indexOf('east') >= 0) {\n      if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n        currentX = this.getMinWidth(panelModel) - this.elementWidth;\n        this.mOffX = dX - currentX;\n      } else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n        currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n        this.mOffX = dX - currentX;\n      }\n\n      this.elementWidth += currentX;\n    }\n\n    el.style.top = this.elementY + 'px';\n    el.style.left = this.elementX + 'px';\n    el.style.width = this.elementWidth + 'px';\n    el.style.height = this.elementHeight + 'px';\n    var item = this.getResizeRowColumn(panelModel);\n\n    if (item.col + item.sizeX > this.columns) {\n      this.panelPropertyChange(item, {\n        sizeX: item.sizeX - 1\n      });\n    }\n\n    this.shadowEle.style.top = item.row * this.getCellSize()[1] + item.row * this.cellSpacing[1] + 'px';\n    this.shadowEle.style.left = item.col * this.getCellSize()[0] + item.col * this.cellSpacing[0] + 'px';\n    this.shadowEle.style.height = item.sizeY * (this.getCellSize()[1] + this.cellSpacing[1]) + 'px';\n    this.shadowEle.style.width = item.sizeX * (this.getCellSize()[0] + this.cellSpacing[0]) + 'px';\n\n    if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n      oldSizeX = item.sizeX;\n      oldSizeY = item.sizeY;\n      var model = this.getCellInstance(el.id);\n      var value = {\n        attributes: {\n          row: model.row.toString(),\n          col: model.col.toString(),\n          sizeX: model.sizeX.toString(),\n          sizeY: model.sizeY.toString()\n        }\n      };\n      this.setAttributes(value, el);\n      this.mainElement = el;\n      this.updatePanelLayout(el, this.getCellInstance(el.id));\n      this.updateOldRowColumn();\n      this.sortedPanel();\n    }\n  };\n\n  DashboardLayout.prototype.upResizeHandler = function (e) {\n    if (isNullOrUndefined(this.downTarget)) {\n      return;\n    }\n\n    this.upTarget = this.downTarget;\n    var el = closest(this.upTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n\n    if (el) {\n      addClass([el], 'e-panel-transition');\n      var moveEventName = Browser.info.name === 'msie' ? 'mousemove pointermove' : 'mousemove';\n      var upEventName = Browser.info.name === 'msie' ? 'mouseup pointerup' : 'mouseup';\n      EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n      EventHandler.remove(document, upEventName, this.upResizeHandler);\n\n      if (Browser.info.name !== 'msie') {\n        EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n        EventHandler.remove(document, 'touchend', this.upResizeHandler);\n      }\n\n      this.isMouseUpBound = false;\n      this.isMouseMoveBound = false;\n\n      if (this.shadowEle) {\n        detach(this.shadowEle);\n      }\n\n      this.shadowEle = null;\n      var panelModel = this.getCellInstance(el.getAttribute('id'));\n      this.setPanelPosition(el, panelModel.row, panelModel.col);\n      this.setHeightAndWidth(el, panelModel);\n    }\n\n    removeClass([el], [dragging]);\n    this.trigger('resizeStop', args);\n    this.resizeCalled = false;\n    this.lastMouseX = this.lastMouseY = undefined;\n    this.mOffX = this.mOffY = 0;\n    this.mainElement = null;\n\n    if (this.allowFloating) {\n      this.moveItemsUpwards();\n    }\n\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkForChanges(true);\n  };\n\n  DashboardLayout.prototype.getResizeRowColumn = function (item) {\n    var isChanged = false;\n    var col = item.col;\n\n    if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n      col = this.pixelsToColumns(this.elementX, false);\n    }\n\n    var row = item.row;\n\n    if (['e-north'].indexOf(this.handleClass) !== -1) {\n      row = this.pixelsToRows(this.elementY, false);\n\n      if (this.previousRow !== row) {\n        this.previousRow = row;\n        isChanged = true;\n      }\n    }\n\n    var sizeX = item.sizeX;\n\n    if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n      sizeX = this.pixelsToColumns(this.elementWidth - sizeX * this.cellSpacing[1], true);\n    }\n\n    var sizeY = item.sizeY;\n\n    if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n      if (this.handleClass === 'e-north' ? isChanged : true) {\n        sizeY = this.pixelsToRows(this.elementHeight - sizeY * this.cellSpacing[0], true);\n      }\n    }\n\n    if (item.col + item.sizeX > this.columns) {\n      item.sizeX = item.sizeX - 1;\n    }\n\n    var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n\n    if (canOccupy && this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0 || this.allowPushing !== false) {\n      this.panelPropertyChange(item, {\n        row: row,\n        col: col,\n        sizeX: sizeX,\n        sizeY: sizeY\n      });\n    }\n\n    return item;\n  };\n\n  DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n    var curColWidth = this.cellSize[0];\n\n    if (isCeil) {\n      return Math.ceil(pixels / curColWidth);\n    } else {\n      return Math.floor(pixels / curColWidth);\n    }\n  };\n\n  DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n    if (isCeil) {\n      return Math.round(pixels / this.cellSize[1]);\n    } else {\n      return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n    }\n  };\n\n  DashboardLayout.prototype.getMinWidth = function (item) {\n    return item.minSizeX * this.getCellSize()[0];\n  };\n\n  DashboardLayout.prototype.getMaxWidth = function (item) {\n    return item.maxSizeX * this.getCellSize()[0];\n  };\n\n  DashboardLayout.prototype.getMinHeight = function (item) {\n    return item.minSizeY * this.getCellSize()[1];\n  };\n\n  DashboardLayout.prototype.getMaxHeight = function (item) {\n    return item.maxSizeY * this.getCellSize()[1];\n  };\n\n  DashboardLayout.prototype.sortedPanel = function () {\n    this.sortedArray = [];\n\n    for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n      this.sortItem(this.panelCollection[i]);\n    }\n  };\n\n  DashboardLayout.prototype.moveItemsUpwards = function () {\n    if (this.allowFloating === false) {\n      return;\n    }\n\n    for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n      var columns = this.sortedArray[rowIndex];\n\n      if (!columns) {\n        continue;\n      }\n\n      for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n        var item = columns[colIndex];\n\n        if (item) {\n          this.moveItemUpwards(item);\n        }\n      }\n    }\n\n    this.updateGridLines();\n  };\n\n  DashboardLayout.prototype.moveItemUpwards = function (item) {\n    if (this.allowFloating === false || item === this.mainElement) {\n      return;\n    }\n\n    var colIndex = this.getCellInstance(item.id).col;\n    var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n    var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n    var availableRow = null;\n    var availableColumn = null;\n    var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n\n    while (rowIndex > -1) {\n      var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n\n      if (items.length !== 0) {\n        break;\n      }\n\n      availableRow = rowIndex;\n      availableColumn = colIndex;\n      --rowIndex;\n    }\n\n    if (availableRow !== null) {\n      this.sortItem(item, availableRow, availableColumn);\n    }\n  };\n\n  DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n    this.overlapElement = [];\n    var column = parseInt(item.getAttribute('data-col'), 10);\n    var row = parseInt(item.getAttribute('data-row'), 10);\n\n    if (!this.sortedArray[row]) {\n      this.sortedArray[row] = [];\n    }\n\n    this.sortedArray[row][column] = item;\n\n    if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n      if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null && typeof this.oldRowCol[item.id].col !== 'undefined') {\n        {\n          var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n\n          if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n            delete oldRow[this.oldRowCol[item.id].col];\n            this.updateOldRowColumn();\n            this.sortedPanel();\n          }\n        }\n      }\n\n      this.oldRowCol[item.id].row = rowValue;\n      this.oldRowCol[item.id].row = columnValue;\n\n      if (!this.sortedArray[row]) {\n        this.sortedArray[row] = [];\n      }\n\n      this.sortedArray[row][column] = item;\n\n      if (this.allItems.indexOf(item) === -1) {\n        this.allItems.push(item);\n      }\n\n      this.panelPropertyChange(this.getCellInstance(item.id), {\n        row: rowValue,\n        col: columnValue\n      });\n      var panelModel = this.getCellInstance(item.id);\n      this.setAttributes({\n        value: {\n          col: panelModel.col.toString(),\n          row: panelModel.row.toString()\n        }\n      }, item);\n      this.updateLayout(item, this.getCellInstance(item.id));\n    }\n  };\n\n  DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n    this.setPanelPosition(element, panelModel.row, panelModel.col);\n    this.setHeightAndWidth(element, panelModel);\n    this.updateRowHeight();\n    this.sortedPanel();\n  };\n\n  DashboardLayout.prototype.refresh = function () {\n    this.panelsSizeY = 0;\n    this.updateDragArea();\n\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n    } else {\n      if (this.element.classList.contains(responsive)) {\n        removeClass([this.element], [responsive]);\n        var internalPanels = this.element.querySelectorAll((this.element.id ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n\n        for (var i = 0; i < internalPanels.length; i++) {\n          var ele = internalPanels[i];\n          var cellInstance = this.getCellInstance(ele.id);\n          var row = parseInt(ele.getAttribute('data-row'), 10);\n          var col = parseInt(ele.getAttribute('data-col'), 10);\n          this.panelPropertyChange(cellInstance, {\n            row: row,\n            col: col\n          });\n          this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n          this.setPanelPosition(ele, row, col);\n          this.updateRowHeight();\n        }\n      }\n\n      this.panelResponsiveUpdate();\n      this.updateGridLines();\n    }\n\n    this.removeResizeClasses(this.panelCollection);\n    this.setClasses(this.panelCollection);\n    this.resizeEvents();\n    this.checkDragging(this.dragCollection);\n  };\n\n  DashboardLayout.prototype.updateGridLines = function () {\n    if (this.element.querySelector('.e-dashboard-gridline-table')) {\n      if (this.table) {\n        detach(this.table);\n      }\n\n      this.initGridLines();\n    }\n  };\n\n  DashboardLayout.prototype.checkDragging = function (dragCollection) {\n    if (this.checkMediaQuery() || !this.allowDragging) {\n      for (var i = 0; i < dragCollection.length; i++) {\n        dragCollection[i].destroy();\n      }\n    } else {\n      for (var i = 0; i < dragCollection.length; i++) {\n        dragCollection[i].destroy();\n      }\n\n      this.enableDraggingContent(this.panelCollection);\n    }\n  };\n\n  DashboardLayout.prototype.sortPanels = function () {\n    var model = [];\n\n    var _loop_1 = function (row) {\n      var _loop_2 = function (col) {\n        this_1.panels.filter(function (panel) {\n          if (panel.row === row && panel.col === col) {\n            model.push(panel);\n          }\n        });\n      };\n\n      for (var col = 0; col < this_1.columns; col++) {\n        _loop_2(col);\n      }\n    };\n\n    var this_1 = this;\n\n    for (var row = 0; row <= this.rows; row++) {\n      _loop_1(row);\n    }\n\n    return model;\n  };\n\n  DashboardLayout.prototype.checkMediaQuerySizing = function () {\n    addClass([this.element], [responsive]);\n    var updatedPanel;\n\n    if (this.isPanelRemoved && this.panels) {\n      updatedPanel = this.panels;\n    } else {\n      updatedPanel = this.sortPanels();\n    }\n\n    this.updatedRows = updatedPanel.length;\n\n    for (var i = 0; i < updatedPanel.length; i++) {\n      var panelElement = document.getElementById(updatedPanel[i].id); // eslint-disable-next-line\n\n      var updatedHeight = void 0;\n\n      if (panelElement) {\n        setStyle(panelElement, {\n          'width': '100%'\n        });\n        panelElement.style.height = ' ' + (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY + 'px';\n\n        if (updatedPanel[i].sizeY > 1) {\n          updatedHeight = (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY + // eslint-disable-next-line radix\n          parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n          panelElement.style.height = '' + updatedHeight + 'px';\n        }\n\n        this.resizeHeight = true;\n        this.panelPropertyChange(updatedPanel[i], {\n          row: i,\n          col: 0\n        });\n        this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n        this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n        this.removeResizeClasses(this.panelCollection);\n      }\n    }\n\n    this.updateRowHeight();\n  };\n\n  DashboardLayout.prototype.panelResponsiveUpdate = function () {\n    this.element.classList.add('e-responsive');\n    this.calculateCellSize();\n\n    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n      var ele = this.element.querySelectorAll('.e-panel')[i];\n      var panelModel = this.getCellInstance(ele.id);\n      this.setHeightAndWidth(ele, panelModel);\n    }\n\n    for (var i = 0; i < this.panels.length; i++) {\n      this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n    }\n\n    this.updateRowHeight();\n  };\n\n  DashboardLayout.prototype.updateRowHeight = function () {\n    this.getRowColumn();\n    this.setHeightWidth();\n  };\n\n  DashboardLayout.prototype.setHeightWidth = function () {\n    var heightValue;\n    var widthValue;\n\n    if (this.checkMediaQuery()) {\n      heightValue = this.maxRow() * (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1] + 'px';\n    } else {\n      heightValue = this.maxRow() * (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1] + 'px';\n    }\n\n    setStyle(this.element, {\n      'height': heightValue\n    }); // eslint-disable-next-line prefer-const\n\n    widthValue = window.getComputedStyle(this.element).width;\n    setStyle(this.element, {\n      'width': widthValue\n    });\n  };\n\n  DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n    setStyle(panelElement, {\n      'height': formatUnit(this.setXYDimensions(panelModel)[0])\n    });\n    setStyle(panelElement, {\n      'width': formatUnit(this.setXYDimensions(panelModel)[1])\n    });\n  };\n\n  DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n    var cellElement;\n    this.dimensions = this.setXYDimensions(panel);\n\n    if (isUndefined(panel.enabled)) {\n      panel.enabled = true;\n    }\n\n    if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n      cellElement = this.contentTemplateChild[index];\n\n      if (panel.cssClass) {\n        addClass([cellElement], [panel.cssClass]);\n      }\n\n      if (panel.id) {\n        cellElement.setAttribute('id', panel.id);\n      }\n    } else {\n      cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n    }\n\n    cellElement.style.zIndex = '' + panel.zIndex;\n    this.element.appendChild(cellElement);\n    this.renderReactTemplates();\n    var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n    this.panelCollection.push(dashBoardCell);\n    this.setXYAttributes(cellElement, panel);\n    this.setHeightAndWidth(cellElement, panel);\n    return cellElement;\n  };\n\n  DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n    if (!cellElement) {\n      return;\n    }\n\n    if (this.checkMediaQuery()) {\n      this.calculateCellSize();\n    }\n\n    var heightValue = this.getCellSize()[1];\n    var widthValue = this.getCellSize()[0];\n    var left = col === 0 ? 0 : col * (widthValue + this.cellSpacing[0]);\n    var top = row === 0 ? 0 : row * (heightValue + this.cellSpacing[1]);\n\n    if (this.checkMediaQuery()) {\n      top = row === 0 ? 0 : this.panelsSizeY * (heightValue + this.cellSpacing[1]);\n    }\n\n    setStyle(cellElement, {\n      'left': left + 'px',\n      'top': top + 'px'\n    });\n  };\n\n  DashboardLayout.prototype.getRowColumn = function () {\n    this.rows = null;\n\n    if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n      var panelElements = this.element.querySelectorAll('.e-panel');\n\n      for (var i = 0; i < panelElements.length; i++) {\n        var panelElement = panelElements[i];\n        var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n        var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n        this.rows = Math.max(this.rows, rowValue + xValue);\n      }\n    } else {\n      if (this.updatedRows) {\n        this.rows = this.updatedRows;\n        this.updatedRows = null;\n      }\n\n      for (var i = 0; i < this.panels.length; i++) {\n        this.rows = Math.max(this.rows, this.panels[i].row);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.setMinMaxValues = function (panel) {\n    if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.minSizeX\n      });\n    } else if (panel.maxSizeX && panel.sizeX > panel.maxSizeX) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.maxSizeX\n      });\n    } else if (panel.sizeX > this.columns) {\n      this.panelPropertyChange(panel, {\n        sizeX: this.columns\n      });\n    } else {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.sizeX\n      });\n    }\n\n    if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.minSizeY\n      });\n    } else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.maxSizeY\n      });\n    } else {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.sizeY\n      });\n    }\n  };\n\n  DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n    if (panel.col + panel.sizeX > this.columns) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX))\n      });\n    }\n  };\n\n  DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n    // eslint-disable-next-line\n    panel.setProperties(value, true);\n  };\n\n  DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n    if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n      for (var j = 0; j < cells.length; j++) {\n        this.gridPanelCollection.push(cells[j]);\n        this.setMinMaxValues(cells[j]);\n\n        if (this.maxColumnValue < cells[j].col || this.maxColumnValue < cells[j].col + cells[j].sizeX) {\n          this.panelPropertyChange(cells[j], {\n            col: this.maxColumnValue - cells[j].sizeX\n          });\n        }\n\n        var cell = this.renderCell(cells[j], false, j);\n\n        if (this.enableRtl) {\n          addClass([cell], 'e-rtl');\n        }\n\n        this.element.appendChild(cell);\n        this.renderReactTemplates();\n\n        if (this.checkMediaQuery() && j === cells.length - 1) {\n          this.checkMediaQuerySizing();\n        } else {\n          this.setPanelPosition(cell, cells[j].row, cells[j].col);\n          this.mainElement = cell;\n          this.updatePanelLayout(cell, cells[j]);\n          this.mainElement = null;\n        }\n      }\n    }\n\n    this.setClasses(this.panelCollection);\n  };\n\n  DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n    var items = [];\n\n    if (!sizeX || !sizeY) {\n      sizeX = sizeY = 1;\n    }\n\n    if (ignore && !(ignore instanceof Array)) {\n      ignore = [ignore];\n    }\n\n    var item;\n\n    for (var h = 0; h < sizeY; ++h) {\n      for (var w = 0; w < sizeX; ++w) {\n        item = this.getPanel(row + h, col + w, ignore);\n\n        if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) && items.indexOf(document.getElementById(item.id)) === -1) {\n          items.push(document.getElementById(item.id));\n        }\n      }\n    }\n\n    return items;\n  };\n\n  DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n    var _this = this;\n\n    var columns = [];\n    var spacedColumns = [];\n    rowElements.forEach(function (element) {\n      var columnValue = parseInt(element.getAttribute('data-col'), 10);\n      var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n\n      if (col < _this.columns && columnValue >= col) {\n        if (sizeXValue > 1) {\n          for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n            columns.push(i);\n          }\n        } else {\n          columns.push(columnValue);\n        }\n      }\n    });\n\n    if (columns.length > 0) {\n      for (var i = col + 1; i <= this.columns - 1; i++) {\n        if (columns.indexOf(i) === -1 && i !== col) {\n          if (spacedColumns.indexOf(i) === -1) {\n            spacedColumns.push(i);\n          }\n        }\n      }\n    }\n\n    var occupiedValues = this.getOccupiedColumns(ele);\n    occupiedValues.forEach(function (colValue) {\n      if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n        spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n      }\n    });\n    var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n    eleOccupiedValues.forEach(function (col) {\n      if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 && spacedColumns.indexOf(col) === -1) {\n        spacedColumns.push(col);\n      }\n    });\n    spacedColumns = spacedColumns.sort(function (next, previous) {\n      return next - previous;\n    });\n    return spacedColumns;\n  };\n\n  DashboardLayout.prototype.getOccupiedColumns = function (element) {\n    var occupiedItems = [];\n    var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n    var col = parseInt(element.getAttribute('data-col'), 10);\n\n    for (var i = col; i < col + sizeX && i <= this.columns; i++) {\n      occupiedItems.push(i);\n    }\n\n    return occupiedItems;\n  };\n\n  DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n    var _this = this;\n\n    var spacedColumns = [];\n    var columns = [];\n    rowElements.forEach(function (element) {\n      var colValue = parseInt(element.getAttribute('data-col'), 10);\n      var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n\n      if (col <= _this.columns && colValue <= col) {\n        if (xValue > 1) {\n          for (var i = colValue; i < colValue + xValue; i++) {\n            columns.push(i);\n          }\n        } else {\n          columns.push(colValue);\n        }\n      }\n    });\n\n    if (columns.length > 0) {\n      for (var j = 0; j <= col; j++) {\n        if (columns.indexOf(j) === -1 && j !== col) {\n          if (spacedColumns.indexOf(j) === -1) {\n            spacedColumns.push(j);\n          }\n        }\n      }\n    }\n\n    var occupiedValues = this.getOccupiedColumns(ele);\n    occupiedValues.forEach(function (colValue) {\n      if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n        spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n      }\n    });\n    var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n    eleOccupiedValues.forEach(function (col) {\n      if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 && spacedColumns.indexOf(col) === -1) {\n        spacedColumns.push(col);\n      }\n    });\n    spacedColumns = spacedColumns.sort(function (next, prev) {\n      return next - prev;\n    });\n    spacedColumns = spacedColumns.reverse();\n    return spacedColumns;\n  };\n\n  DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n    this.leftAdjustable = undefined;\n    this.rightAdjustable = undefined;\n    var isAdjustable = false;\n    var rightSpacing;\n    var rowElement = [];\n    this.topAdjustable = undefined;\n    var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n    var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n    rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n\n    if (rowElement.indexOf(ele) === -1) {\n      rowElement.push(ele);\n    }\n\n    var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n\n    if (leftSpacing.length > 0) {\n      this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n\n      if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n        this.leftAdjustable = false;\n      }\n\n      if (this.leftAdjustable) {\n        this.rightAdjustable = false;\n      } else {\n        this.leftAdjustable = false;\n        rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n        this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n\n        if (this.spacedColumnValue !== eleSizeX + eleCol) {\n          this.rightAdjustable = false;\n        }\n\n        if (!this.rightAdjustable) {\n          this.rightAdjustable = false;\n        }\n      }\n    } else {\n      rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n      this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n\n      if (this.spacedColumnValue !== eleSizeX + eleCol) {\n        this.rightAdjustable = false;\n      }\n\n      if (this.rightAdjustable) {\n        this.leftAdjustable = false;\n      }\n    }\n\n    if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n      var endRow = this.getCellInstance(ele.id).row;\n      var topCheck = false;\n\n      if (this.startRow !== endRow) {\n        topCheck = true;\n      }\n\n      for (var rowValue = row; rowValue >= 0; rowValue--) {\n        var element = this.getCellInstance(ele.id).sizeY > 1 && topCheck ? this.checkingElement : ele;\n\n        if (rowValue !== endRow && rowValue === endRow - sizeY && this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n          topCheck = false;\n          this.topAdjustable = true;\n          this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n          this.spacedColumnValue = col;\n        }\n      }\n    }\n\n    if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n      isAdjustable = true;\n\n      if (isNullOrUndefined(this.spacedRowValue)) {\n        this.spacedRowValue = row;\n      }\n    }\n\n    return isAdjustable;\n  };\n\n  DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n    var isSpaceAvailable = false;\n    var subSpacingColumns = [];\n\n    for (var i = 0; i < spacing.length; i++) {\n      if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n        subSpacingColumns.push(spacing[i]);\n\n        if (sizeX === 2) {\n          subSpacingColumns.push(spacing[i + 1]);\n        }\n\n        if (i === spacing.length - 2) {\n          subSpacingColumns.push(spacing[i + 1]);\n\n          if (subSpacingColumns.length > sizeX) {\n            subSpacingColumns.splice(-1);\n          }\n        }\n\n        if (subSpacingColumns.length === sizeX) {\n          isSpaceAvailable = true;\n          this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) {\n            return next - previous;\n          })[0];\n\n          if (this.spacedColumnValue < 0) {\n            this.spacedColumnValue = 1;\n          }\n\n          return isSpaceAvailable;\n        }\n      } else {\n        subSpacingColumns = [];\n        continue;\n      }\n    }\n\n    return isSpaceAvailable;\n  };\n\n  DashboardLayout.prototype.getRowElements = function (base) {\n    var rowElements = [];\n\n    for (var i = 0; i < base.length; i++) {\n      rowElements.push(base[i]);\n    }\n\n    return rowElements;\n  };\n\n  DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n    var isLeftAdjudtable;\n\n    if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n      this.spacedColumnValue = spaces[0];\n      isLeftAdjudtable = true;\n    } else if (sizeX > 1 && sizeY === 1) {\n      isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n    } else if (sizeY > 1) {\n      if (sizeX === 1) {\n        var xAdjust = void 0;\n\n        if (spaces.length >= 1) {\n          xAdjust = true;\n        }\n\n        if (xAdjust) {\n          for (var i = 0; i < spaces.length; i++) {\n            var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n\n            if (collisionValue.length === 0) {\n              this.spacedColumnValue = spaces[i];\n              isLeftAdjudtable = true;\n              return isLeftAdjudtable;\n            } else {\n              isLeftAdjudtable = false;\n            }\n          }\n        }\n      } else {\n        isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n      }\n    }\n\n    return isLeftAdjudtable;\n  };\n\n  DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n    var isRightAdjudtable;\n\n    if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n      this.spacedColumnValue = spacing[0];\n      isRightAdjudtable = true;\n    } else if (sizeX > 1 && sizeY === 1) {\n      isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n    } else if (sizeY > 1) {\n      if (sizeX === 1) {\n        var xAdjust = void 0;\n\n        if (spacing.length >= 1) {\n          xAdjust = true;\n        }\n\n        if (xAdjust) {\n          for (var i = 0; i < spacing.length; i++) {\n            var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n\n            for (var collision = 0; collision < collisionValue.length; collision++) {\n              if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n              }\n            }\n\n            if (collisionValue.length === 0) {\n              isRightAdjudtable = true;\n              this.spacedColumnValue = spacing[i];\n              return isRightAdjudtable;\n            } else {\n              isRightAdjudtable = false;\n            }\n          }\n        }\n      } else {\n        isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n      }\n    }\n\n    return isRightAdjudtable;\n  };\n\n  DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n    var isRightAdjudtable;\n    var updatedCollision = [];\n\n    for (var j = 0; j < spacing.length; j++) {\n      var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n\n      if (xAdjust) {\n        var exclusions = [];\n        exclusions.push(this.checkingElement);\n        exclusions.push(ele);\n\n        if (updatedCollision.length === 0) {\n          isRightAdjudtable = true; // eslint-disable-next-line no-self-assign\n\n          this.spacedColumnValue = this.spacedColumnValue;\n          return isRightAdjudtable;\n        } else {\n          isRightAdjudtable = false;\n        }\n      }\n    }\n\n    return isRightAdjudtable;\n  };\n\n  DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n    var updatedCollision = [];\n    var rowElements;\n\n    var _loop_3 = function (row) {\n      rowElements = [];\n      collisionItems.forEach(function (element) {\n        if (element && element.getAttribute('data-row') === row.toString()) {\n          rowElements.push(element);\n        }\n      });\n\n      var _loop_4 = function (column) {\n        rowElements.forEach(function (item) {\n          if (item && item.getAttribute('data-col') === column.toString()) {\n            updatedCollision.push(item);\n          }\n        });\n      };\n\n      for (var column = this_2.columns - 1; column >= 0; column--) {\n        _loop_4(column);\n      }\n    };\n\n    var this_2 = this;\n\n    for (var row = this.rows - 1; row >= 0; row--) {\n      _loop_3(row);\n    }\n\n    return updatedCollision;\n  };\n\n  DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n    var _this = this;\n\n    var removeableElement = [];\n\n    if (!this.mainElement) {\n      this.sortedPanel();\n    }\n\n    collisionItems.forEach(function (element) {\n      _this.checkingElement = element;\n\n      var model = _this.getCellInstance(element.id);\n\n      var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n\n      if (model.sizeX > 1 && adjust) {\n        for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n          var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n\n          collisions.forEach(function (item) {\n            if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n              removeableElement.push(item);\n            }\n          });\n        }\n      }\n    });\n    removeableElement.forEach(function (item) {\n      if (removeableElement.indexOf(item) >= 0) {\n        collisionItems.splice(collisionItems.indexOf(item), 1);\n      }\n    });\n    return collisionItems;\n  };\n\n  DashboardLayout.prototype.resetLayout = function (model) {\n    var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n\n    if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n      return collisions;\n    }\n\n    if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n      for (var i = 0; i < this.panels.length; i++) {\n        var element = document.getElementById(this.panels[i].id);\n\n        if (element === this.mainElement) {\n          continue;\n        }\n\n        var rowValue = this.cloneObject[element.id].row;\n        var colValue = this.cloneObject[element.id].col;\n        this.setPanelPosition(element, rowValue, colValue);\n        this.panelPropertyChange(this.getCellInstance(element.id), {\n          row: rowValue,\n          col: colValue\n        });\n        this.setAttributes({\n          value: {\n            col: colValue.toString(),\n            row: rowValue.toString()\n          }\n        }, element);\n        this.updateOldRowColumn();\n      }\n    }\n\n    this.sortedArray = this.cloneArray;\n    collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n    this.sortedPanel();\n    this.updateOldRowColumn();\n\n    if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 && this.cloneObject[this.checkCollision[0].id].row === model.row) {\n      collisions.push(this.checkCollision[0]);\n    }\n\n    return collisions;\n  };\n\n  DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n    var available = true;\n    var eleModel = this.getCellInstance(element.id);\n\n    for (var count = 0; count < collisions.length; count++) {\n      var collideModel = this.getCellInstance(collisions[count].id);\n\n      for (var i = 1; i < eleModel.sizeY; i++) {\n        var excludeEle = [];\n        excludeEle.push(element);\n        excludeEle.push(collisions[count]);\n        var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n\n        if (collision.length > 0) {\n          available = false;\n          return false;\n        } else {\n          continue;\n        }\n      }\n    }\n\n    return available;\n  };\n\n  DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n    if (!this.mainElement || collisions.length === 0) {\n      return false;\n    }\n\n    var direction;\n    var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n\n    if (this.startRow < eleSwapRow) {\n      direction = 1;\n    } else if (this.startRow > eleSwapRow) {\n      direction = 0;\n    }\n\n    if (!this.swapAvailability(collisions, element)) {\n      return false;\n    }\n\n    var isSwappable = false;\n\n    for (var count1 = 0; count1 < collisions.length; count1++) {\n      if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n        return false;\n      }\n    }\n\n    var updatedRow = direction === 0 ? this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY : this.startRow;\n\n    for (var count = 0; count < collisions.length; count++) {\n      var collideInstance = this.getCellInstance(collisions[count].id);\n      var elementinstance = this.getCellInstance(element.id);\n      var ignore = [];\n\n      if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n        ignore.push(collisions[count]);\n      } else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n        if (direction === 1 && elementinstance.row === this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1) {\n          ignore.push(collisions[count]);\n        } else if (direction === 0 && elementinstance.row === this.cloneObject[collideInstance.id].row) {\n          ignore.push(collisions[count]);\n        } else {\n          return false;\n        }\n      }\n\n      if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n        ignore.push(collisions[count]);\n      }\n\n      ignore.push(this.mainElement);\n      var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n\n      if (swapCollision.length > 0) {\n        isSwappable = false;\n        return isSwappable;\n      } else {\n        if (count === collisions.length - 1) {\n          isSwappable = true;\n        }\n\n        continue;\n      }\n    }\n\n    return isSwappable;\n  };\n\n  DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n    var _this = this;\n\n    var direction;\n    var swappedElements = [];\n    swappedElements.push(element);\n    var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n\n    if (this.startRow < eleSwapRow) {\n      direction = 1;\n    } else if (this.startRow > eleSwapRow) {\n      direction = 0;\n    }\n\n    var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n\n    if (!this.movePanelCalled) {\n      var collisionInstance = this.getCellInstance(collisions[0].id);\n      this.panelPropertyChange(panelModel, {\n        row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY\n      });\n    }\n\n    for (var count = 0; count < collisions.length; count++) {\n      swappedElements.push(collisions[count]);\n      this.setPanelPosition(collisions[count], collisionItemsRow, this.getCellInstance(collisions[count].id).col);\n      this.panelPropertyChange(this.getCellInstance(collisions[count].id), {\n        row: collisionItemsRow\n      });\n      collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n    }\n\n    element.setAttribute('data-row', panelModel.row.toString());\n    this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n\n    for (var i = 0; i < this.panels.length; i++) {\n      this.oldRowCol[this.panels[i].id] = {\n        row: this.panels[i].row,\n        col: this.panels[i].col\n      };\n    }\n\n    this.startRow = panelModel.row;\n    this.updateOldRowColumn();\n    swappedElements.forEach(function (item) {\n      _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n\n      var itemModel = _this.getCellInstance(item.id);\n\n      for (var i = 0; i < _this.sortedArray.length; i++) {\n        if (!_this.sortedArray[i]) {\n          continue;\n        }\n\n        for (var j = 0; j < _this.sortedArray[i].length; j++) {\n          if (_this.sortedArray[i][j] === item) {\n            _this.sortedArray[i][j] = undefined;\n          }\n        }\n      }\n\n      if (!_this.sortedArray[itemModel.row]) {\n        _this.sortedArray[itemModel.row] = [];\n      }\n\n      _this.sortedArray[itemModel.row][itemModel.col] = item;\n      _this.cloneArray = _this.sortedArray;\n    });\n  };\n\n  DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n    this.collisionChecker = {};\n    var initialModel = [];\n    var checkForAdjustment;\n    var collisionModels = [];\n    var swappingAvailable;\n\n    if (this.mainElement && this.isRenderComplete) {\n      initialModel = this.resetLayout(panelModel);\n    } else {\n      initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n    }\n\n    if (initialModel.length > 0) {\n      initialModel = this.sortCollisionItems(initialModel);\n      initialModel = this.updatedModels(initialModel, panelModel, element);\n      swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n\n      if (swappingAvailable) {\n        this.swapItems(initialModel, element, panelModel);\n      } else {\n        for (var i = 0; i < initialModel.length; i++) {\n          var model = this.getCellInstance(initialModel[i].id);\n          this.checkingElement = initialModel[i];\n          this.spacedRowValue = null;\n          this.spacedColumnValue = null;\n          checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n\n          if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n            this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n            this.oldRowCol[initialModel[i].id] = {\n              row: this.spacedRowValue,\n              col: this.spacedColumnValue\n            };\n            var value = {\n              attributes: {\n                row: this.spacedRowValue.toString(),\n                col: this.spacedColumnValue.toString()\n              }\n            };\n            this.setAttributes(value, initialModel[i]);\n            this.panelPropertyChange(model, {\n              col: this.spacedColumnValue,\n              row: this.spacedRowValue\n            }); // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n\n            if (this.topAdjustable && this.allowFloating) {\n              this.updatePanels();\n              this.updateCloneArrayObject();\n            }\n\n            this.spacedRowValue = null;\n\n            if (i < initialModel.length) {\n              continue;\n            }\n          } else {\n            collisionModels.push(initialModel[i]);\n          }\n        }\n      }\n    }\n\n    if (collisionModels.length > 0) {\n      // eslint-disable-next-line\n      var proxy_1 = this;\n      collisionModels.forEach(function (item1) {\n        if (proxy_1.overlapElement.indexOf(item1) === -1) {\n          proxy_1.overlapElement.push(item1);\n        }\n      });\n\n      if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n        this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n      }\n\n      if (collisionModels.length > 0) {\n        this.updateRowColumn(panelModel.row, this.overlapElement, element);\n        this.checkForCompletePushing();\n      }\n    }\n\n    if (!this.isSubValue) {\n      this.sortedPanel();\n    }\n\n    this.updateRowHeight();\n    this.updateGridLines();\n  };\n\n  DashboardLayout.prototype.checkForCompletePushing = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n        this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n        var key = this.panels[i].id;\n        this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.updateCollisionChecked = function (item) {\n    for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n      this.collisionChecker[item.id] = null;\n    }\n  };\n\n  DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n    if (!srcEle) {\n      return;\n    }\n\n    var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n    var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n    this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n\n    for (var i = 0; i < this.overlapElementClone.length; i++) {\n      if (this.overlapElementClone.length === 0) {\n        return;\n      }\n\n      for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n        this.collisionChecker[this.overlapElementClone[i_1].id] = {\n          ele: this.overlapElementClone[i_1],\n          row: row,\n          srcEle: srcEle\n        };\n      }\n\n      var updatedRow = eleRow + eleSizeY;\n      var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n      var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n      var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n      var colValue = void 0;\n      var collisionModels = void 0;\n\n      if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n        this.overlapSubElementClone.push(srcEle);\n      }\n\n      if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n        this.overlapSubElementClone.push(this.overlapElementClone[i]);\n      }\n\n      if (collisionY > 1 || collisionX > 1) {\n        var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n        colValue = overlapElementModel.col;\n        var ele_1 = document.getElementById(overlapElementModel.id);\n\n        for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n          this.isSubValue = true;\n          this.panelPropertyChange(overlapElementModel, {\n            row: overlapElementModel.row + 1\n          });\n          ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n          this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n          this.updateCollisionChecked(ele_1);\n          this.oldRowCol[ele_1.id] = {\n            row: overlapElementModel.row,\n            col: colValue\n          };\n          var panelModel = this.getCellInstance(ele_1.id);\n          this.panelPropertyChange(panelModel, {\n            col: colValue,\n            row: overlapElementModel.row\n          });\n          var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n          var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n          var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n          var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n          var excludeElements = [];\n          excludeElements.push(ele_1);\n          excludeElements.push(srcEle);\n          collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n\n          if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n            collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n          }\n\n          this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n        }\n\n        this.isSubValue = false;\n      } else {\n        if (this.addPanelCalled) {\n          this.addPanelCalled = false;\n        }\n\n        this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n        var excludeEle = [];\n        excludeEle.push(this.overlapElementClone[i]);\n        excludeEle.push(srcEle);\n        collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n\n        if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n          collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n        }\n\n        colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n        this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n        this.updateCollisionChecked(this.overlapElementClone[i]);\n        this.oldRowCol[this.overlapElementClone[i].id] = {\n          row: updatedRow,\n          col: colValue\n        };\n        var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n        this.panelPropertyChange(panelModel, {\n          col: colValue,\n          row: updatedRow\n        });\n        this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n    var panelModel = this.getCellInstance(clone.id);\n    this.panelPropertyChange(panelModel, {\n      row: updatedRow,\n      col: colValue\n    });\n\n    if (collisionModels.length > 0) {\n      // eslint-disable-next-line\n      var proxy_2 = this;\n      this.overlapElement = [];\n      this.shouldRestrict = true;\n      collisionModels.forEach(function (item1) {\n        proxy_2.overlapElement.push(item1);\n      });\n      var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n\n      for (var m = 0; m < this.overlapElement.length; m++) {\n        this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n      }\n\n      this.shouldRestrict = false;\n    } else {\n      if (!this.addPanelCalled) {\n        this.sortedPanel();\n      }\n\n      if (this.overlapSubElementClone.length > 0) {\n        var _loop_5 = function (p) {\n          var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n          var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n          var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n          var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n          var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n\n          if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n            collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n          } // eslint-disable-next-line\n\n\n          var proxy = this_3;\n          collisionModels1.forEach(function (item1) {\n            proxy.overlapElement.push(item1);\n          });\n\n          if (collisionModels1.length > 0) {\n            this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n          }\n        };\n\n        var this_3 = this;\n\n        for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n          _loop_5(p);\n        }\n      }\n\n      this.overlapSubElementClone = [];\n    }\n  };\n\n  DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n    for (var i = 0; i < panelElements.length; i++) {\n      var element = panelElements[i];\n      var resizerElements = element.querySelectorAll('.e-resize');\n\n      for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n        detach(resizerElements[i_2]);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.ensureDrag = function () {\n    this.checkDragging(this.dragCollection);\n    var dragPanels = this.element.querySelectorAll('.' + drag);\n    removeClass(dragPanels, [drag]);\n    this.setClasses(this.panelCollection);\n  };\n\n  DashboardLayout.prototype.setClasses = function (panelCollection) {\n    for (var i = 0; i < panelCollection.length; i++) {\n      var element = panelCollection[i];\n      var containerEle = panelCollection[i].querySelector('.e-panel-container');\n\n      if (this.allowDragging) {\n        if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n          addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n        } else {\n          addClass([element], [drag]);\n        }\n      }\n\n      if (this.allowResizing && this.mediaQuery ? !this.checkMediaQuery() : false) {\n        this.setResizingClass(element, containerEle);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.setResizingClass = function (ele, container) {\n    this.availableClasses = this.resizableHandles;\n\n    if (!ele.querySelector(\".e-resize\")) {\n      for (var j = 0; j < this.availableClasses.length; j++) {\n        var spanEle = this.createElement('span');\n        var addClassValue = void 0;\n        container.appendChild(spanEle);\n\n        if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' || this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n          addClassValue = single;\n        } else {\n          addClassValue = double;\n        }\n\n        addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n      }\n    }\n  };\n\n  DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n    var value = {\n      value: {\n        sizeX: panelModel.sizeX.toString(),\n        sizeY: panelModel.sizeY.toString(),\n        minSizeX: panelModel.minSizeX.toString(),\n        minSizeY: panelModel.minSizeY.toString(),\n        maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n        maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n        row: panelModel.row.toString(),\n        col: panelModel.col.toString()\n      }\n    };\n    this.setAttributes(value, element);\n  };\n\n  DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n    var cellHeight = this.getCellSize()[1];\n    var cellWidth = this.getCellSize()[0];\n    var widthValue;\n    var heigthValue;\n\n    if (panelModel && typeof cellWidth === 'number' && typeof panelModel.sizeX === 'number' && panelModel.sizeX > 1) {\n      widthValue = panelModel.sizeX * cellWidth + (panelModel.sizeX - 1) * this.cellSpacing[0];\n    } else {\n      widthValue = cellWidth;\n    }\n\n    if (panelModel && typeof cellHeight === 'number' && panelModel.sizeY > 1 && typeof panelModel.sizeY === 'number') {\n      heigthValue = panelModel.sizeY * cellHeight + (panelModel.sizeY - 1) * this.cellSpacing[1];\n    } else {\n      heigthValue = formatUnit(cellHeight);\n    }\n\n    return [heigthValue, widthValue];\n  };\n\n  DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n    var value = [];\n    var elementTop = parseFloat(args.element.style.top);\n    var elementLeft = parseFloat(args.element.style.left);\n    var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n    var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n    value = [row, col];\n    return value;\n  };\n\n  DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n    var changedPanels = [];\n\n    if (this.removeAllCalled) {\n      changedPanels = [];\n    } else {\n      for (var i = 0; i < this.panels.length; i++) {\n        if ((!isNullOrUndefined(added) ? this.panels[i].id !== added[0].id : true) && (!isNullOrUndefined(removed) ? this.panels[i].id !== removed[0].id : true) && (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n          changedPanels.push(this.panels[i]);\n        }\n      }\n    }\n\n    if (changedPanels.length > 0 || this.removeAllCalled) {\n      var changedArgs = {\n        changedPanels: changedPanels,\n        isInteracted: isInteracted,\n        addedPanels: !isNullOrUndefined(added) ? added : [],\n        removedPanels: !isNullOrUndefined(removed) ? removed : []\n      };\n      this.trigger('change', changedArgs);\n    }\n  };\n\n  DashboardLayout.prototype.enableDraggingContent = function (collections) {\n    var _this = this;\n\n    for (var i = 0; i < collections.length; i++) {\n      var abortArray = ['.e-resize', '.' + dragRestrict];\n      var cellElement = collections[i];\n      {\n        this.dragobj = new Draggable(cellElement, {\n          preventDefault: false,\n          clone: false,\n          dragArea: this.element,\n          isDragScroll: true,\n          handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n          abort: abortArray,\n          dragStart: this.onDraggingStart.bind(this),\n          dragStop: function (args) {\n            var model = _this.getCellInstance(_this.mainElement.id);\n\n            if (_this.allowPushing && _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n              _this.setHolderPosition(args);\n\n              _this.setPanelPosition(_this.mainElement, model.row, model.col);\n\n              _this.updatePanelLayout(_this.mainElement, model);\n            } else {\n              _this.setPanelPosition(_this.mainElement, model.row, model.col);\n            }\n\n            _this.mainElement = null;\n\n            var item = _this.getPanelBase(args);\n\n            if (_this.shadowEle) {\n              detach(_this.shadowEle);\n            }\n\n            removeClass([_this.element], [preventSelect]);\n            removeClass([args.element], [dragging]);\n            _this.shadowEle = null;\n            args.element.classList.remove('e-dragging');\n\n            var row = _this.getRowColumnDragValues(args)[0];\n\n            var col = _this.getRowColumnDragValues(args)[1];\n\n            var panelModel = _this.getCellInstance(args.element.id);\n\n            if (_this.allowPushing && _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n              _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                row: row,\n                col: col\n              });\n\n              _this.oldRowCol[args.element.id].row = row;\n              _this.oldRowCol[args.element.id].col = col;\n\n              _this.setAttributes({\n                value: {\n                  col: col.toString(),\n                  row: row.toString()\n                }\n              }, args.element);\n\n              _this.sortedPanel();\n            } else {\n              _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                row: _this.oldRowCol[args.element.id].row,\n                col: _this.oldRowCol[args.element.id].col\n              });\n\n              args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n              args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n\n              _this.sortedPanel();\n            }\n\n            var panelInstance = _this.getCellInstance(args.element.id);\n\n            _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n\n            _this.updatePanels();\n\n            _this.updateCloneArrayObject();\n\n            _this.checkForChanges(true);\n\n            _this.dragStopEventArgs = {\n              event: args.event,\n              element: args.element\n            };\n\n            _this.trigger('dragStop', args);\n\n            _this.resizeEvents();\n\n            _this.rows = _this.maxRow(true);\n\n            _this.setHeightWidth();\n\n            _this.updateDragArea();\n          },\n          drag: function (args) {\n            _this.draggedEventArgs = {\n              event: args.event,\n              element: args.element,\n              target: closest(args.target, '.e-panel')\n            };\n\n            _this.trigger('drag', _this.draggedEventArgs);\n\n            _this.onDragStart(args);\n          }\n        });\n\n        if (this.dragCollection.indexOf(this.dragobj) === -1) {\n          this.dragCollection.push(this.dragobj);\n        }\n      }\n    }\n  };\n\n  DashboardLayout.prototype.updatePanels = function () {\n    this.moveItemsUpwards();\n    this.updateOldRowColumn();\n    this.sortedPanel();\n  };\n\n  DashboardLayout.prototype.updateDragArea = function () {\n    this.dragCollection.forEach(function (dragobj) {\n      // eslint-disable-next-line\n      dragobj.setDragArea();\n    });\n  };\n\n  DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n    if (row + sizeY >= this.rows) {\n      this.rows = this.rows + addRows;\n      this.setHeightWidth();\n    }\n  };\n\n  DashboardLayout.prototype.onDraggingStart = function (args) {\n    var dragArgs = args;\n    this.trigger('dragStart', dragArgs, function (dragArgs) {});\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    this.mainElement = args.element;\n    this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n    var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n    this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n    var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n    this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n    this.updateDragArea();\n    this.shadowEle = document.createElement('div');\n    this.shadowEle.classList.add('e-holder');\n    this.shadowEle.classList.add('e-holder-transition');\n    setStyle(this.shadowEle, {\n      'position': 'absolute'\n    });\n    addClass([this.element], [preventSelect]);\n    addClass([args.element], [dragging]);\n    this.element.appendChild(this.shadowEle);\n    this.renderReactTemplates();\n    this.shadowEle = document.querySelector('.e-holder');\n    this.shadowEle.style.height = this.getCellInstance(args.element.id).sizeY * this.cellSize[1] + 'px';\n    this.shadowEle.style.width = this.getCellInstance(args.element.id).sizeX * this.cellSize[0] + 'px';\n    var panelInstance = this.getCellInstance(args.element.id);\n    this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n  }; // eslint-disable-next-line\n\n\n  DashboardLayout.prototype.cloneModels = function (source, target) {\n    if (target === undefined) {\n      target = [];\n    }\n\n    for (var i = 0; i < source.length; i++) {\n      // tslint:disable-next-line\n      if (!target[i]) {\n        target[i] = {};\n      } // eslint-disable-next-line guard-for-in\n\n\n      for (var k in source[i]) {\n        target[i][k] = source[i][k];\n      }\n    }\n\n    return target;\n  };\n\n  DashboardLayout.prototype.onDragStart = function (args) {\n    var endCol;\n    var endRow;\n    var dragCol;\n    var col = dragCol = this.getRowColumnDragValues(args)[1];\n    var row = this.getRowColumnDragValues(args)[0];\n\n    if (col < 0 || row < 0) {\n      return;\n    }\n\n    this.panelPropertyChange(this.getCellInstance(args.element.id), {\n      row: row,\n      col: col\n    });\n    var panelModel = this.getCellInstance(args.element.id);\n    this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n    this.updateDragArea();\n\n    if (this.allowPushing) {\n      this.setAttributes({\n        value: {\n          col: col.toString(),\n          row: row.toString()\n        }\n      }, args.element);\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n      endCol = this.oldRowCol[args.element.id].col;\n      endRow = this.oldRowCol[args.element.id].row;\n      this.oldRowCol[args.element.id] = {\n        row: row,\n        col: col\n      };\n      this.updateOldRowColumn();\n\n      if (this.startCol !== endCol || this.startRow !== endRow) {\n        this.setHolderPosition(args);\n\n        if (this.startCol !== endCol) {\n          this.startRow = endRow;\n        }\n\n        if (this.startRow !== endRow) {\n          this.startCol = endCol;\n        }\n\n        if (this.allowPushing) {\n          this.mainElement = args.element;\n          var model = panelModel;\n          this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n\n          if (panelModel.col >= this.checkColumnValue) {\n            this.checkCollision = [];\n          }\n\n          this.updatePanelLayout(args.element, panelModel);\n          this.moveItemsUpwards();\n        }\n      }\n    }\n\n    if (this.allowPushing !== false) {\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n    }\n\n    if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n      this.setAttributes({\n        value: {\n          col: col.toString(),\n          row: row.toString()\n        }\n      }, args.element);\n    }\n\n    if (this.startCol !== dragCol) {\n      this.startCol = endCol;\n      this.moveItemsUpwards();\n    }\n\n    if (!this.allowPushing) {\n      this.setHolderPosition(args);\n    }\n\n    this.removeResizeClasses(this.panelCollection);\n    this.setClasses(this.panelCollection);\n\n    if (this.allowPushing === false) {\n      return;\n    }\n  };\n\n  DashboardLayout.prototype.getPanelBase = function (args) {\n    var item;\n\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      if (this.panelCollection[i].id === (args.element && args.element.id || args)) {\n        item = this.panelCollection[i];\n      }\n    }\n\n    return item;\n  };\n\n  DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n    if (excludeItems && !(excludeItems instanceof Array)) {\n      excludeItems = [excludeItems];\n    }\n\n    var sizeY = 1;\n\n    while (row > -1) {\n      var sizeX = 1;\n      var col = column;\n\n      while (col > -1) {\n        var items = this.sortedArray[row];\n\n        if (items) {\n          var item = items[col];\n\n          if (item && (!excludeItems || excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n            return item;\n          }\n        }\n\n        ++sizeX;\n        --col;\n      }\n\n      --row;\n      ++sizeY;\n    }\n\n    return null;\n  };\n\n  DashboardLayout.prototype.setHolderPosition = function (args) {\n    var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n    var col = parseInt(args.element.getAttribute('data-col'), 10);\n    var row = parseInt(args.element.getAttribute('data-row'), 10);\n    var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n    var widthValue = this.getCellSize()[0];\n    var heightValue = this.getCellSize()[1];\n    var top = row === 0 ? 0 : row * (heightValue + this.cellSpacing[1]);\n    var left = col === 0 ? 0 : col * (widthValue + this.cellSpacing[0]);\n    var cellSizeOne = this.getCellSize()[1];\n    var cellSizeZero = this.getCellSize()[0];\n    this.elementRef.top = this.shadowEle.style.top = top + 'px';\n    this.elementRef.left = this.shadowEle.style.left = left + 'px';\n    this.elementRef.height = this.shadowEle.style.height = sizeY * cellSizeOne + (sizeY - 1) * this.cellSpacing[1] + 'px';\n    this.elementRef.width = this.shadowEle.style.width = sizeX * cellSizeZero + (sizeX - 1) * this.cellSpacing[0] + 'px';\n  };\n\n  DashboardLayout.prototype.getCellInstance = function (idValue) {\n    var currentCellInstance;\n\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].id === idValue) {\n        currentCellInstance = this.panels[i];\n      }\n    }\n\n    return currentCellInstance;\n  };\n  /**\n   * Allows to add a panel to the Dashboardlayout.\n   *\n   * @param {panel} panel -  Defines the panel element.\n   *\n   * @returns void\n    */\n\n\n  DashboardLayout.prototype.addPanel = function (panel) {\n    this.panelsSizeY = 0;\n    this.maxCol();\n\n    if (!panel.minSizeX) {\n      panel.minSizeX = 1;\n    }\n\n    if (!panel.minSizeY) {\n      panel.minSizeY = 1;\n    }\n\n    if (!panel.id) {\n      panel.id = 'layout_' + this.panelID.toString();\n      this.panelID = this.panelID + 1;\n    } // eslint-disable-next-line\n\n\n    var panelProp = new Panel(this, 'panels', panel, true);\n    this.panels.push(panelProp);\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    this.setMinMaxValues(panelProp);\n\n    if (this.maxColumnValue < panelProp.col || this.maxColumnValue < panelProp.col + panelProp.sizeX) {\n      this.panelPropertyChange(panelProp, {\n        col: this.maxColumnValue - panelProp.sizeX\n      });\n    }\n\n    var cell = this.renderCell(panelProp, true, null);\n    this.oldRowCol[panelProp.id] = {\n      row: panelProp.row,\n      col: panelProp.col\n    };\n    this.cloneObject[panelProp.id] = {\n      row: panelProp.row,\n      col: panelProp.col\n    };\n    this.updateOldRowColumn();\n    this.element.insertAdjacentElement('afterbegin', cell);\n    this.addPanelCalled = true;\n\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n      this.removeResizeClasses(this.panelCollection);\n    } else {\n      this.mainElement = cell;\n\n      if (!this.checkCollision) {\n        this.checkCollision = [];\n      }\n\n      this.setPanelPosition(cell, panelProp.row, panelProp.col);\n      this.updatePanelLayout(cell, panelProp);\n    }\n\n    this.addPanelCalled = false;\n\n    if (this.allowDragging && this.mediaQuery ? !this.checkMediaQuery() : false) {\n      this.enableDraggingContent([document.getElementById(panelProp.id)]);\n    }\n\n    this.setClasses([cell]);\n\n    if (this.allowFloating) {\n      this.mainElement = null;\n      this.moveItemsUpwards();\n    }\n\n    this.updateOldRowColumn();\n    this.sortedPanel();\n    this.updateCloneArrayObject();\n\n    if (this.allowResizing) {\n      for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n        var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n        EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n\n        if (Browser.info.name !== 'msie') {\n          EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n        }\n      }\n    }\n\n    this.checkForChanges(false, [panelProp]);\n  };\n  /**\n   * Allows to update a panel in the DashboardLayout.\n   *\n   * @param {panel} panel - Defines the panel element.\n   *\n   * @returns void\n    */\n\n\n  DashboardLayout.prototype.updatePanel = function (panel) {\n    this.panelsSizeY = 0;\n\n    if (!panel.id) {\n      return;\n    }\n\n    var panelInstance = this.getCellInstance(panel.id);\n\n    if (!panelInstance) {\n      return;\n    }\n\n    this.maxCol();\n    panel.col = panel.col < 1 ? 0 : panel.col > this.columns ? this.columns - 1 : panel.col;\n\n    if (isNullOrUndefined(panel.col)) {\n      panel.col = panelInstance.col;\n    }\n\n    this.panelPropertyChange(panelInstance, panel);\n    this.setMinMaxValues(panelInstance);\n    var cell = document.getElementById(panel.id);\n    this.mainElement = cell;\n    var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n    this.panelContent = cell.querySelector('.e-panel-container') ? cell.querySelector('.e-panel-container') : this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n    cell.appendChild(this.panelContent);\n\n    if (panelInstance.header) {\n      var headerTemplateElement = cell.querySelector('.e-panel-header') ? cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n      addClass([headerTemplateElement], [header]);\n      headerTemplateElement.innerHTML = '';\n      var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n      this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n      this.panelContent.appendChild(headerTemplateElement);\n      this.renderReactTemplates();\n    } else {\n      if (cell.querySelector('.e-panel-header')) {\n        detach(cell.querySelector('.e-panel-header'));\n      }\n    }\n\n    if (panelInstance.content) {\n      var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n      this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') : this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n      this.panelBody.innerHTML = '';\n      var headerHeight = this.panelContent.querySelector('.e-panel-header') ? window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n      var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n      setStyle(this.panelBody, {\n        height: contentHeightValue\n      });\n      var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n      this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n      this.panelContent.appendChild(this.panelBody);\n      this.renderReactTemplates();\n    } else {\n      if (cell.querySelector('.e-panel-content')) {\n        detach(cell.querySelector('.e-panel-content'));\n      }\n    }\n\n    this.setXYAttributes(cell, panelInstance);\n    this.setHeightAndWidth(cell, panelInstance);\n    this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n    this.updatePanelLayout(cell, panelInstance);\n\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n    }\n\n    this.mainElement = null;\n    this.updatePanels();\n    this.updateCloneArrayObject();\n  };\n\n  DashboardLayout.prototype.updateCloneArrayObject = function () {\n    this.cloneArray = this.sortedArray;\n    this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n  };\n  /**\n   * Returns the panels object of the DashboardLayout.\n   *\n   * @returns [`PanelModel[]`](./panelModel)\n   */\n\n\n  DashboardLayout.prototype.serialize = function () {\n    var cloneModel = this.cloneModels(this.panels);\n    var customObject = [];\n\n    for (var i = 0; i < cloneModel.length; i++) {\n      customObject.push({\n        id: cloneModel[i].id,\n        row: cloneModel[i].row,\n        col: cloneModel[i].col,\n        sizeX: cloneModel[i].sizeX,\n        sizeY: cloneModel[i].sizeY,\n        minSizeX: cloneModel[i].minSizeX,\n        minSizeY: cloneModel[i].minSizeY,\n        maxSizeX: cloneModel[i].maxSizeX,\n        maxSizeY: cloneModel[i].maxSizeY\n      });\n    }\n\n    return customObject;\n  };\n  /**\n   * Removes all the panels from the DashboardLayout.\n   */\n\n\n  DashboardLayout.prototype.removeAll = function () {\n    this.removeAllCalled = true;\n\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      detach(this.panelCollection[i]);\n      this.clearTemplate();\n    }\n\n    this.removeAllPanel();\n    this.rows = 0;\n    this.gridPanelCollection = [];\n    this.setHeightWidth();\n    this.sortedPanel();\n    this.sortedArray = [];\n    this.overlapElementClone = [];\n    this.overlapElement = [];\n    this.overlapSubElementClone = [];\n    this.panelCollection = [];\n    this.oldRowCol = {};\n    this.cloneObject = {};\n    var clonedPanels = this.cloneModels(this.panels);\n    this.setProperties({\n      panels: []\n    }, true);\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkForChanges(false, null, clonedPanels);\n    this.removeAllCalled = false;\n  };\n  /**\n   * Removes the panel from the DashboardLayout.\n   *\n   * @param {string} id -  Defines the panel ID.\n   *\n   * @returns void\n   */\n\n\n  DashboardLayout.prototype.removePanel = function (id) {\n    var _this = this;\n\n    this.panelsSizeY = 0;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var removedPanel;\n\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      if (this.panelCollection[i].id === id) {\n        detach(this.panelCollection[i]);\n        this.panelCollection.splice(i, 1);\n      }\n\n      if (this.panels[i].id === id) {\n        removedPanel = this.panels[i];\n        this.panels.splice(i, 1);\n        this.panelsInitialModel.splice(i, 1);\n        this.updateOldRowColumn();\n        this.sortedPanel();\n      }\n    }\n\n    this.updatePanels();\n\n    if (this.checkMediaQuery()) {\n      this.isPanelRemoved = true;\n      this.checkMediaQuerySizing();\n      this.isPanelRemoved = false;\n    }\n\n    this.gridPanelCollection.forEach(function (item) {\n      if (item.id === id) {\n        _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n      }\n    });\n    this.updateCloneArrayObject();\n    this.checkForChanges(false, null, [removedPanel]);\n  };\n  /**\n   *Moves the panel in the DashboardLayout.\n   *\n   * @param {string} id - Defines the panel ID.\n   *\n   * @param  {number} row - Defines the row of dashboard layout.\n   *\n   * @param {number} col - Defines the column of dashboard layout.\n   *\n   * @returns void\n   */\n\n\n  DashboardLayout.prototype.movePanel = function (id, row, col) {\n    this.movePanelCalled = true;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var panelInstance = this.getCellInstance(id);\n\n    if (isNaN(row) || row === null || isNaN(col) || col === null || !panelInstance) {\n      return;\n    }\n\n    if (col < 0) {\n      col = 0;\n    } else if (col > this.columns) {\n      col = this.columns - panelInstance.sizeX;\n    }\n\n    this.panelPropertyChange(panelInstance, {\n      row: row,\n      col: col\n    });\n    var ele = document.getElementById(id);\n    this.mainElement = ele;\n    this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n    this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n    this.setAttributes({\n      value: {\n        col: col.toString(),\n        row: row.toString()\n      }\n    }, ele);\n    this.updateOldRowColumn();\n    this.setPanelPosition(ele, row, col);\n    this.updatePanelLayout(ele, panelInstance);\n    this.updateRowHeight();\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.mainElement = null;\n\n    if (this.allowFloating) {\n      this.moveItemsUpwards();\n    }\n\n    this.movePanelCalled = false;\n    this.checkForChanges(false);\n  };\n\n  DashboardLayout.prototype.setAttributes = function (value, ele) {\n    for (var i = 0; i < Object.keys(value).length; i++) {\n      if (Object.keys(value)) {\n        if (value[Object.keys(value)[i]].col) {\n          ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n        }\n\n        if (value[Object.keys(value)[i]].row) {\n          ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n        }\n\n        if (value[Object.keys(value)[i]].sizeX) {\n          ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n        }\n\n        if (value[Object.keys(value)[i]].sizeY) {\n          ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n        }\n\n        if (value[Object.keys(value)[i]].minSizeX) {\n          ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n        }\n\n        if (value[Object.keys(value)[i]].minSizeY) {\n          ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n        }\n\n        if (value[Object.keys(value)[i]].maxSizeX) {\n          ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n        }\n\n        if (value[Object.keys(value)[i]].maxSizeY) {\n          ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n        }\n      }\n    }\n  };\n  /**\n   * Resize the panel in the DashboardLayout.\n   *\n   * @param {string} id - Defines the panel ID.\n   *\n   * @param {number} sizeX - Defines the sizeX of dashboard layout.\n   *\n   * @param {number} sizeY - Defines the sizeY of dashboard layout.\n   */\n\n\n  DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var panelInstance = this.getCellInstance(id);\n    this.resizeCalled = true;\n    var ele = document.getElementById(id);\n    var args = {\n      event: null,\n      element: ele,\n      isInteracted: false\n    };\n    this.trigger('resizeStart', args);\n    this.panelPropertyChange(panelInstance, {\n      sizeX: sizeX,\n      sizeY: sizeY\n    });\n    this.setMinMaxValues(panelInstance);\n    this.checkMinMaxValues(panelInstance);\n    this.mainElement = ele;\n    this.setAttributes({\n      value: {\n        sizeX: panelInstance.sizeX.toString(),\n        sizeY: panelInstance.sizeY.toString()\n      }\n    }, ele);\n    this.setHeightAndWidth(ele, panelInstance);\n    this.updatePanelLayout(ele, panelInstance);\n    this.updatePanels();\n    this.updateRowHeight();\n    this.resizeCalled = false;\n    this.trigger('resizeStop', args);\n    this.checkForChanges(false);\n  };\n  /**\n   * Destroys the DashboardLayout component\n   *\n   * @returns void\n   */\n\n\n  DashboardLayout.prototype.destroy = function () {\n    // eslint-disable-next-line\n    EventHandler.remove(window, 'resize', this.refreshListener);\n    removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n    this.element.removeAttribute('style');\n\n    for (var i = 0; i < this.dragCollection.length; i++) {\n      this.dragCollection[i].destroy();\n    }\n\n    this.removeAllPanel();\n\n    _super.prototype.destroy.call(this);\n\n    this.clearTemplate();\n    this.renderReactTemplates();\n  };\n\n  DashboardLayout.prototype.removeAllPanel = function () {\n    while (this.element.firstElementChild) {\n      detach(this.element.firstElementChild);\n      this.clearTemplate();\n    }\n  };\n\n  DashboardLayout.prototype.setEnableRtl = function () {\n    if (this.enableRtl === true) {\n      addClass([this.element], 'e-rtl');\n    } else {\n      removeClass([this.element], 'e-rtl');\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * returns void\n   *\n   * @private\n   */\n\n\n  DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n    this.panelResponsiveUpdate();\n    this.setHeightWidth();\n    this.getRowColumn();\n\n    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n      var ele = this.element.querySelectorAll('.e-panel')[i];\n      var panelModel = this.getCellInstance(ele.id);\n      this.setHeightAndWidth(ele, panelModel);\n      this.setPanelPosition(ele, panelModel.row, panelModel.col);\n    }\n  };\n\n  DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n    this.removeAll();\n    this.setProperties({\n      panels: panels\n    }, true);\n    this.setOldRowCol();\n\n    if (this.table) {\n      this.table.remove();\n    }\n\n    this.initialize();\n\n    if (this.checkMediaQuery()) {\n      this.refresh();\n    }\n\n    if (this.showGridLines) {\n      this.initGridLines();\n    }\n  };\n\n  DashboardLayout.prototype.checkForIDValues = function (panels) {\n    var _this = this;\n\n    if (!isNullOrUndefined(panels) && panels.length > 0) {\n      this.panelID = 0;\n      panels.forEach(function (panel) {\n        if (!panel.id) {\n          _this.panelPropertyChange(panel, {\n            id: 'layout_' + _this.panelID.toString()\n          });\n\n          _this.panelID = _this.panelID + 1;\n        }\n      });\n    } else {\n      this.restrictDynamicUpdate = true;\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * returns void\n   *\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var _this = this;\n\n    if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n      this.checkForIDValues(newProp.panels);\n    }\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'enableRtl':\n          this.setProperties({\n            enableRtl: newProp.enableRtl\n          }, true);\n          this.setEnableRtl();\n          break;\n\n        case 'mediaQuery':\n          this.setProperties({\n            mediaQuery: newProp.mediaQuery\n          }, true);\n\n          if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n          }\n\n          break;\n\n        case 'allowDragging':\n          this.setProperties({\n            allowDragging: newProp.allowDragging\n          }, true);\n          this.ensureDrag();\n          break;\n\n        case 'allowResizing':\n          this.setProperties({\n            allowResizing: newProp.allowResizing\n          }, true);\n\n          if (this.allowResizing) {\n            this.setClasses(this.panelCollection);\n            this.resizeEvents();\n          } else {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n\n            for (var i = 0; i < panelElements.length; i++) {\n              var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n              var element = panelElements[i];\n              EventHandler.remove(element, eventName, this.downResizeHandler);\n\n              if (Browser.info.name !== 'msie') {\n                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n              }\n            }\n\n            this.removeResizeClasses(this.panelCollection);\n          }\n\n          break;\n\n        case 'cellSpacing':\n          this.setProperties({\n            cellSpacing: newProp.cellSpacing\n          }, true);\n          this.updateCellSizeAndSpacing();\n          this.updateGridLines();\n          break;\n\n        case 'draggableHandle':\n          this.setProperties({\n            draggableHandle: newProp.draggableHandle\n          }, true);\n          this.ensureDrag();\n          break;\n\n        case 'allowFloating':\n          this.setProperties({\n            allowFloating: newProp.allowFloating\n          }, true);\n          this.moveItemsUpwards();\n          break;\n\n        case 'showGridLines':\n          if (this.showGridLines) {\n            this.setProperties({\n              showGridLines: newProp.showGridLines\n            }, true);\n            this.initGridLines();\n          } else {\n            if (this.table) {\n              detach(this.table);\n            }\n          }\n\n          break;\n\n        case 'allowPushing':\n          this.setProperties({\n            allowPushing: newProp.allowPushing\n          }, true);\n          break;\n\n        case 'panels':\n          if (!newProp.columns && !this.restrictDynamicUpdate && newProp.panels[0] && newProp.panels.length > 0) {\n            this.isRenderComplete = false;\n            this.updatePanelsDynamically(newProp.panels);\n            this.isRenderComplete = true;\n          } else if (!(newProp.panels[0] && newProp.panels.length)) {\n            this.isRenderComplete = false;\n            this.updatePanelsDynamically(this.panels);\n            this.isRenderComplete = true;\n          } else {\n            this.restrictDynamicUpdate = false;\n          }\n\n          break;\n\n        case 'columns':\n          this.isRenderComplete = false;\n\n          if (newProp.panels) {\n            this.updatePanelsDynamically(newProp.panels);\n          }\n\n          this.setProperties({\n            columns: newProp.columns\n          }, true);\n          this.panelCollection = [];\n          this.maxColumnValue = this.columns;\n          this.calculateCellSize();\n          this.panels.forEach(function (panel) {\n            _this.setMinMaxValues(panel);\n\n            if (_this.maxColumnValue < panel.col || _this.maxColumnValue < panel.col + panel.sizeX) {\n              var colValue = _this.maxColumnValue - panel.sizeX;\n\n              _this.panelPropertyChange(panel, {\n                col: colValue < 0 ? 0 : colValue\n              });\n\n              _this.setXYAttributes(document.getElementById(panel.id), panel);\n            }\n\n            _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n\n            _this.panelCollection.push(document.getElementById(panel.id));\n\n            _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n\n            _this.mainElement = document.getElementById(panel.id);\n\n            _this.updatePanelLayout(document.getElementById(panel.id), panel);\n\n            _this.mainElement = null;\n          });\n          this.updatePanels();\n          this.updateCloneArrayObject();\n          this.isRenderComplete = true;\n          this.updateGridLines();\n          break;\n      }\n    }\n  };\n  /**\n   * Gets the properties to be maintained upon browser refresh.\n   *\n   * @returns string\n   * @private\n   */\n\n\n  DashboardLayout.prototype.getPersistData = function () {\n    var keyEntity = ['panels'];\n    return this.addOnPersist(keyEntity);\n  };\n  /* istanbul ignore next */\n\n\n  DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n    var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n\n        if (typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this))) {\n          if (Array.isArray(getValue(key, this)) && key === 'panels') {\n            this.mergePanels(dataObj[key], this[key]);\n          }\n        }\n      }\n\n      this.isProtectedOnChange = false;\n    }\n  };\n  /* istanbul ignore next */\n\n\n  DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n    var storedColumns = sortedPanels;\n\n    var _loop_6 = function (i) {\n      this_4.checkForIDValues(panels);\n      var localPanel = panels.filter(function (pan) {\n        return pan.id === storedColumns[i].id;\n      })[0];\n\n      if (!isNullOrUndefined(localPanel)) {\n        storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n      }\n    };\n\n    var this_4 = this;\n\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_6(i);\n    }\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns string\n   *\n   * @private\n   */\n\n\n  DashboardLayout.prototype.getModuleName = function () {\n    return 'DashboardLayout';\n  };\n\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowDragging\", void 0);\n\n  __decorate([Property(false)], DashboardLayout.prototype, \"allowResizing\", void 0);\n\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowPushing\", void 0);\n\n  __decorate([Property(true)], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowFloating\", void 0);\n\n  __decorate([Property(1)], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n\n  __decorate([Property([5, 5])], DashboardLayout.prototype, \"cellSpacing\", void 0);\n\n  __decorate([Property(1)], DashboardLayout.prototype, \"columns\", void 0);\n\n  __decorate([Property(false)], DashboardLayout.prototype, \"showGridLines\", void 0);\n\n  __decorate([Property(null)], DashboardLayout.prototype, \"draggableHandle\", void 0);\n\n  __decorate([Property('en-US')], DashboardLayout.prototype, \"locale\", void 0);\n\n  __decorate([Property('max-width: 600px')], DashboardLayout.prototype, \"mediaQuery\", void 0);\n\n  __decorate([Collection([], Panel)], DashboardLayout.prototype, \"panels\", void 0);\n\n  __decorate([Property(['e-south-east'])], DashboardLayout.prototype, \"resizableHandles\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"change\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"dragStart\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"drag\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"dragStop\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"resize\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"created\", void 0);\n\n  __decorate([Event()], DashboardLayout.prototype, \"destroyed\", void 0);\n\n  DashboardLayout = __decorate([NotifyPropertyChanges], DashboardLayout);\n  return DashboardLayout;\n}(Component);\n\nexport { DashboardLayout };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","NotifyPropertyChanges","isUndefined","Collection","Draggable","isNullOrUndefined","append","setValue","Event","formatUnit","ChildProperty","compile","closest","SanitizeHtmlHelper","getValue","setStyleAttribute","setStyle","addClass","detach","removeClass","EventHandler","Browser","extend","preventSelect","dragging","draggable","dragRestrict","drag","resize","resizeicon","responsive","east","west","north","south","single","double","northEast","southEast","northWest","southWest","panel","panelContent","panelContainer","disable","header","panelTransition","Panel","_super","apply","DashboardLayout","options","element","_this","call","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","mergePersistPanelData","preRender","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","top","left","height","width","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","slice","children","panels","id","panelPropertyChange","toString","row","col","createPanelElement","cssClass","idValue","ele","createElement","setAttribute","render","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","renderComplete","renderReactTemplates","table","document","tbody","classList","add","maxRow","tr","j","columns","td","setAttributes","value","sizeX","sizeY","setPanelPosition","setHeightAndWidth","appendChild","updateRowHeight","childElementCount","querySelectorAll","panelElements","setProperties","push","panelElement","enableRtl","getInlinePanels","maxCol","querySelector","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","parentElement","offsetWidth","cellAspectRatio","cellSpacing","recheck","getElementById","parseInt","getAttribute","createSubElement","className","templateParser","template","innerHTML","trim","error","sanitizedValue","sanitize","enableHtmlSanitizer","undefined","renderTemplate","content","appendElement","type","isStringTemplate","prop","templateFn","templateElements","tagName","eleVal","style","display","removeProperty","removeAttribute","compilerFn","_i","compilerFn_1","item","cellElement","panelModel","panelId","split","enabled","disablePanel","headerTemplateElement","cssClass_1","panelBody","headerHeight","getComputedStyle","contentHeightValue","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","panelProp","resizeEvents","allowResizing","eventName","info","name","downResizeHandler","touchDownResizeHandler","refreshListener","refresh","bind","e","downHandler","lastMouseX","pageX","lastMouseY","pageY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","el","currentTarget","args","event","isInteracted","trigger","downTarget","shadowEle","elementX","parseFloat","elementY","elementWidth","elementHeight","offsetHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","indexOf","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","remove","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","canOccupy","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","Math","ceil","floor","round","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","items","rowValue","columnValue","column","oldRow","updateLayout","contains","internalPanels","cellInstance","removeResizeClasses","checkDragging","destroy","sortPanels","_loop_1","_loop_2","this_1","filter","updatedPanel","updatedRows","updatedHeight","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","index","dashBoardCell","xValue","max","checkMinMaxValues","cells","cell","ignore","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","forEach","sizeXValue","occupiedValues","getOccupiedColumns","splice","eleOccupiedValues","checkingElement","sort","next","previous","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","isAdjustable","rightSpacing","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","leftSpacing","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","collisionValue","replacable","isRightAdjudtable","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapCollision","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","checkForAdjustment","collisionModels","swappingAvailable","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","keys","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","m","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","cellHeight","cellWidth","heigthValue","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","preventDefault","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","clearTemplate","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","onPropertyChanged","newProp","oldProp","_a","getPersistData","keyEntity","addOnPersist","persistedData","data","localStorage","getItem","getModuleName","dataObj","isProtectedOnChange","keys_1","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-layouts/src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        // eslint-disable-next-line\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        this.refreshListener = this.refresh.bind(this);\n        // eslint-disable-next-line\n        EventHandler.add(window, 'resize', this.refreshListener);\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                var internalPanels = this.element.querySelectorAll(((this.element.id) ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n                for (var i = 0; i < internalPanels.length; i++) {\n                    var ele = internalPanels[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // eslint-disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        // eslint-disable-next-line radix\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        // eslint-disable-next-line prefer-const\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n            cellElement = this.contentTemplateChild[index];\n            if (panel.cssClass) {\n                addClass([cellElement], [panel.cssClass]);\n            }\n            if (panel.id) {\n                cellElement.setAttribute('id', panel.id);\n            }\n        }\n        else {\n            cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n        }\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        this.renderReactTemplates();\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // eslint-disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                this.renderReactTemplates();\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var j = 0; j <= col; j++) {\n                if (columns.indexOf(j) === -1 && j !== col) {\n                    if (spacedColumns.indexOf(j) === -1) {\n                        spacedColumns.push(j);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    // eslint-disable-next-line no-self-assign\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element = document.getElementById(this.panels[i].id);\n                if (element === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element.id].row;\n                var colValue = this.cloneObject[element.id].col;\n                this.setPanelPosition(element, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            ignore.push(this.mainElement);\n            var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString()\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    // eslint-disable-next-line\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        if (!ele.querySelector(\".e-resize\")) {\n            for (var j = 0; j < this.availableClasses.length; j++) {\n                var spanEle = this.createElement('span');\n                var addClassValue = void 0;\n                container.appendChild(spanEle);\n                if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                    this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                    addClassValue = single;\n                }\n                else {\n                    addClassValue = double;\n                }\n                addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString()\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // eslint-disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // eslint-disable-next-line guard-for-in\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        var cellSizeOne = this.getCellSize()[1];\n        var cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     *\n     * @param {panel} panel -  Defines the panel element.\n     *\n     * @returns void\n\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     *\n     * @param {panel} panel - Defines the panel element.\n     *\n     * @returns void\n\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     *\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     *\n     * @param {string} id -  Defines the panel ID.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     *Moves the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param  {number} row - Defines the row of dashboard layout.\n     *\n     * @param {number} col - Defines the column of dashboard layout.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param {number} sizeX - Defines the sizeX of dashboard layout.\n     *\n     * @param {number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        // eslint-disable-next-line\n        EventHandler.remove(window, 'resize', this.refreshListener);\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        if (this.enableRtl === true) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * returns void\n     *\n     * @private\n     */\n    // eslint-disable-next-line\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     *\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns string\n     *\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}