{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { remove, addClass, isNullOrUndefined, extend, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { FreezeContentRender, FreezeRender } from './freeze-renderer';\nimport * as events from '../base/constant';\nimport { wrap, parentsUntil, addRemoveEventListener } from '../base/util';\nimport { Input } from '@syncfusion/ej2-inputs';\nimport * as literals from '../base/string-literals';\n/**\n * ColumnFreezeHeaderRenderer is used to freeze the columns header at right and left\n *\n * @hidden\n */\n\nvar ColumnFreezeHeaderRenderer =\n/** @class */\nfunction (_super) {\n  __extends(ColumnFreezeHeaderRenderer, _super);\n\n  function ColumnFreezeHeaderRenderer(parent, locator) {\n    var _this = _super.call(this, parent, locator) || this;\n\n    _this.addEventListener();\n\n    return _this;\n  }\n\n  ColumnFreezeHeaderRenderer.prototype.addEventListener = function () {\n    this.evtHandlers = [{\n      event: events.freezeRender,\n      handler: this.refreshFreeze\n    }, {\n      event: events.refreshFrozenColumns,\n      handler: this.refreshFrozenColumns\n    }, {\n      event: events.setReorderDestinationElement,\n      handler: this.setReorderElement\n    }, {\n      event: events.columnVisibilityChanged,\n      handler: this.setVisible\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.setReorderElement = function (args) {\n    this.destEle = args.ele;\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.refreshFrozenColumns = function (args) {\n    if (!args.parent) {\n      this.parent.setProperties({\n        columns: args.columns\n      }, true);\n    }\n\n    var isFrozenLeft = parentsUntil(this.destEle, 'e-frozen-left-header');\n    var isFrozenRight = parentsUntil(this.destEle, 'e-frozen-right-header');\n    var left = this.parent.getFrozenLeftColumnsCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n    args.column.freeze = null;\n\n    if (isFrozenLeft) {\n      args.column.freeze = 'Left';\n    } else if (isFrozenRight) {\n      args.column.freeze = 'Right';\n    }\n\n    this.parent.setFrozenCount();\n    args.cancel = left !== this.parent.getFrozenLeftColumnsCount() || right !== this.parent.getFrozenRightColumnsCount();\n\n    if (args.cancel) {\n      this.parent.refreshColumns();\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.setWrapHeight = function (fRows, mRows, isModeChg, isContReset, isStackedHdr, frRows) {\n    var fRowHgt;\n    var mRowHgt;\n    var frRowHgt;\n    var isWrap = this.parent.allowTextWrap;\n    var tBody = this.parent.getHeaderContent().querySelector(literals.tbody);\n    var wrapMode = this.parent.textWrapSettings.wrapMode;\n    var tHead = this.parent.getHeaderContent().querySelector('thead');\n    var height = [];\n    var width = [];\n    var rightHeight = [];\n\n    for (var i = 0, len = fRows.length; i < len; i++) {\n      //separate loop for performance issue\n      if (!isNullOrUndefined(fRows[i]) && !isNullOrUndefined(mRows[i])) {\n        if (frRows) {\n          rightHeight[i] = frRows[i].getBoundingClientRect().height;\n        }\n\n        width[i] = mRows[i].getBoundingClientRect().height;\n        height[i] = fRows[i].getBoundingClientRect().height; //https://pagebuildersandwich.com/increased-plugins-performance-200/\n      }\n    }\n\n    for (var i = 0, len = fRows.length; i < len; i++) {\n      if (isModeChg && (wrapMode === 'Content' && tHead.contains(fRows[i]) || wrapMode === 'Header' && tBody.contains(fRows[i]) || wrapMode === 'Header' && isContReset) || isStackedHdr) {\n        if (frRows[i]) {\n          frRows[i].style.height = null;\n        }\n\n        fRows[i].style.height = null;\n        mRows[i].style.height = null;\n      }\n\n      fRowHgt = height[i];\n      mRowHgt = width[i];\n      frRowHgt = rightHeight[i] ? rightHeight[i] : 0;\n      var maxHeight = Math.max(fRowHgt, mRowHgt, frRowHgt);\n\n      if (!isNullOrUndefined(fRows[i]) && fRows[i].childElementCount && (isWrap && fRowHgt < maxHeight || !isWrap && fRowHgt < maxHeight || this.parent.allowResizing && this.parent.resizeModule && this.parent.resizeModule.isFrozenColResized === false)) {\n        fRows[i].style.height = maxHeight + 'px';\n      }\n\n      if (mRows && !isNullOrUndefined(mRows[i]) && mRows[i].childElementCount && (isWrap && maxHeight > mRowHgt || !isWrap && maxHeight > mRowHgt || this.parent.allowResizing && this.parent.resizeModule && this.parent.resizeModule.isFrozenColResized === true)) {\n        mRows[i].style.height = maxHeight + 'px';\n      }\n\n      if (frRows && !isNullOrUndefined(frRows[i]) && frRows[i].childElementCount && (isWrap && maxHeight > frRowHgt || !isWrap && maxHeight > frRowHgt || this.parent.allowResizing && this.parent.resizeModule && this.parent.resizeModule.isFrozenColResized === true)) {\n        frRows[i].style.height = maxHeight + 'px';\n      }\n    }\n\n    if (isWrap) {\n      this.setFrozenHeight();\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.refreshHeight = function (obj) {\n    var isLeftRight = this.parent.getFrozenMode() === literals.leftRight;\n    var fRows;\n    var frRows;\n    var mRows;\n    var frHdr = this.getFrozenRightHeader();\n    var fHdr = this.parent.getHeaderContent().querySelector('.' + literals.frozenHeader);\n    var cont = this.parent.getContent();\n    var mHdr = this.getMovableHeader();\n    var hdrClassList = this.parent.getHeaderContent().querySelector('.' + literals.headerContent).classList;\n    var wrapMode = this.parent.textWrapSettings.wrapMode;\n\n    if (obj.case === 'textwrap') {\n      if (wrapMode !== 'Header' || obj.isModeChg) {\n        if (isLeftRight) {\n          frRows = cont.querySelector('.e-frozen-right-content').querySelectorAll('tr');\n        }\n\n        mRows = cont.querySelector('.' + literals.movableContent).querySelectorAll('tr');\n        fRows = cont.querySelector('.' + literals.frozenContent).querySelectorAll('tr');\n        this.setWrapHeight(fRows, mRows, obj.isModeChg, true, false, frRows);\n      }\n\n      if (wrapMode === 'Content' && this.parent.allowTextWrap) {\n        hdrClassList.add('e-wrap');\n      } else {\n        hdrClassList.remove('e-wrap');\n      }\n\n      if (wrapMode === 'Both' || obj.isModeChg) {\n        if (isLeftRight) {\n          frRows = frHdr.querySelectorAll('tr');\n        }\n\n        fRows = fHdr.querySelectorAll('tr');\n        mRows = mHdr.querySelectorAll('tr');\n      } else {\n        if (isLeftRight) {\n          frRows = frHdr.querySelector(wrapMode === 'Content' ? literals.tbody : 'thead').querySelectorAll('tr');\n        }\n\n        fRows = fHdr.querySelector(wrapMode === 'Content' ? literals.tbody : 'thead').querySelectorAll('tr');\n        mRows = mHdr.querySelector(wrapMode === 'Content' ? literals.tbody : 'thead').querySelectorAll('tr');\n      }\n\n      if (!this.parent.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n        this.setWrapHeight(fRows, mRows, obj.isModeChg, false, this.colDepth > 1, frRows);\n      }\n\n      this.refreshStackedHdrHgt();\n    } else if (obj.case === 'refreshHeight') {\n      mRows = cont.querySelector('.' + literals.movableContent).querySelectorAll('tr');\n      fRows = cont.querySelector('.' + literals.frozenContent).querySelectorAll('tr');\n\n      if (isLeftRight) {\n        frRows = cont.querySelector('.e-frozen-right-content').querySelectorAll('tr');\n      }\n\n      this.setWrapHeight(fRows, mRows, obj.isModeChg, false, false, frRows);\n\n      if (!this.parent.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n        if (isLeftRight) {\n          frRows = frHdr.querySelectorAll('tr');\n        }\n\n        fRows = fHdr.querySelectorAll('tr');\n        mRows = mHdr.querySelectorAll('tr');\n        this.setWrapHeight(fRows, mRows, obj.isModeChg, false, false, frRows);\n      }\n    }\n  };\n  /**\n   * Function to hide header table column based on visible property\n   *\n   * @param {Column[]} columns - specifies the column[]\n   * @returns {void}\n   */\n\n\n  ColumnFreezeHeaderRenderer.prototype.setVisible = function (columns) {\n    var gObj = this.parent;\n    var displayVal;\n    var idx;\n    var left = this.parent.getFrozenLeftColumnsCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n    var movable = this.parent.getMovableColumnsCount();\n\n    for (var c = 0, clen = columns.length; c < clen; c++) {\n      var column = columns[c];\n      idx = gObj.getNormalizedColumnIndex(column.uid);\n      displayVal = column.visible ? '' : 'none';\n\n      if (column.freeze === 'Left' || column.freeze === 'Right') {\n        if (left && !right) {\n          var leftColGrp = gObj.getHeaderContent().querySelector('.e-frozen-left-header').querySelector(literals.colGroup);\n          setStyleAttribute(leftColGrp.children[idx], {\n            'display': displayVal\n          });\n        } else if (!left && right) {\n          var rightColGrp = gObj.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.colGroup);\n          setStyleAttribute(rightColGrp.children[idx - movable], {\n            'display': displayVal\n          });\n        }\n      } else {\n        var mTblColGrp = gObj.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.colGroup);\n        setStyleAttribute(mTblColGrp.children[idx - left], {\n          'display': displayVal\n        });\n      }\n    }\n\n    this.refreshUI();\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.filterRenderer = function (ele, frozenColumn, total) {\n    return _super.prototype.filterRenderer.call(this, ele, frozenColumn, total);\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.refreshUI = function () {\n    var frTbody;\n    var tbody = this.getMovableHeader().querySelector(literals.tbody);\n    remove(this.getMovableHeader().querySelector('table'));\n\n    if (this.parent.getFrozenMode() === literals.leftRight) {\n      frTbody = this.getFrozenRightHeader().querySelector(literals.tbody);\n      remove(this.getFrozenRightHeader().querySelector('table'));\n    }\n\n    _super.prototype.refreshFrozenLeftUI.call(this);\n\n    this.rfshMovable();\n    this.getMovableHeader().querySelector(literals.tbody).innerHTML = tbody.innerHTML;\n\n    if (frTbody) {\n      this.getFrozenRightHeader().querySelector(literals.tbody).innerHTML = frTbody.innerHTML;\n    }\n\n    this.updateColgroup();\n    this.widthService.setWidthToColumns();\n    this.parent.notify(events.colGroupRefresh, {});\n\n    if (this.parent.allowTextWrap && this.parent.textWrapSettings.wrapMode === 'Header') {\n      wrap([].slice.call(this.getMovableHeader().querySelectorAll('tr.e-columnheader')), true);\n    }\n\n    this.parent.updateDefaultCursor();\n    var mTbl = this.parent.getContent().querySelector('.' + literals.movableContent).querySelector('.' + literals.table);\n    remove(mTbl.querySelector(literals.colGroup));\n    var mColGroup = this.getMovableHeader().querySelector(literals.colGroup).cloneNode(true);\n    mTbl.insertBefore(mColGroup, mTbl.querySelector(literals.tbody));\n\n    if (frTbody) {\n      var frtbl = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('.' + literals.table);\n      remove(frtbl.querySelector(literals.colGroup));\n      var frtblColGroup = this.getFrozenRightHeader().querySelector(literals.colGroup).cloneNode(true);\n      frtbl.insertBefore(frtblColGroup, frtbl.querySelector(literals.tbody));\n    }\n\n    this.widthService.refreshFrozenScrollbar();\n    this.initializeHeaderDrag();\n    this.parent.notify(events.headerRefreshed, {\n      rows: this.rows,\n      args: {\n        isFrozen: false\n      }\n    });\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.refreshFreeze = function (obj) {\n    var left = this.parent.getFrozenLeftColumnsCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n    var movable = this.parent.getMovableColumnsCount();\n\n    if (obj.case === 'filter') {\n      var filterRow = this.getTable().querySelector('.e-filterbar');\n\n      if (this.parent.allowFiltering && filterRow && this.getMovableHeader().querySelector('thead')) {\n        var isDraggable = this.parent.isRowDragable();\n        var index = left ? isDraggable ? left + 1 : left : 0;\n        var total = left + movable + (left && isDraggable ? 1 : 0);\n        this.getMovableHeader().querySelector('thead').appendChild(this.filterRenderer(filterRow, index, total));\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          var ele = [].slice.call(this.getMovableHeader().querySelectorAll('thead .e-filterbarcell .e-input'));\n          this.getFrozenRightHeader().querySelector('thead').appendChild(this.filterRenderer(filterRow, index, index + right));\n          this.adjudtFilterBarCell(ele);\n        }\n\n        var elements = [].slice.call(this.getMovableHeader().querySelectorAll('thead .e-filterbarcell .e-input'));\n        this.adjudtFilterBarCell(elements);\n      }\n    } else if (obj.case === 'textwrap' || obj.case === 'refreshHeight') {\n      this.refreshHeight(obj);\n      this.parent.contentModule.refreshScrollOffset();\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.updateFrozenColGroup = function (cols, colGroup) {\n    if (cols && cols.visible === false) {\n      setStyleAttribute(colGroup, {\n        'display': 'none'\n      });\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.adjudtFilterBarCell = function (elements) {\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n      var elem = elements_1[_i];\n      var args = {\n        element: elem,\n        floatLabelType: 'Never',\n        properties: {\n          enableRtl: this.parent.enableRtl,\n          showClearButton: true\n        }\n      };\n      Input.bindInitialEvent(args);\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.renderPanel = function () {\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      _super.prototype.renderPanel.call(this);\n\n      if (this.parent.getFrozenRightColumnsCount()) {\n        this.renderLeftWithRightFrozenPanel();\n      }\n    } else {\n      this.renderRightFrozenPanelAlone();\n    }\n\n    this.getPanel().firstChild.style.display = 'flex';\n    this.getMovableHeader().style.flex = '1';\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.renderTable = function () {\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      _super.prototype.renderTable.call(this);\n    } else {\n      this.renderFrozenRightTableAlone();\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.rfshMovable = function () {\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      _super.prototype.rfshMovable.call(this);\n\n      if (this.parent.getFrozenRightColumnsCount()) {\n        var rows = this.rows;\n        this.getFrozenRightHeader().appendChild(this.createHeader(undefined, 'frozen-right'));\n        this.refreshStackedHdrHgt();\n        this.parent.notify(events.headerRefreshed, {\n          rows: this.rows,\n          args: {\n            renderFrozenRightContent: true\n          }\n        });\n        this.rows = rows;\n      }\n    } else {\n      this.getFrozenRightHeader().appendChild(this.getTable());\n      this.getMovableHeader().appendChild(this.createHeader(undefined, 'movable'));\n      this.refreshStackedHdrHgt();\n      this.addMovableFirstCls();\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.refreshStackedHdrHgt = function () {\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      _super.prototype.refreshStackedHdrHgt.call(this);\n\n      if (this.parent.getFrozenRightColumnsCount()) {\n        this.refreshFrozenRightStackedHdrHgt();\n      }\n    } else {\n      this.refreshFrozenRightStackedHdrHgt();\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.refreshFrozenRightStackedHdrHgt = function () {\n    var fRowSpan;\n    var frTr = [].slice.call(this.getFrozenRightHeader().getElementsByClassName('e-columnheader'));\n    var mTr = [].slice.call(this.getMovableHeader().getElementsByClassName('e-columnheader'));\n\n    for (var i = 0, len = frTr.length; i < len; i++) {\n      fRowSpan = this.getRowSpan(frTr[i]);\n\n      if (fRowSpan.min > 1) {\n        this.updateStackedHdrRowHgt(i, fRowSpan.max, frTr[i], mTr);\n      }\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  ColumnFreezeHeaderRenderer.prototype.updateColgroup = function () {\n    this.updateMovableColGroup();\n\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      this.updateFrozenLeftColGroup();\n    }\n\n    if (this.parent.getFrozenRightColumnsCount()) {\n      this.updateFrozenRightColGroup();\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.renderRightFrozenPanelAlone = function () {\n    var mDiv = this.parent.element.querySelector('.' + literals.movableHeader);\n    var fRightDiv = this.parent.element.querySelector('.e-frozen-right-header');\n\n    _super.prototype.renderFrozenRightPanel.call(this);\n\n    if (isNullOrUndefined(fRightDiv)) {\n      mDiv = this.parent.createElement('div', {\n        className: literals.movableHeader\n      });\n      fRightDiv = this.parent.createElement('div', {\n        className: 'e-frozenheader e-frozen-right-header'\n      });\n      this.getPanel().querySelector('.' + literals.headerContent).appendChild(mDiv);\n      this.getPanel().querySelector('.' + literals.headerContent).appendChild(fRightDiv);\n    }\n\n    _super.prototype.setMovableHeader.call(this, mDiv);\n\n    this.setFrozenRightHeader(fRightDiv);\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.renderLeftWithRightFrozenPanel = function () {\n    var fRightDiv = this.parent.element.querySelector('.e-frozen-right-header');\n\n    _super.prototype.renderFrozenRightPanel.call(this);\n\n    if (isNullOrUndefined(fRightDiv)) {\n      fRightDiv = this.parent.createElement('div', {\n        className: 'e-frozenheader e-frozen-right-header'\n      });\n      this.getPanel().querySelector('.' + literals.headerContent).appendChild(fRightDiv);\n    }\n\n    this.setFrozenRightHeader(fRightDiv);\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.renderFrozenRightTableAlone = function () {\n    _super.prototype.renderFrozenRightTable.call(this);\n\n    this.rfshMovable();\n    this.updateColgroup();\n    this.initializeHeaderDrag();\n    this.initializeHeaderDrop();\n    this.parent.notify(events.headerRefreshed, {\n      rows: this.rows,\n      args: {\n        isFrozen: false\n      }\n    });\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.updateFrozenLeftColGroup = function () {\n    var leftColGroup = this.getFrozenHeader().querySelector(literals.colGroup).children;\n    var start = this.parent.isRowDragable() ? 1 : 0;\n    var count = this.parent.isRowDragable() ? this.parent.getFrozenLeftColumnsCount() + 1 : this.parent.getFrozenLeftColumnsCount();\n\n    for (var i = start; i < leftColGroup.length; i++) {\n      if (i >= count) {\n        remove(leftColGroup[i]);\n        i--;\n      }\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.updateMovableColGroup = function () {\n    var movableColGroup = this.getMovableHeader().querySelector(literals.colGroup).children;\n\n    if (this.parent.isRowDragable()) {\n      remove(movableColGroup[0]);\n    }\n\n    var length = movableColGroup.length;\n    var left = this.parent.getFrozenLeftColumnsCount();\n    var movable = this.parent.getMovableColumnsCount();\n    var k = 0;\n\n    for (var i = 0; i < length; i++, k++) {\n      if (i < left || i >= left + movable) {\n        remove(movableColGroup[k]);\n        k--;\n      }\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.updateFrozenRightColGroup = function () {\n    var isDraggable = this.parent.isRowDragable();\n    var rightColumns = this.parent.getFrozenRightColumns();\n    var rightColGroup = this.getFrozenRightHeader().querySelector(literals.colGroup).children;\n\n    if (this.parent.getFrozenMode() === literals.leftRight && isDraggable) {\n      remove(rightColGroup[0]);\n    }\n\n    var length = rightColGroup.length;\n    var left = this.parent.getFrozenLeftColumnsCount();\n    var movable = this.parent.getMovableColumnsCount();\n    var k = 0;\n\n    for (var i = 0; i < length; i++) {\n      if (i < left + movable) {\n        remove(rightColGroup[0]);\n      } else {\n        this.updateFrozenColGroup(rightColumns[k], rightColGroup[k]);\n        k++;\n      }\n    }\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.setFrozenRightHeader = function (ele) {\n    this.frozenRightHeader = ele;\n  };\n\n  ColumnFreezeHeaderRenderer.prototype.getFrozenRightHeader = function () {\n    return this.frozenRightHeader;\n  };\n\n  return ColumnFreezeHeaderRenderer;\n}(FreezeRender);\n\nexport { ColumnFreezeHeaderRenderer };\n/**\n * ColumnFreezeContentRenderer is used to freeze the columns content at right and left\n *\n * @hidden\n */\n\nvar ColumnFreezeContentRenderer =\n/** @class */\nfunction (_super) {\n  __extends(ColumnFreezeContentRenderer, _super);\n\n  function ColumnFreezeContentRenderer(parent, locator) {\n    var _this = _super.call(this, parent, locator) || this;\n\n    _this.frzCount = 0;\n    _this.isColGroupRefresh = false;\n    _this.widthService = locator.getService('widthService');\n    return _this;\n  }\n\n  ColumnFreezeContentRenderer.prototype.renderPanel = function () {\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      _super.prototype.renderPanel.call(this);\n\n      if (this.parent.getFrozenRightColumnsCount()) {\n        this.renderFrozenLeftWithRightPanel();\n      }\n    } else {\n      this.renderFrozenRightPanelAlone();\n    }\n\n    var display = this.parent.enableVirtualization ? '' : 'flex';\n    this.getPanel().firstChild.style.display = display;\n  };\n\n  ColumnFreezeContentRenderer.prototype.renderTable = function () {\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      _super.prototype.renderTable.call(this);\n\n      if (this.parent.getFrozenRightColumnsCount()) {\n        this.renderFrozenLeftWithRightTable();\n        var display = !this.parent.getVisibleFrozenRightCount() ? 'none' : '';\n        this.renderHorizontalScrollbar('e-frozenscrollbar e-frozen-right-scrollbar', display, true);\n      }\n    } else {\n      this.renderFrozenRightTableAlone();\n      var display = !this.parent.getVisibleFrozenRightCount() ? 'none' : '';\n      this.renderHorizontalScrollbar('e-frozenscrollbar e-frozen-right-scrollbar', display);\n    }\n\n    this.getMovableContent().style.flex = '1';\n  };\n\n  ColumnFreezeContentRenderer.prototype.appendScrollbar = function (frozen, movable, isRight) {\n    var parent = this.parent.createElement('div', {\n      className: 'e-scrollbar',\n      styles: 'display: flex'\n    });\n\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      if (!isRight) {\n        parent.appendChild(frozen);\n        parent.appendChild(movable);\n      } else {\n        this.parent.getContent().querySelector('.e-scrollbar').appendChild(frozen);\n        return;\n      }\n    } else {\n      parent.appendChild(movable);\n      parent.appendChild(frozen);\n    }\n\n    this.parent.getContent().appendChild(parent);\n  };\n\n  ColumnFreezeContentRenderer.prototype.renderFrozenRightPanelAlone = function () {\n    this.renderFrozenRigthPanel();\n    var mDiv = this.parent.element.querySelector('.' + literals.movableContent);\n    var fRightContent = this.parent.element.querySelector('.e-frozen-right-content');\n\n    if (isNullOrUndefined(fRightContent)) {\n      mDiv = this.parent.createElement('div', {\n        className: literals.movableContent\n      });\n      fRightContent = this.parent.createElement('div', {\n        className: 'e-frozencontent e-frozen-right-content'\n      });\n      this.getPanel().querySelector('.' + literals.content).appendChild(mDiv);\n      this.getPanel().querySelector('.' + literals.content).appendChild(fRightContent);\n    }\n\n    _super.prototype.setMovableContent.call(this, mDiv);\n\n    this.setFrozenRightContent(fRightContent);\n  };\n\n  ColumnFreezeContentRenderer.prototype.renderFrozenLeftWithRightPanel = function () {\n    this.renderFrozenRigthPanel();\n    var fRightContent = this.parent.element.querySelector('.e-frozen-right-content');\n\n    if (isNullOrUndefined(fRightContent)) {\n      fRightContent = this.parent.createElement('div', {\n        className: 'e-frozencontent e-frozen-right-content'\n      });\n      this.getPanel().querySelector('.' + literals.content).appendChild(fRightContent);\n    }\n\n    this.setFrozenRightContent(fRightContent);\n  };\n\n  ColumnFreezeContentRenderer.prototype.renderFrozenRightTableAlone = function () {\n    var mTbl;\n\n    if (this.getFrozenRightContent().querySelector('.' + literals.table) == null) {\n      _super.prototype.renderFrozenRightTable.call(this);\n\n      this.getFrozenRightContent().appendChild(this.getTable());\n      mTbl = this.getTable().cloneNode(true);\n      this.getMovableContent().appendChild(mTbl);\n    } else {\n      if (this.parent.frozenRows) {\n        this.parent.getHeaderContent().classList.add('e-frozenhdrcont');\n      }\n\n      this.setTable(this.getFrozenRightContent().querySelector('.' + literals.table));\n      this.setColGroup(this.getFrozenRightHeaderColGroup());\n      mTbl = this.getMovableContent().querySelector('.' + literals.table);\n      this.getFrozenRightContent().querySelector('.' + literals.table).appendChild(this.getColGroup());\n    }\n\n    if (this.getMovableContent().querySelector(literals.colGroup)) {\n      remove(this.getMovableContent().querySelector(literals.colGroup));\n    }\n\n    var colgroup = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.colGroup).cloneNode(true);\n    mTbl.insertBefore(colgroup, mTbl.querySelector(literals.tbody));\n  };\n\n  ColumnFreezeContentRenderer.prototype.renderFrozenLeftWithRightTable = function () {\n    var frozenRight = this.getTable().cloneNode(true);\n    this.getFrozenRightContent().appendChild(frozenRight);\n    var oldColGroup = this.getFrozenRightContent().querySelector(literals.colGroup);\n\n    if (oldColGroup) {\n      remove(oldColGroup);\n    }\n\n    var rightTable = this.getFrozenRightContent().querySelector('.' + literals.table);\n    rightTable.insertBefore(this.getFrozenRightHeaderColGroup(), rightTable.querySelector(literals.tbody));\n  };\n\n  ColumnFreezeContentRenderer.prototype.renderFrozenRightEmptyRowAlone = function (tbody) {\n    _super.prototype.renderFrozenRightEmpty.call(this, tbody);\n\n    this.getMovableContent().querySelector(literals.tbody).innerHTML = '<tr><td></td></tr>';\n    addClass([this.parent.getMovableContentTbody().querySelector('tr')], ['e-emptyrow']);\n    this.getFrozenRightContent().querySelector('.e-emptyrow').querySelector('td').colSpan = this.parent.getVisibleFrozenRightCount();\n\n    if (this.parent.frozenRows) {\n      this.parent.getFrozenRightHeaderTbody().innerHTML = '';\n      this.parent.getMovableHeaderTbody().innerHTML = '';\n    }\n  };\n  /**\n   * @param {string} tableName - specfies the table name\n   * @returns {HTMLElement} returns the element\n   * @hidden\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.getFrozenHeader = function (tableName) {\n    if (tableName === literals.frozenLeft) {\n      return this.parent.getHeaderContent().querySelector('.e-frozen-left-header').querySelector(literals.tbody);\n    } else if (tableName === 'movable') {\n      return this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody);\n    } else {\n      return this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody);\n    }\n  };\n\n  ColumnFreezeContentRenderer.prototype.renderFrozenLeftWithRightEmptyRow = function () {\n    this.getFrozenRightContent().querySelector(literals.tbody).innerHTML = '<tr><td></td></tr>';\n    addClass([this.getFrozenRightContent().querySelector(literals.tbody).querySelector('tr')], ['e-emptyrow']);\n\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody).innerHTML = '';\n    }\n  };\n\n  ColumnFreezeContentRenderer.prototype.setFrozenRightContent = function (ele) {\n    this.frozenRigthContent = ele;\n  };\n\n  ColumnFreezeContentRenderer.prototype.getFrozenRightContent = function () {\n    return this.frozenRigthContent;\n  };\n\n  ColumnFreezeContentRenderer.prototype.getHeaderColGroup = function () {\n    var colGroup = this.parent.element.querySelector('.' + literals.gridHeader).querySelector(literals.colGroup).cloneNode(true);\n\n    if (!this.parent.getFrozenLeftColumnsCount()) {\n      var right = this.getFrozenRightHeaderColGroup();\n      colGroup = right && this.frzCount ? right.cloneNode(true) : colGroup;\n      this.frzCount++;\n      this.isColGroupRefresh = true;\n    }\n\n    return colGroup;\n  };\n\n  ColumnFreezeContentRenderer.prototype.getFrozenRightHeaderColGroup = function () {\n    var col = this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.colGroup);\n\n    if (!col) {\n      col = this.parent.getHeaderContent().querySelector(literals.colGroup);\n    }\n\n    return col.cloneNode(true);\n  };\n\n  ColumnFreezeContentRenderer.prototype.setColGroup = function (colGroup) {\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      return _super.prototype.setColGroup.call(this, colGroup);\n    } else {\n      colGroup = !this.isColGroupRefresh ? this.getFrozenRightHeaderColGroup() : colGroup;\n\n      if (!isNullOrUndefined(colGroup)) {\n        colGroup.id = 'content-' + colGroup.id;\n      }\n\n      this.isColGroupRefresh = false;\n\n      if (this.frzCount === 2) {\n        this.frzCount = 0;\n      }\n\n      return this.colgroup = colGroup;\n    }\n  };\n\n  ColumnFreezeContentRenderer.prototype.renderEmpty = function (tbody) {\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      _super.prototype.renderEmpty.call(this, tbody);\n\n      this.getFrozenContent().querySelector('.e-emptyrow').querySelector('td').colSpan = this.parent.getVisibleFrozenLeftCount();\n\n      if (this.parent.getFrozenRightColumnsCount()) {\n        this.renderFrozenLeftWithRightEmptyRow();\n      }\n    } else {\n      this.renderFrozenRightEmptyRowAlone(tbody);\n    }\n\n    this.parent.notify(events.freezeRender, {\n      case: 'refreshHeight'\n    });\n  };\n\n  ColumnFreezeContentRenderer.prototype.setHeightToContent = function (height) {\n    if (this.parent.getFrozenRightColumnsCount()) {\n      this.getFrozenRightContent().style.height = height.toString() + 'px';\n    }\n\n    if (this.parent.getFrozenLeftColumnsCount()) {\n      this.getFrozenContent().style.height = height.toString() + 'px';\n    }\n\n    this.getMovableContent().style.height = height.toString() + 'px';\n  };\n\n  ColumnFreezeContentRenderer.prototype.actionComplete = function (args) {\n    _super.prototype.actionComplete.call(this, args);\n  };\n\n  ColumnFreezeContentRenderer.prototype.batchAdd = function (args) {\n    _super.prototype.batchAdd.call(this, args);\n  };\n  /**\n   * @param {freezeTable} tableName - specfies the table name\n   * @returns {Element} - returns the element\n   * @hidden\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.getTbody = function (tableName) {\n    var tbody;\n\n    if (tableName === literals.frozenLeft) {\n      tbody = this.parent.getFrozenLeftContentTbody();\n    } else if (tableName === 'movable') {\n      tbody = this.parent.getMovableContentTbody();\n    } else if (tableName === literals.frozenRight) {\n      tbody = this.parent.getFrozenRightContentTbody();\n    }\n\n    return tbody;\n  };\n  /**\n   * @param {NotifyArgs} args - specfies the args\n   * @param {freezeTable} tableName - specfies the freeze table\n   * @returns {void}\n   * @hidden\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.setIsFrozen = function (args, tableName) {\n    args.isFrozen = tableName === literals.frozenLeft || this.parent.getFrozenMode() === 'Right' && tableName === literals.frozenRight;\n    args.renderFrozenRightContent = this.parent.getFrozenMode() === literals.leftRight && tableName === literals.frozenRight;\n    args.renderMovableContent = tableName === 'movable';\n  };\n  /**\n   * @param {Element} tbody - specfies the element\n   * @param {DocumentFragment | HTMLElement} frag - specfies the frag\n   * @param {NotifyArgs} args - specfies the args\n   * @param {freezeTable} tableName - specfies the tableName\n   * @returns {void}\n   * @hidden\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.appendContent = function (tbody, frag, args, tableName) {\n    if (!isNullOrUndefined(this.parent.rowTemplate) && this.parent.isReact) {\n      tbody = frag;\n    } else {\n      tbody.appendChild(frag);\n    }\n\n    if (this.parent.getFrozenMode() === 'Left') {\n      if (tableName === literals.frozenLeft) {\n        this.isLoaded = false;\n        this.getFrozenContent().querySelector('table').appendChild(tbody);\n        this.refreshContentRows(extend({}, args));\n      } else {\n        this.refreshTbody(tbody);\n        this.isLoaded = true;\n        this.getMovableContent().querySelector('table').appendChild(tbody);\n        this.refreshHeight();\n        this.refreshScrollOffset();\n      }\n    } else if (this.parent.getFrozenMode() === 'Right') {\n      if (tableName === 'movable') {\n        this.refreshTbody(tbody);\n        this.isLoaded = true;\n        this.getMovableContent().querySelector('table').appendChild(tbody);\n        this.refreshHeight();\n        this.refreshScrollOffset();\n      } else {\n        this.isLoaded = false;\n        this.getFrozenRightContent().querySelector('table').appendChild(tbody);\n        this.refreshContentRows(extend({}, args));\n      }\n    } else if (this.parent.getFrozenMode() === literals.leftRight) {\n      if (tableName === literals.frozenLeft) {\n        this.isLoaded = false;\n        this.getFrozenContent().querySelector('table').appendChild(tbody);\n        this.refreshContentRows(extend({}, args));\n      } else if (tableName === 'movable') {\n        this.refreshTbody(tbody);\n        this.isLoaded = false;\n        this.getMovableContent().querySelector('table').appendChild(tbody);\n        this.refreshContentRows(extend({}, args));\n      } else {\n        this.isLoaded = true;\n        this.getFrozenRightContent().querySelector('table').appendChild(tbody);\n        this.refreshHeight();\n        this.refreshScrollOffset();\n      }\n    }\n\n    if (this.isInitialRender) {\n      this.parent.scrollModule.setHeight();\n      this.isInitialRender = false;\n    }\n\n    this.widthService.refreshFrozenScrollbar();\n  };\n\n  ColumnFreezeContentRenderer.prototype.refreshHeight = function () {\n    if (!this.parent.allowTextWrap) {\n      this.parent.notify(events.freezeRender, {\n        case: 'refreshHeight'\n      });\n    }\n  };\n  /**\n   * @param {freezeTable} tableName - specifies the table\n   * @returns {void}\n   * @hidden\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.splitRows = function (tableName) {\n    var left = this.parent.getFrozenLeftColumnsCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n\n    if (left && !right) {\n      if (tableName === literals.frozenLeft) {\n        this.freezeRows = this.rows;\n        this.freezeRowElements = this.rowElements;\n      } else {\n        this.movableRows = this.rows;\n      }\n    } else if (!left && right) {\n      if (tableName === 'movable') {\n        this.movableRows = this.rows;\n      } else {\n        this.freezeRows = this.rows;\n        this.freezeRowElements = this.rowElements;\n      }\n    } else if (left && right) {\n      if (tableName === literals.frozenLeft) {\n        this.freezeRows = this.rows;\n        this.freezeRowElements = this.rowElements;\n      } else if (tableName === 'movable') {\n        this.movableRows = this.rows;\n        this.movableRowElements = this.rowElements;\n      } else {\n        this.frozenRightRows = this.rows;\n        this.frozenRightRowElements = this.rowElements;\n      }\n    }\n  };\n  /**\n   * Get the Freeze pane movable content table data row elements\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.getMovableRowElements = function () {\n    if (this.parent.getFrozenMode() !== literals.leftRight) {\n      return this.rowElements;\n    } else {\n      return this.movableRowElements;\n    }\n  };\n  /**\n   * Get the Freeze pane frozen right content table data row elements\n   *\n   * @returns {Element} returns the Element\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.getFrozenRightRowElements = function () {\n    if (this.parent.getFrozenMode() !== literals.leftRight) {\n      return this.freezeRowElements;\n    } else {\n      return this.frozenRightRowElements;\n    }\n  };\n  /**\n   * Get the frozen right row collection in the Freeze pane Grid.\n   *\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>} returns the row object\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.getFrozenRightRows = function () {\n    if (this.parent.getFrozenMode() === literals.leftRight) {\n      if (this.parent.enableInfiniteScrolling) {\n        return this.rightFreezeRows;\n      }\n\n      return this.frozenRightRows;\n    } else {\n      return this.getRows();\n    }\n  };\n  /**\n   * @param {number} index - specifies the index\n   * @returns {Element} returns the element\n   * @hidden\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.getFrozenRightRowByIndex = function (index) {\n    return this.parent.getFrozenRightDataRows()[index];\n  };\n  /**\n   * Get the Row collection in the Grid.\n   *\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>} returns the row object\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.getRows = function () {\n    var infiniteRows = this.getInfiniteRows();\n    return infiniteRows.length ? infiniteRows : this.freezeRows;\n  };\n  /**\n   * Get the content table data row elements\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  ColumnFreezeContentRenderer.prototype.getRowElements = function () {\n    return this.freezeRowElements;\n  };\n\n  return ColumnFreezeContentRenderer;\n}(FreezeContentRender);\n\nexport { ColumnFreezeContentRenderer };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","remove","addClass","isNullOrUndefined","extend","setStyleAttribute","FreezeContentRender","FreezeRender","events","wrap","parentsUntil","addRemoveEventListener","Input","literals","ColumnFreezeHeaderRenderer","_super","parent","locator","_this","call","addEventListener","evtHandlers","event","freezeRender","handler","refreshFreeze","refreshFrozenColumns","setReorderDestinationElement","setReorderElement","columnVisibilityChanged","setVisible","removeEventListener","isDestroyed","args","destEle","ele","setProperties","columns","isFrozenLeft","isFrozenRight","left","getFrozenLeftColumnsCount","right","getFrozenRightColumnsCount","column","freeze","setFrozenCount","cancel","refreshColumns","setWrapHeight","fRows","mRows","isModeChg","isContReset","isStackedHdr","frRows","fRowHgt","mRowHgt","frRowHgt","isWrap","allowTextWrap","tBody","getHeaderContent","querySelector","tbody","wrapMode","textWrapSettings","tHead","height","width","rightHeight","i","len","length","getBoundingClientRect","contains","style","maxHeight","Math","max","childElementCount","allowResizing","resizeModule","isFrozenColResized","setFrozenHeight","refreshHeight","obj","isLeftRight","getFrozenMode","leftRight","frHdr","getFrozenRightHeader","fHdr","frozenHeader","cont","getContent","mHdr","getMovableHeader","hdrClassList","headerContent","classList","case","querySelectorAll","movableContent","frozenContent","add","getElementsByClassName","colDepth","refreshStackedHdrHgt","gObj","displayVal","idx","movable","getMovableColumnsCount","c","clen","getNormalizedColumnIndex","uid","visible","leftColGrp","colGroup","children","rightColGrp","mTblColGrp","movableHeader","refreshUI","filterRenderer","frozenColumn","total","frTbody","refreshFrozenLeftUI","rfshMovable","innerHTML","updateColgroup","widthService","setWidthToColumns","notify","colGroupRefresh","slice","updateDefaultCursor","mTbl","table","mColGroup","cloneNode","insertBefore","frtbl","frtblColGroup","refreshFrozenScrollbar","initializeHeaderDrag","headerRefreshed","rows","isFrozen","filterRow","getTable","allowFiltering","isDraggable","isRowDragable","index","appendChild","adjudtFilterBarCell","elements","contentModule","refreshScrollOffset","updateFrozenColGroup","cols","_i","elements_1","elem","element","floatLabelType","properties","enableRtl","showClearButton","bindInitialEvent","renderPanel","renderLeftWithRightFrozenPanel","renderRightFrozenPanelAlone","getPanel","firstChild","display","flex","renderTable","renderFrozenRightTableAlone","createHeader","undefined","renderFrozenRightContent","addMovableFirstCls","refreshFrozenRightStackedHdrHgt","fRowSpan","frTr","mTr","getRowSpan","min","updateStackedHdrRowHgt","updateMovableColGroup","updateFrozenLeftColGroup","updateFrozenRightColGroup","mDiv","fRightDiv","renderFrozenRightPanel","createElement","className","setMovableHeader","setFrozenRightHeader","renderFrozenRightTable","initializeHeaderDrop","leftColGroup","getFrozenHeader","start","count","movableColGroup","k","rightColumns","getFrozenRightColumns","rightColGroup","frozenRightHeader","ColumnFreezeContentRenderer","frzCount","isColGroupRefresh","getService","renderFrozenLeftWithRightPanel","renderFrozenRightPanelAlone","enableVirtualization","renderFrozenLeftWithRightTable","getVisibleFrozenRightCount","renderHorizontalScrollbar","getMovableContent","appendScrollbar","frozen","isRight","styles","renderFrozenRigthPanel","fRightContent","content","setMovableContent","setFrozenRightContent","getFrozenRightContent","frozenRows","setTable","setColGroup","getFrozenRightHeaderColGroup","getColGroup","colgroup","frozenRight","oldColGroup","rightTable","renderFrozenRightEmptyRowAlone","renderFrozenRightEmpty","getMovableContentTbody","colSpan","getFrozenRightHeaderTbody","getMovableHeaderTbody","tableName","frozenLeft","renderFrozenLeftWithRightEmptyRow","frozenRigthContent","getHeaderColGroup","gridHeader","col","id","renderEmpty","getFrozenContent","getVisibleFrozenLeftCount","setHeightToContent","toString","actionComplete","batchAdd","getTbody","getFrozenLeftContentTbody","getFrozenRightContentTbody","setIsFrozen","renderMovableContent","appendContent","frag","rowTemplate","isReact","isLoaded","refreshContentRows","refreshTbody","isInitialRender","scrollModule","setHeight","splitRows","freezeRows","freezeRowElements","rowElements","movableRows","movableRowElements","frozenRightRows","frozenRightRowElements","getMovableRowElements","getFrozenRightRowElements","getFrozenRightRows","enableInfiniteScrolling","rightFreezeRows","getRows","getFrozenRightRowByIndex","getFrozenRightDataRows","infiniteRows","getInfiniteRows","getRowElements"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin-Dashboard/frontend/node_modules/@syncfusion/ej2-grids/src/grid/renderer/column-freeze-renderer.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { remove, addClass, isNullOrUndefined, extend, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { FreezeContentRender, FreezeRender } from './freeze-renderer';\nimport * as events from '../base/constant';\nimport { wrap, parentsUntil, addRemoveEventListener } from '../base/util';\nimport { Input } from '@syncfusion/ej2-inputs';\nimport * as literals from '../base/string-literals';\n/**\n * ColumnFreezeHeaderRenderer is used to freeze the columns header at right and left\n *\n * @hidden\n */\nvar ColumnFreezeHeaderRenderer = /** @class */ (function (_super) {\n    __extends(ColumnFreezeHeaderRenderer, _super);\n    function ColumnFreezeHeaderRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    ColumnFreezeHeaderRenderer.prototype.addEventListener = function () {\n        this.evtHandlers = [{ event: events.freezeRender, handler: this.refreshFreeze },\n            { event: events.refreshFrozenColumns, handler: this.refreshFrozenColumns },\n            { event: events.setReorderDestinationElement, handler: this.setReorderElement },\n            { event: events.columnVisibilityChanged, handler: this.setVisible }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    };\n    ColumnFreezeHeaderRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n    };\n    ColumnFreezeHeaderRenderer.prototype.setReorderElement = function (args) {\n        this.destEle = args.ele;\n    };\n    ColumnFreezeHeaderRenderer.prototype.refreshFrozenColumns = function (args) {\n        if (!args.parent) {\n            this.parent.setProperties({ columns: args.columns }, true);\n        }\n        var isFrozenLeft = parentsUntil(this.destEle, 'e-frozen-left-header');\n        var isFrozenRight = parentsUntil(this.destEle, 'e-frozen-right-header');\n        var left = this.parent.getFrozenLeftColumnsCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        args.column.freeze = null;\n        if (isFrozenLeft) {\n            args.column.freeze = 'Left';\n        }\n        else if (isFrozenRight) {\n            args.column.freeze = 'Right';\n        }\n        this.parent.setFrozenCount();\n        args.cancel = left !== this.parent.getFrozenLeftColumnsCount() || right !== this.parent.getFrozenRightColumnsCount();\n        if (args.cancel) {\n            this.parent.refreshColumns();\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.setWrapHeight = function (fRows, mRows, isModeChg, isContReset, isStackedHdr, frRows) {\n        var fRowHgt;\n        var mRowHgt;\n        var frRowHgt;\n        var isWrap = this.parent.allowTextWrap;\n        var tBody = this.parent.getHeaderContent().querySelector(literals.tbody);\n        var wrapMode = this.parent.textWrapSettings.wrapMode;\n        var tHead = this.parent.getHeaderContent().querySelector('thead');\n        var height = [];\n        var width = [];\n        var rightHeight = [];\n        for (var i = 0, len = fRows.length; i < len; i++) { //separate loop for performance issue\n            if (!isNullOrUndefined(fRows[i]) && !isNullOrUndefined(mRows[i])) {\n                if (frRows) {\n                    rightHeight[i] = frRows[i].getBoundingClientRect().height;\n                }\n                width[i] = mRows[i].getBoundingClientRect().height;\n                height[i] = fRows[i].getBoundingClientRect().height; //https://pagebuildersandwich.com/increased-plugins-performance-200/\n            }\n        }\n        for (var i = 0, len = fRows.length; i < len; i++) {\n            if (isModeChg && (((wrapMode === 'Content' && tHead.contains(fRows[i]))\n                || (wrapMode === 'Header' && tBody.contains(fRows[i]))) || (wrapMode === 'Header' && isContReset)) || isStackedHdr) {\n                if (frRows[i]) {\n                    frRows[i].style.height = null;\n                }\n                fRows[i].style.height = null;\n                mRows[i].style.height = null;\n            }\n            fRowHgt = height[i];\n            mRowHgt = width[i];\n            frRowHgt = rightHeight[i] ? rightHeight[i] : 0;\n            var maxHeight = Math.max(fRowHgt, mRowHgt, frRowHgt);\n            if (!isNullOrUndefined(fRows[i]) && fRows[i].childElementCount && ((isWrap && fRowHgt < maxHeight) ||\n                (!isWrap && fRowHgt < maxHeight) || (this.parent.allowResizing && this.parent.resizeModule &&\n                this.parent.resizeModule.isFrozenColResized === false))) {\n                fRows[i].style.height = maxHeight + 'px';\n            }\n            if (mRows && !isNullOrUndefined(mRows[i]) && mRows[i].childElementCount && ((isWrap && maxHeight > mRowHgt) ||\n                (!isWrap && maxHeight > mRowHgt) || (this.parent.allowResizing && this.parent.resizeModule &&\n                this.parent.resizeModule.isFrozenColResized === true))) {\n                mRows[i].style.height = maxHeight + 'px';\n            }\n            if (frRows && !isNullOrUndefined(frRows[i]) && frRows[i].childElementCount && ((isWrap && maxHeight > frRowHgt) ||\n                (!isWrap && maxHeight > frRowHgt) || (this.parent.allowResizing && this.parent.resizeModule &&\n                this.parent.resizeModule.isFrozenColResized === true))) {\n                frRows[i].style.height = maxHeight + 'px';\n            }\n        }\n        if (isWrap) {\n            this.setFrozenHeight();\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.refreshHeight = function (obj) {\n        var isLeftRight = this.parent.getFrozenMode() === literals.leftRight;\n        var fRows;\n        var frRows;\n        var mRows;\n        var frHdr = this.getFrozenRightHeader();\n        var fHdr = this.parent.getHeaderContent().querySelector('.' + literals.frozenHeader);\n        var cont = this.parent.getContent();\n        var mHdr = this.getMovableHeader();\n        var hdrClassList = this.parent.getHeaderContent().querySelector('.' + literals.headerContent).classList;\n        var wrapMode = this.parent.textWrapSettings.wrapMode;\n        if (obj.case === 'textwrap') {\n            if (wrapMode !== 'Header' || obj.isModeChg) {\n                if (isLeftRight) {\n                    frRows = cont.querySelector('.e-frozen-right-content').querySelectorAll('tr');\n                }\n                mRows = cont.querySelector('.' + literals.movableContent).querySelectorAll('tr');\n                fRows = cont.querySelector('.' + literals.frozenContent).querySelectorAll('tr');\n                this.setWrapHeight(fRows, mRows, obj.isModeChg, true, false, frRows);\n            }\n            if (wrapMode === 'Content' && this.parent.allowTextWrap) {\n                hdrClassList.add('e-wrap');\n            }\n            else {\n                hdrClassList.remove('e-wrap');\n            }\n            if (wrapMode === 'Both' || obj.isModeChg) {\n                if (isLeftRight) {\n                    frRows = frHdr.querySelectorAll('tr');\n                }\n                fRows = fHdr.querySelectorAll('tr');\n                mRows = mHdr.querySelectorAll('tr');\n            }\n            else {\n                if (isLeftRight) {\n                    frRows = frHdr.querySelector(wrapMode === 'Content' ?\n                        literals.tbody : 'thead').querySelectorAll('tr');\n                }\n                fRows = fHdr.querySelector(wrapMode === 'Content' ?\n                    literals.tbody : 'thead').querySelectorAll('tr');\n                mRows = mHdr.querySelector(wrapMode === 'Content' ?\n                    literals.tbody : 'thead').querySelectorAll('tr');\n            }\n            if (!this.parent.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n                this.setWrapHeight(fRows, mRows, obj.isModeChg, false, this.colDepth > 1, frRows);\n            }\n            this.refreshStackedHdrHgt();\n        }\n        else if (obj.case === 'refreshHeight') {\n            mRows = cont.querySelector('.' + literals.movableContent).querySelectorAll('tr');\n            fRows = cont.querySelector('.' + literals.frozenContent).querySelectorAll('tr');\n            if (isLeftRight) {\n                frRows = cont.querySelector('.e-frozen-right-content').querySelectorAll('tr');\n            }\n            this.setWrapHeight(fRows, mRows, obj.isModeChg, false, false, frRows);\n            if (!this.parent.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n                if (isLeftRight) {\n                    frRows = frHdr.querySelectorAll('tr');\n                }\n                fRows = fHdr.querySelectorAll('tr');\n                mRows = mHdr.querySelectorAll('tr');\n                this.setWrapHeight(fRows, mRows, obj.isModeChg, false, false, frRows);\n            }\n        }\n    };\n    /**\n     * Function to hide header table column based on visible property\n     *\n     * @param {Column[]} columns - specifies the column[]\n     * @returns {void}\n     */\n    ColumnFreezeHeaderRenderer.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        var displayVal;\n        var idx;\n        var left = this.parent.getFrozenLeftColumnsCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        var movable = this.parent.getMovableColumnsCount();\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[c];\n            idx = gObj.getNormalizedColumnIndex(column.uid);\n            displayVal = column.visible ? '' : 'none';\n            if (column.freeze === 'Left' || column.freeze === 'Right') {\n                if (left && !right) {\n                    var leftColGrp = gObj.getHeaderContent().querySelector('.e-frozen-left-header').querySelector(literals.colGroup);\n                    setStyleAttribute(leftColGrp.children[idx], { 'display': displayVal });\n                }\n                else if (!left && right) {\n                    var rightColGrp = gObj.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.colGroup);\n                    setStyleAttribute(rightColGrp.children[idx - movable], { 'display': displayVal });\n                }\n            }\n            else {\n                var mTblColGrp = gObj.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.colGroup);\n                setStyleAttribute(mTblColGrp.children[idx - left], { 'display': displayVal });\n            }\n        }\n        this.refreshUI();\n    };\n    ColumnFreezeHeaderRenderer.prototype.filterRenderer = function (ele, frozenColumn, total) {\n        return _super.prototype.filterRenderer.call(this, ele, frozenColumn, total);\n    };\n    ColumnFreezeHeaderRenderer.prototype.refreshUI = function () {\n        var frTbody;\n        var tbody = this.getMovableHeader().querySelector(literals.tbody);\n        remove(this.getMovableHeader().querySelector('table'));\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n            frTbody = this.getFrozenRightHeader().querySelector(literals.tbody);\n            remove(this.getFrozenRightHeader().querySelector('table'));\n        }\n        _super.prototype.refreshFrozenLeftUI.call(this);\n        this.rfshMovable();\n        this.getMovableHeader().querySelector(literals.tbody).innerHTML = tbody.innerHTML;\n        if (frTbody) {\n            this.getFrozenRightHeader().querySelector(literals.tbody).innerHTML = frTbody.innerHTML;\n        }\n        this.updateColgroup();\n        this.widthService.setWidthToColumns();\n        this.parent.notify(events.colGroupRefresh, {});\n        if (this.parent.allowTextWrap && this.parent.textWrapSettings.wrapMode === 'Header') {\n            wrap([].slice.call(this.getMovableHeader().querySelectorAll('tr.e-columnheader')), true);\n        }\n        this.parent.updateDefaultCursor();\n        var mTbl = this.parent.getContent().querySelector('.' + literals.movableContent).querySelector('.' + literals.table);\n        remove(mTbl.querySelector(literals.colGroup));\n        var mColGroup = (this.getMovableHeader().querySelector(literals.colGroup).cloneNode(true));\n        mTbl.insertBefore(mColGroup, mTbl.querySelector(literals.tbody));\n        if (frTbody) {\n            var frtbl = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('.' + literals.table);\n            remove(frtbl.querySelector(literals.colGroup));\n            var frtblColGroup = (this.getFrozenRightHeader().querySelector(literals.colGroup).cloneNode(true));\n            frtbl.insertBefore(frtblColGroup, frtbl.querySelector(literals.tbody));\n        }\n        this.widthService.refreshFrozenScrollbar();\n        this.initializeHeaderDrag();\n        this.parent.notify(events.headerRefreshed, { rows: this.rows, args: { isFrozen: false } });\n    };\n    ColumnFreezeHeaderRenderer.prototype.refreshFreeze = function (obj) {\n        var left = this.parent.getFrozenLeftColumnsCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        var movable = this.parent.getMovableColumnsCount();\n        if (obj.case === 'filter') {\n            var filterRow = this.getTable().querySelector('.e-filterbar');\n            if (this.parent.allowFiltering && filterRow && this.getMovableHeader().querySelector('thead')) {\n                var isDraggable = this.parent.isRowDragable();\n                var index = left ? isDraggable ? left + 1 : left : 0;\n                var total = left + movable + (left && isDraggable ? 1 : 0);\n                this.getMovableHeader().querySelector('thead')\n                    .appendChild(this.filterRenderer(filterRow, index, total));\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    var ele = [].slice.call(this.getMovableHeader().\n                        querySelectorAll('thead .e-filterbarcell .e-input'));\n                    this.getFrozenRightHeader().querySelector('thead').appendChild(this.filterRenderer(filterRow, index, index + right));\n                    this.adjudtFilterBarCell(ele);\n                }\n                var elements = [].slice.call(this.getMovableHeader().\n                    querySelectorAll('thead .e-filterbarcell .e-input'));\n                this.adjudtFilterBarCell(elements);\n            }\n        }\n        else if (obj.case === 'textwrap' || obj.case === 'refreshHeight') {\n            this.refreshHeight(obj);\n            this.parent.contentModule.refreshScrollOffset();\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.updateFrozenColGroup = function (cols, colGroup) {\n        if (cols && cols.visible === false) {\n            setStyleAttribute(colGroup, { 'display': 'none' });\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.adjudtFilterBarCell = function (elements) {\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var elem = elements_1[_i];\n            var args = {\n                element: elem, floatLabelType: 'Never',\n                properties: {\n                    enableRtl: this.parent.enableRtl, showClearButton: true\n                }\n            };\n            Input.bindInitialEvent(args);\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.renderPanel = function () {\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            _super.prototype.renderPanel.call(this);\n            if (this.parent.getFrozenRightColumnsCount()) {\n                this.renderLeftWithRightFrozenPanel();\n            }\n        }\n        else {\n            this.renderRightFrozenPanelAlone();\n        }\n        this.getPanel().firstChild.style.display = 'flex';\n        this.getMovableHeader().style.flex = '1';\n    };\n    ColumnFreezeHeaderRenderer.prototype.renderTable = function () {\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            _super.prototype.renderTable.call(this);\n        }\n        else {\n            this.renderFrozenRightTableAlone();\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.rfshMovable = function () {\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            _super.prototype.rfshMovable.call(this);\n            if (this.parent.getFrozenRightColumnsCount()) {\n                var rows = this.rows;\n                this.getFrozenRightHeader().appendChild(this.createHeader(undefined, 'frozen-right'));\n                this.refreshStackedHdrHgt();\n                this.parent.notify(events.headerRefreshed, { rows: this.rows, args: { renderFrozenRightContent: true } });\n                this.rows = rows;\n            }\n        }\n        else {\n            this.getFrozenRightHeader().appendChild(this.getTable());\n            this.getMovableHeader().appendChild(this.createHeader(undefined, 'movable'));\n            this.refreshStackedHdrHgt();\n            this.addMovableFirstCls();\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.refreshStackedHdrHgt = function () {\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            _super.prototype.refreshStackedHdrHgt.call(this);\n            if (this.parent.getFrozenRightColumnsCount()) {\n                this.refreshFrozenRightStackedHdrHgt();\n            }\n        }\n        else {\n            this.refreshFrozenRightStackedHdrHgt();\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.refreshFrozenRightStackedHdrHgt = function () {\n        var fRowSpan;\n        var frTr = [].slice.call(this.getFrozenRightHeader().getElementsByClassName('e-columnheader'));\n        var mTr = [].slice.call(this.getMovableHeader().getElementsByClassName('e-columnheader'));\n        for (var i = 0, len = frTr.length; i < len; i++) {\n            fRowSpan = this.getRowSpan(frTr[i]);\n            if (fRowSpan.min > 1) {\n                this.updateStackedHdrRowHgt(i, fRowSpan.max, frTr[i], mTr);\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnFreezeHeaderRenderer.prototype.updateColgroup = function () {\n        this.updateMovableColGroup();\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            this.updateFrozenLeftColGroup();\n        }\n        if (this.parent.getFrozenRightColumnsCount()) {\n            this.updateFrozenRightColGroup();\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.renderRightFrozenPanelAlone = function () {\n        var mDiv = this.parent.element.querySelector('.' + literals.movableHeader);\n        var fRightDiv = this.parent.element.querySelector('.e-frozen-right-header');\n        _super.prototype.renderFrozenRightPanel.call(this);\n        if (isNullOrUndefined(fRightDiv)) {\n            mDiv = this.parent.createElement('div', { className: literals.movableHeader });\n            fRightDiv = this.parent.createElement('div', { className: 'e-frozenheader e-frozen-right-header' });\n            this.getPanel().querySelector('.' + literals.headerContent).appendChild(mDiv);\n            this.getPanel().querySelector('.' + literals.headerContent).appendChild(fRightDiv);\n        }\n        _super.prototype.setMovableHeader.call(this, mDiv);\n        this.setFrozenRightHeader(fRightDiv);\n    };\n    ColumnFreezeHeaderRenderer.prototype.renderLeftWithRightFrozenPanel = function () {\n        var fRightDiv = this.parent.element.querySelector('.e-frozen-right-header');\n        _super.prototype.renderFrozenRightPanel.call(this);\n        if (isNullOrUndefined(fRightDiv)) {\n            fRightDiv = this.parent.createElement('div', { className: 'e-frozenheader e-frozen-right-header' });\n            this.getPanel().querySelector('.' + literals.headerContent).appendChild(fRightDiv);\n        }\n        this.setFrozenRightHeader(fRightDiv);\n    };\n    ColumnFreezeHeaderRenderer.prototype.renderFrozenRightTableAlone = function () {\n        _super.prototype.renderFrozenRightTable.call(this);\n        this.rfshMovable();\n        this.updateColgroup();\n        this.initializeHeaderDrag();\n        this.initializeHeaderDrop();\n        this.parent.notify(events.headerRefreshed, { rows: this.rows, args: { isFrozen: false } });\n    };\n    ColumnFreezeHeaderRenderer.prototype.updateFrozenLeftColGroup = function () {\n        var leftColGroup = this.getFrozenHeader().querySelector(literals.colGroup).children;\n        var start = this.parent.isRowDragable() ? 1 : 0;\n        var count = this.parent.isRowDragable() ? this.parent.getFrozenLeftColumnsCount() + 1\n            : this.parent.getFrozenLeftColumnsCount();\n        for (var i = start; i < leftColGroup.length; i++) {\n            if (i >= count) {\n                remove(leftColGroup[i]);\n                i--;\n            }\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.updateMovableColGroup = function () {\n        var movableColGroup = this.getMovableHeader().querySelector(literals.colGroup).children;\n        if (this.parent.isRowDragable()) {\n            remove(movableColGroup[0]);\n        }\n        var length = movableColGroup.length;\n        var left = this.parent.getFrozenLeftColumnsCount();\n        var movable = this.parent.getMovableColumnsCount();\n        var k = 0;\n        for (var i = 0; i < length; i++, k++) {\n            if (i < left || i >= left + movable) {\n                remove(movableColGroup[k]);\n                k--;\n            }\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.updateFrozenRightColGroup = function () {\n        var isDraggable = this.parent.isRowDragable();\n        var rightColumns = this.parent.getFrozenRightColumns();\n        var rightColGroup = this.getFrozenRightHeader().querySelector(literals.colGroup).children;\n        if (this.parent.getFrozenMode() === literals.leftRight && isDraggable) {\n            remove(rightColGroup[0]);\n        }\n        var length = rightColGroup.length;\n        var left = this.parent.getFrozenLeftColumnsCount();\n        var movable = this.parent.getMovableColumnsCount();\n        var k = 0;\n        for (var i = 0; i < length; i++) {\n            if (i < left + movable) {\n                remove(rightColGroup[0]);\n            }\n            else {\n                this.updateFrozenColGroup(rightColumns[k], rightColGroup[k]);\n                k++;\n            }\n        }\n    };\n    ColumnFreezeHeaderRenderer.prototype.setFrozenRightHeader = function (ele) {\n        this.frozenRightHeader = ele;\n    };\n    ColumnFreezeHeaderRenderer.prototype.getFrozenRightHeader = function () {\n        return this.frozenRightHeader;\n    };\n    return ColumnFreezeHeaderRenderer;\n}(FreezeRender));\nexport { ColumnFreezeHeaderRenderer };\n/**\n * ColumnFreezeContentRenderer is used to freeze the columns content at right and left\n *\n * @hidden\n */\nvar ColumnFreezeContentRenderer = /** @class */ (function (_super) {\n    __extends(ColumnFreezeContentRenderer, _super);\n    function ColumnFreezeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.frzCount = 0;\n        _this.isColGroupRefresh = false;\n        _this.widthService = locator.getService('widthService');\n        return _this;\n    }\n    ColumnFreezeContentRenderer.prototype.renderPanel = function () {\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            _super.prototype.renderPanel.call(this);\n            if (this.parent.getFrozenRightColumnsCount()) {\n                this.renderFrozenLeftWithRightPanel();\n            }\n        }\n        else {\n            this.renderFrozenRightPanelAlone();\n        }\n        var display = this.parent.enableVirtualization ? '' : 'flex';\n        this.getPanel().firstChild.style.display = display;\n    };\n    ColumnFreezeContentRenderer.prototype.renderTable = function () {\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            _super.prototype.renderTable.call(this);\n            if (this.parent.getFrozenRightColumnsCount()) {\n                this.renderFrozenLeftWithRightTable();\n                var display = !this.parent.getVisibleFrozenRightCount() ? 'none' : '';\n                this.renderHorizontalScrollbar('e-frozenscrollbar e-frozen-right-scrollbar', display, true);\n            }\n        }\n        else {\n            this.renderFrozenRightTableAlone();\n            var display = !this.parent.getVisibleFrozenRightCount() ? 'none' : '';\n            this.renderHorizontalScrollbar('e-frozenscrollbar e-frozen-right-scrollbar', display);\n        }\n        this.getMovableContent().style.flex = '1';\n    };\n    ColumnFreezeContentRenderer.prototype.appendScrollbar = function (frozen, movable, isRight) {\n        var parent = this.parent.createElement('div', { className: 'e-scrollbar', styles: 'display: flex' });\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            if (!isRight) {\n                parent.appendChild(frozen);\n                parent.appendChild(movable);\n            }\n            else {\n                this.parent.getContent().querySelector('.e-scrollbar').appendChild(frozen);\n                return;\n            }\n        }\n        else {\n            parent.appendChild(movable);\n            parent.appendChild(frozen);\n        }\n        this.parent.getContent().appendChild(parent);\n    };\n    ColumnFreezeContentRenderer.prototype.renderFrozenRightPanelAlone = function () {\n        this.renderFrozenRigthPanel();\n        var mDiv = this.parent.element.querySelector('.' + literals.movableContent);\n        var fRightContent = this.parent.element.querySelector('.e-frozen-right-content');\n        if (isNullOrUndefined(fRightContent)) {\n            mDiv = this.parent.createElement('div', { className: literals.movableContent });\n            fRightContent = this.parent.createElement('div', { className: 'e-frozencontent e-frozen-right-content' });\n            this.getPanel().querySelector('.' + literals.content).appendChild(mDiv);\n            this.getPanel().querySelector('.' + literals.content).appendChild(fRightContent);\n        }\n        _super.prototype.setMovableContent.call(this, mDiv);\n        this.setFrozenRightContent(fRightContent);\n    };\n    ColumnFreezeContentRenderer.prototype.renderFrozenLeftWithRightPanel = function () {\n        this.renderFrozenRigthPanel();\n        var fRightContent = this.parent.element.querySelector('.e-frozen-right-content');\n        if (isNullOrUndefined(fRightContent)) {\n            fRightContent = this.parent.createElement('div', { className: 'e-frozencontent e-frozen-right-content' });\n            this.getPanel().querySelector('.' + literals.content).appendChild(fRightContent);\n        }\n        this.setFrozenRightContent(fRightContent);\n    };\n    ColumnFreezeContentRenderer.prototype.renderFrozenRightTableAlone = function () {\n        var mTbl;\n        if (this.getFrozenRightContent().querySelector('.' + literals.table) == null) {\n            _super.prototype.renderFrozenRightTable.call(this);\n            this.getFrozenRightContent().appendChild(this.getTable());\n            mTbl = this.getTable().cloneNode(true);\n            this.getMovableContent().appendChild(mTbl);\n        }\n        else {\n            if (this.parent.frozenRows) {\n                this.parent.getHeaderContent().classList.add('e-frozenhdrcont');\n            }\n            this.setTable(this.getFrozenRightContent().querySelector('.' + literals.table));\n            this.setColGroup(this.getFrozenRightHeaderColGroup());\n            mTbl = this.getMovableContent().querySelector('.' + literals.table);\n            this.getFrozenRightContent().querySelector('.' + literals.table).appendChild(this.getColGroup());\n        }\n        if (this.getMovableContent().querySelector(literals.colGroup)) {\n            remove(this.getMovableContent().querySelector(literals.colGroup));\n        }\n        var colgroup = ((this.parent.getHeaderContent().querySelector('.' + literals.movableHeader)\n            .querySelector(literals.colGroup)).cloneNode(true));\n        mTbl.insertBefore(colgroup, mTbl.querySelector(literals.tbody));\n    };\n    ColumnFreezeContentRenderer.prototype.renderFrozenLeftWithRightTable = function () {\n        var frozenRight = this.getTable().cloneNode(true);\n        this.getFrozenRightContent().appendChild(frozenRight);\n        var oldColGroup = this.getFrozenRightContent().querySelector(literals.colGroup);\n        if (oldColGroup) {\n            remove(oldColGroup);\n        }\n        var rightTable = this.getFrozenRightContent().querySelector('.' + literals.table);\n        rightTable.insertBefore(this.getFrozenRightHeaderColGroup(), rightTable.querySelector(literals.tbody));\n    };\n    ColumnFreezeContentRenderer.prototype.renderFrozenRightEmptyRowAlone = function (tbody) {\n        _super.prototype.renderFrozenRightEmpty.call(this, tbody);\n        this.getMovableContent().querySelector(literals.tbody).innerHTML = '<tr><td></td></tr>';\n        addClass([this.parent.getMovableContentTbody().querySelector('tr')], ['e-emptyrow']);\n        this.getFrozenRightContent().querySelector('.e-emptyrow').querySelector('td').colSpan = this.parent.getVisibleFrozenRightCount();\n        if (this.parent.frozenRows) {\n            this.parent.getFrozenRightHeaderTbody().innerHTML = '';\n            this.parent.getMovableHeaderTbody().innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} tableName - specfies the table name\n     * @returns {HTMLElement} returns the element\n     * @hidden\n     */\n    ColumnFreezeContentRenderer.prototype.getFrozenHeader = function (tableName) {\n        if (tableName === literals.frozenLeft) {\n            return this.parent.getHeaderContent().querySelector('.e-frozen-left-header').querySelector(literals.tbody);\n        }\n        else if (tableName === 'movable') {\n            return this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody);\n        }\n        else {\n            return this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody);\n        }\n    };\n    ColumnFreezeContentRenderer.prototype.renderFrozenLeftWithRightEmptyRow = function () {\n        this.getFrozenRightContent().querySelector(literals.tbody).innerHTML = '<tr><td></td></tr>';\n        addClass([this.getFrozenRightContent().querySelector(literals.tbody).querySelector('tr')], ['e-emptyrow']);\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody).innerHTML = '';\n        }\n    };\n    ColumnFreezeContentRenderer.prototype.setFrozenRightContent = function (ele) {\n        this.frozenRigthContent = ele;\n    };\n    ColumnFreezeContentRenderer.prototype.getFrozenRightContent = function () {\n        return this.frozenRigthContent;\n    };\n    ColumnFreezeContentRenderer.prototype.getHeaderColGroup = function () {\n        var colGroup = this.parent.element.querySelector('.' + literals.gridHeader).querySelector(literals.colGroup).cloneNode(true);\n        if (!this.parent.getFrozenLeftColumnsCount()) {\n            var right = this.getFrozenRightHeaderColGroup();\n            colGroup = right && this.frzCount ? right.cloneNode(true) : colGroup;\n            this.frzCount++;\n            this.isColGroupRefresh = true;\n        }\n        return colGroup;\n    };\n    ColumnFreezeContentRenderer.prototype.getFrozenRightHeaderColGroup = function () {\n        var col = this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.colGroup);\n        if (!col) {\n            col = this.parent.getHeaderContent().querySelector(literals.colGroup);\n        }\n        return col.cloneNode(true);\n    };\n    ColumnFreezeContentRenderer.prototype.setColGroup = function (colGroup) {\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            return _super.prototype.setColGroup.call(this, colGroup);\n        }\n        else {\n            colGroup = !this.isColGroupRefresh ? this.getFrozenRightHeaderColGroup() : colGroup;\n            if (!isNullOrUndefined(colGroup)) {\n                colGroup.id = 'content-' + colGroup.id;\n            }\n            this.isColGroupRefresh = false;\n            if (this.frzCount === 2) {\n                this.frzCount = 0;\n            }\n            return this.colgroup = colGroup;\n        }\n    };\n    ColumnFreezeContentRenderer.prototype.renderEmpty = function (tbody) {\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            _super.prototype.renderEmpty.call(this, tbody);\n            this.getFrozenContent().querySelector('.e-emptyrow').querySelector('td').colSpan = this.parent.getVisibleFrozenLeftCount();\n            if (this.parent.getFrozenRightColumnsCount()) {\n                this.renderFrozenLeftWithRightEmptyRow();\n            }\n        }\n        else {\n            this.renderFrozenRightEmptyRowAlone(tbody);\n        }\n        this.parent.notify(events.freezeRender, { case: 'refreshHeight' });\n    };\n    ColumnFreezeContentRenderer.prototype.setHeightToContent = function (height) {\n        if (this.parent.getFrozenRightColumnsCount()) {\n            this.getFrozenRightContent().style.height = height.toString() + 'px';\n        }\n        if (this.parent.getFrozenLeftColumnsCount()) {\n            this.getFrozenContent().style.height = height.toString() + 'px';\n        }\n        this.getMovableContent().style.height = height.toString() + 'px';\n    };\n    ColumnFreezeContentRenderer.prototype.actionComplete = function (args) {\n        _super.prototype.actionComplete.call(this, args);\n    };\n    ColumnFreezeContentRenderer.prototype.batchAdd = function (args) {\n        _super.prototype.batchAdd.call(this, args);\n    };\n    /**\n     * @param {freezeTable} tableName - specfies the table name\n     * @returns {Element} - returns the element\n     * @hidden\n     */\n    ColumnFreezeContentRenderer.prototype.getTbody = function (tableName) {\n        var tbody;\n        if (tableName === literals.frozenLeft) {\n            tbody = this.parent.getFrozenLeftContentTbody();\n        }\n        else if (tableName === 'movable') {\n            tbody = this.parent.getMovableContentTbody();\n        }\n        else if (tableName === literals.frozenRight) {\n            tbody = this.parent.getFrozenRightContentTbody();\n        }\n        return tbody;\n    };\n    /**\n     * @param {NotifyArgs} args - specfies the args\n     * @param {freezeTable} tableName - specfies the freeze table\n     * @returns {void}\n     * @hidden\n     */\n    ColumnFreezeContentRenderer.prototype.setIsFrozen = function (args, tableName) {\n        args.isFrozen = (tableName === literals.frozenLeft || (this.parent.getFrozenMode() === 'Right'\n            && tableName === literals.frozenRight));\n        args.renderFrozenRightContent = this.parent.getFrozenMode() === literals.leftRight && tableName === literals.frozenRight;\n        args.renderMovableContent = tableName === 'movable';\n    };\n    /**\n     * @param {Element} tbody - specfies the element\n     * @param {DocumentFragment | HTMLElement} frag - specfies the frag\n     * @param {NotifyArgs} args - specfies the args\n     * @param {freezeTable} tableName - specfies the tableName\n     * @returns {void}\n     * @hidden\n     */\n    ColumnFreezeContentRenderer.prototype.appendContent = function (tbody, frag, args, tableName) {\n        if (!isNullOrUndefined(this.parent.rowTemplate) && this.parent.isReact) {\n            tbody = frag;\n        }\n        else {\n            tbody.appendChild(frag);\n        }\n        if (this.parent.getFrozenMode() === 'Left') {\n            if (tableName === literals.frozenLeft) {\n                this.isLoaded = false;\n                this.getFrozenContent().querySelector('table').appendChild(tbody);\n                this.refreshContentRows(extend({}, args));\n            }\n            else {\n                this.refreshTbody(tbody);\n                this.isLoaded = true;\n                this.getMovableContent().querySelector('table').appendChild(tbody);\n                this.refreshHeight();\n                this.refreshScrollOffset();\n            }\n        }\n        else if (this.parent.getFrozenMode() === 'Right') {\n            if (tableName === 'movable') {\n                this.refreshTbody(tbody);\n                this.isLoaded = true;\n                this.getMovableContent().querySelector('table').appendChild(tbody);\n                this.refreshHeight();\n                this.refreshScrollOffset();\n            }\n            else {\n                this.isLoaded = false;\n                this.getFrozenRightContent().querySelector('table').appendChild(tbody);\n                this.refreshContentRows(extend({}, args));\n            }\n        }\n        else if (this.parent.getFrozenMode() === literals.leftRight) {\n            if (tableName === literals.frozenLeft) {\n                this.isLoaded = false;\n                this.getFrozenContent().querySelector('table').appendChild(tbody);\n                this.refreshContentRows(extend({}, args));\n            }\n            else if (tableName === 'movable') {\n                this.refreshTbody(tbody);\n                this.isLoaded = false;\n                this.getMovableContent().querySelector('table').appendChild(tbody);\n                this.refreshContentRows(extend({}, args));\n            }\n            else {\n                this.isLoaded = true;\n                this.getFrozenRightContent().querySelector('table').appendChild(tbody);\n                this.refreshHeight();\n                this.refreshScrollOffset();\n            }\n        }\n        if (this.isInitialRender) {\n            this.parent.scrollModule.setHeight();\n            this.isInitialRender = false;\n        }\n        this.widthService.refreshFrozenScrollbar();\n    };\n    ColumnFreezeContentRenderer.prototype.refreshHeight = function () {\n        if (!this.parent.allowTextWrap) {\n            this.parent.notify(events.freezeRender, { case: 'refreshHeight' });\n        }\n    };\n    /**\n     * @param {freezeTable} tableName - specifies the table\n     * @returns {void}\n     * @hidden\n     */\n    ColumnFreezeContentRenderer.prototype.splitRows = function (tableName) {\n        var left = this.parent.getFrozenLeftColumnsCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        if (left && !right) {\n            if (tableName === literals.frozenLeft) {\n                this.freezeRows = this.rows;\n                this.freezeRowElements = this.rowElements;\n            }\n            else {\n                this.movableRows = this.rows;\n            }\n        }\n        else if (!left && right) {\n            if (tableName === 'movable') {\n                this.movableRows = this.rows;\n            }\n            else {\n                this.freezeRows = this.rows;\n                this.freezeRowElements = this.rowElements;\n            }\n        }\n        else if (left && right) {\n            if (tableName === literals.frozenLeft) {\n                this.freezeRows = this.rows;\n                this.freezeRowElements = this.rowElements;\n            }\n            else if (tableName === 'movable') {\n                this.movableRows = this.rows;\n                this.movableRowElements = this.rowElements;\n            }\n            else {\n                this.frozenRightRows = this.rows;\n                this.frozenRightRowElements = this.rowElements;\n            }\n        }\n    };\n    /**\n     * Get the Freeze pane movable content table data row elements\n     *\n     * @returns {Element} returns the element\n     */\n    ColumnFreezeContentRenderer.prototype.getMovableRowElements = function () {\n        if (this.parent.getFrozenMode() !== literals.leftRight) {\n            return this.rowElements;\n        }\n        else {\n            return this.movableRowElements;\n        }\n    };\n    /**\n     * Get the Freeze pane frozen right content table data row elements\n     *\n     * @returns {Element} returns the Element\n     */\n    ColumnFreezeContentRenderer.prototype.getFrozenRightRowElements = function () {\n        if (this.parent.getFrozenMode() !== literals.leftRight) {\n            return this.freezeRowElements;\n        }\n        else {\n            return this.frozenRightRowElements;\n        }\n    };\n    /**\n     * Get the frozen right row collection in the Freeze pane Grid.\n     *\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>} returns the row object\n     */\n    ColumnFreezeContentRenderer.prototype.getFrozenRightRows = function () {\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n            if (this.parent.enableInfiniteScrolling) {\n                return this.rightFreezeRows;\n            }\n            return this.frozenRightRows;\n        }\n        else {\n            return this.getRows();\n        }\n    };\n    /**\n     * @param {number} index - specifies the index\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    ColumnFreezeContentRenderer.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.parent.getFrozenRightDataRows()[index];\n    };\n    /**\n     * Get the Row collection in the Grid.\n     *\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>} returns the row object\n     */\n    ColumnFreezeContentRenderer.prototype.getRows = function () {\n        var infiniteRows = this.getInfiniteRows();\n        return infiniteRows.length ? infiniteRows : this.freezeRows;\n    };\n    /**\n     * Get the content table data row elements\n     *\n     * @returns {Element} returns the element\n     */\n    ColumnFreezeContentRenderer.prototype.getRowElements = function () {\n        return this.freezeRowElements;\n    };\n    return ColumnFreezeContentRenderer;\n}(FreezeContentRender));\nexport { ColumnFreezeContentRenderer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}