{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-param */\n\n\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `StochasticIndicator` module is used to render stochastic indicator.\n */\n\nvar StochasticIndicator =\n/** @class */\nfunction (_super) {\n  __extends(StochasticIndicator, _super);\n\n  function StochasticIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the collection of series that represents the stochastic indicator\n   *\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n    _super.prototype.initSeriesCollection.call(this, indicator, chart);\n\n    var periodLine = new Series(indicator, 'targetSeries', {}, true);\n    this.setSeriesProperties(periodLine, indicator, 'PeriodLine', indicator.periodLine.color, indicator.periodLine.width, chart);\n\n    if (indicator.showZones) {\n      var upperSeries = new Series(indicator, 'targetSeries', {}, true);\n      this.setSeriesProperties(upperSeries, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n      var lowerSeries = new Series(indicator, 'targetSeries', {}, true);\n      this.setSeriesProperties(lowerSeries, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n    }\n  };\n  /**\n   * Defines the predictions based on stochastic approach\n   *\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.initDataSource = function (indicator, chart) {\n    var signalCollection = [];\n    var upperCollection = [];\n    var lowerCollection = [];\n    var periodCollection = [];\n    var source = []; //prepare data\n\n    var validData = indicator.points;\n\n    if (validData.length && validData.length >= indicator.period) {\n      if (indicator.showZones) {\n        for (var i = 0; i < validData.length; i++) {\n          upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[2], upperCollection.length));\n          lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[3], lowerCollection.length));\n        }\n      }\n\n      source = this.calculatePeriod(indicator.period, indicator.kPeriod, validData, indicator.targetSeries[1]);\n      periodCollection = this.smaCalculation(indicator.period, indicator.kPeriod, source, indicator.targetSeries[1]);\n      signalCollection = this.smaCalculation(indicator.period + indicator.kPeriod - 1, indicator.dPeriod, source, indicator.targetSeries[0]);\n    }\n\n    this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n    this.setSeriesRange(periodCollection, indicator, indicator.targetSeries[1]);\n\n    if (indicator.showZones) {\n      this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[2]);\n      this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[3]);\n    }\n  };\n  /**\n   * Calculates the SMA Values\n   *\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.smaCalculation = function (period, kPeriod, data, sourceSeries) {\n    var pointCollection = [];\n\n    if (data.length >= period + kPeriod) {\n      var count = period + (kPeriod - 1);\n      var temp = [];\n      var values = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var value = Number(data[i].y);\n        temp.push(value);\n      }\n\n      var length_1 = temp.length;\n\n      while (length_1 >= count) {\n        var sum = 0;\n\n        for (var i = period - 1; i < period + kPeriod - 1; i++) {\n          sum = sum + temp[i];\n        }\n\n        sum = sum / kPeriod;\n        values.push(sum.toFixed(2));\n        temp.splice(0, 1);\n        length_1 = temp.length;\n      }\n\n      var len = count - 1;\n\n      for (var i = 0; i < data.length; i++) {\n        if (!(i < len)) {\n          pointCollection.push(this.getDataPoint(data[i].x, Number(values[i - len]), data[i], sourceSeries, pointCollection.length));\n          data[i].y = Number(values[i - len]);\n        }\n      }\n    }\n\n    return pointCollection;\n  };\n  /**\n   * Calculates the period line values.\n   *\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.calculatePeriod = function (period, kPeriod, data, series) {\n    var lowValues = [];\n    var highValues = [];\n    var closeValues = [];\n    var modifiedSource = [];\n\n    for (var j = 0; j < data.length; j++) {\n      lowValues[j] = data[j].low;\n      highValues[j] = data[j].high;\n      closeValues[j] = data[j].close;\n    }\n\n    if (data.length > period) {\n      var mins = [];\n      var maxs = [];\n\n      for (var i = 0; i < period - 1; ++i) {\n        maxs.push(0);\n        mins.push(0);\n        modifiedSource.push(this.getDataPoint(data[i].x, data[i].close, data[i], series, modifiedSource.length));\n      }\n\n      for (var i = period - 1; i < data.length; ++i) {\n        var min = Number.MAX_VALUE;\n        var max = Number.MIN_VALUE;\n\n        for (var j = 0; j < period; ++j) {\n          min = Math.min(min, lowValues[i - j]);\n          max = Math.max(max, highValues[i - j]);\n        }\n\n        maxs.push(max);\n        mins.push(min);\n      }\n\n      for (var i = period - 1; i < data.length; ++i) {\n        var top_1 = 0;\n        var bottom = 0;\n        top_1 += closeValues[i] - mins[i];\n        bottom += maxs[i] - mins[i];\n        modifiedSource.push(this.getDataPoint(data[i].x, top_1 / bottom * 100, data[i], series, modifiedSource.length));\n      }\n    }\n\n    return modifiedSource;\n  };\n  /**\n   * To destroy the Stocastic Indicator.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.destroy = function () {\n    /**\n     * Destroys the stochastic indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  StochasticIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the indicator.\n     */\n    return 'StochasticIndicator';\n  };\n\n  return StochasticIndicator;\n}(TechnicalAnalysis);\n\nexport { StochasticIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","TechnicalAnalysis","StochasticIndicator","_super","apply","arguments","initSeriesCollection","indicator","chart","call","periodLine","setSeriesProperties","color","width","showZones","upperSeries","upperLine","lowerSeries","lowerLine","initDataSource","signalCollection","upperCollection","lowerCollection","periodCollection","source","validData","points","length","period","i","push","getDataPoint","x","overBought","targetSeries","overSold","calculatePeriod","kPeriod","smaCalculation","dPeriod","setSeriesRange","data","sourceSeries","pointCollection","count","temp","values","value","Number","y","length_1","sum","toFixed","splice","len","series","lowValues","highValues","closeValues","modifiedSource","j","low","high","close","mins","maxs","min","MAX_VALUE","max","MIN_VALUE","Math","top_1","bottom","destroy","getModuleName"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin-Dashboard/frontend/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/stochastic-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `StochasticIndicator` module is used to render stochastic indicator.\n */\nvar StochasticIndicator = /** @class */ (function (_super) {\n    __extends(StochasticIndicator, _super);\n    function StochasticIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the collection of series that represents the stochastic indicator\n     *\n     * @private\n     */\n    StochasticIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n        _super.prototype.initSeriesCollection.call(this, indicator, chart);\n        var periodLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(periodLine, indicator, 'PeriodLine', indicator.periodLine.color, indicator.periodLine.width, chart);\n        if (indicator.showZones) {\n            var upperSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(upperSeries, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n            var lowerSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(lowerSeries, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n        }\n    };\n    /**\n     * Defines the predictions based on stochastic approach\n     *\n     * @private\n     */\n    StochasticIndicator.prototype.initDataSource = function (indicator, chart) {\n        var signalCollection = [];\n        var upperCollection = [];\n        var lowerCollection = [];\n        var periodCollection = [];\n        var source = [];\n        //prepare data\n        var validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            if (indicator.showZones) {\n                for (var i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[2], upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[3], lowerCollection.length));\n                }\n            }\n            source = this.calculatePeriod(indicator.period, indicator.kPeriod, validData, indicator.targetSeries[1]);\n            periodCollection = this.smaCalculation(indicator.period, indicator.kPeriod, source, indicator.targetSeries[1]);\n            signalCollection = this.smaCalculation(indicator.period + indicator.kPeriod - 1, indicator.dPeriod, source, indicator.targetSeries[0]);\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        this.setSeriesRange(periodCollection, indicator, indicator.targetSeries[1]);\n        if (indicator.showZones) {\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[2]);\n            this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[3]);\n        }\n    };\n    /**\n     * Calculates the SMA Values\n     *\n     * @private\n     */\n    StochasticIndicator.prototype.smaCalculation = function (period, kPeriod, data, sourceSeries) {\n        var pointCollection = [];\n        if (data.length >= period + kPeriod) {\n            var count = period + (kPeriod - 1);\n            var temp = [];\n            var values = [];\n            for (var i = 0; i < data.length; i++) {\n                var value = Number(data[i].y);\n                temp.push(value);\n            }\n            var length_1 = temp.length;\n            while (length_1 >= count) {\n                var sum = 0;\n                for (var i = period - 1; i < (period + kPeriod - 1); i++) {\n                    sum = sum + temp[i];\n                }\n                sum = sum / kPeriod;\n                values.push(sum.toFixed(2));\n                temp.splice(0, 1);\n                length_1 = temp.length;\n            }\n            var len = count - 1;\n            for (var i = 0; i < data.length; i++) {\n                if (!(i < len)) {\n                    pointCollection.push(this.getDataPoint(data[i].x, Number(values[i - len]), data[i], sourceSeries, pointCollection.length));\n                    data[i].y = Number((values[i - len]));\n                }\n            }\n        }\n        return pointCollection;\n    };\n    /**\n     * Calculates the period line values.\n     *\n     * @private\n     */\n    StochasticIndicator.prototype.calculatePeriod = function (period, kPeriod, data, series) {\n        var lowValues = [];\n        var highValues = [];\n        var closeValues = [];\n        var modifiedSource = [];\n        for (var j = 0; j < data.length; j++) {\n            lowValues[j] = data[j].low;\n            highValues[j] = data[j].high;\n            closeValues[j] = data[j].close;\n        }\n        if (data.length > period) {\n            var mins = [];\n            var maxs = [];\n            for (var i = 0; i < period - 1; ++i) {\n                maxs.push(0);\n                mins.push(0);\n                modifiedSource.push(this.getDataPoint(data[i].x, data[i].close, data[i], series, modifiedSource.length));\n            }\n            for (var i = period - 1; i < data.length; ++i) {\n                var min = Number.MAX_VALUE;\n                var max = Number.MIN_VALUE;\n                for (var j = 0; j < period; ++j) {\n                    min = Math.min(min, lowValues[i - j]);\n                    max = Math.max(max, highValues[i - j]);\n                }\n                maxs.push(max);\n                mins.push(min);\n            }\n            for (var i = period - 1; i < data.length; ++i) {\n                var top_1 = 0;\n                var bottom = 0;\n                top_1 += closeValues[i] - mins[i];\n                bottom += maxs[i] - mins[i];\n                modifiedSource.push(this.getDataPoint(data[i].x, (top_1 / bottom) * 100, data[i], series, modifiedSource.length));\n            }\n        }\n        return modifiedSource;\n    };\n    /**\n     * To destroy the Stocastic Indicator.\n     *\n     * @returns {void}\n     * @private\n     */\n    StochasticIndicator.prototype.destroy = function () {\n        /**\n         * Destroys the stochastic indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    StochasticIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the indicator.\n         */\n        return 'StochasticIndicator';\n    };\n    return StochasticIndicator;\n}(TechnicalAnalysis));\nexport { StochasticIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}