{"ast":null,"code":"import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { Query, DataManager, Predicate, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { setFormatter, isGroupAdaptive, getColumnByForeignKeyValue, refreshFilteredColsUid } from '../base/util';\nimport * as events from '../base/constant';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * Grid data module is used to generate query and data source.\n *\n * @hidden\n */\n\nvar Data =\n/** @class */\nfunction () {\n  /**\n   * Constructor for data module.\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} serviceLocator - specifies the service locator\n   * @hidden\n   */\n  function Data(parent, serviceLocator) {\n    this.dataState = {\n      isPending: false,\n      resolver: null,\n      group: []\n    };\n    this.foreignKeyDataState = {\n      isPending: false,\n      resolver: null\n    };\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.initDataManager();\n\n    if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n      return;\n    }\n\n    this.parent.on(events.rowsAdded, this.addRows, this);\n    this.parent.on(events.rowPositionChanged, this.reorderRows, this);\n    this.parent.on(events.rowsRemoved, this.removeRows, this);\n    this.parent.on(events.dataSourceModified, this.initDataManager, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.updateData, this.crudActions, this);\n    this.parent.on(events.addDeleteAction, this.getData, this);\n    this.parent.on(events.autoCol, this.refreshFilteredCols, this);\n    this.parent.on(events.columnsPrepared, this.refreshFilteredCols, this);\n  }\n\n  Data.prototype.reorderRows = function (e) {\n    this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n  };\n\n  Data.prototype.getModuleName = function () {\n    return 'data';\n  };\n  /**\n   * The function used to initialize dataManager and external query\n   *\n   * @returns {void}\n   */\n\n\n  Data.prototype.initDataManager = function () {\n    var gObj = this.parent;\n    this.dataManager = gObj.dataSource instanceof DataManager ? gObj.dataSource : isNullOrUndefined(gObj.dataSource) ? new DataManager() : new DataManager(gObj.dataSource);\n\n    if (gObj.isAngular && !(gObj.query instanceof Query)) {\n      gObj.setProperties({\n        query: new Query()\n      }, true);\n    } else {\n      this.isQueryInvokedFromData = true;\n      gObj.query = gObj.query instanceof Query ? gObj.query : new Query();\n    }\n  };\n  /**\n   * The function is used to generate updated Query from Grid model.\n   *\n   * @param {boolean} skipPage - specifies the boolean to skip the page\n   * @returns {Query} returns the Query\n   * @hidden\n   */\n\n\n  Data.prototype.generateQuery = function (skipPage) {\n    var gObj = this.parent;\n    var query = gObj.getQuery().clone();\n\n    if (this.parent.columnQueryMode === 'ExcludeHidden') {\n      query.select(this.parent.getColumns().filter(function (column) {\n        return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined);\n      }).map(function (column) {\n        return column.field;\n      }));\n    } else if (this.parent.columnQueryMode === 'Schema') {\n      var selectQueryFields = [];\n      var columns = this.parent.columns;\n\n      for (var i = 0; i < columns.length; i++) {\n        selectQueryFields.push(columns[i].field);\n      }\n\n      query.select(selectQueryFields);\n    }\n\n    this.filterQuery(query);\n    this.searchQuery(query);\n    this.aggregateQuery(query);\n    this.sortQuery(query);\n\n    if (isGroupAdaptive(this.parent)) {\n      this.virtualGroupPageQuery(query);\n    } else {\n      this.pageQuery(query, skipPage);\n    }\n\n    this.groupQuery(query);\n    return query;\n  };\n  /**\n   * @param {Query} query - specifies the query\n   * @returns {Query} - returns the query\n   * @hidden\n   */\n\n\n  Data.prototype.aggregateQuery = function (query) {\n    var rows = this.parent.aggregates;\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n\n      for (var j = 0; j < row.columns.length; j++) {\n        var cols = row.columns[j];\n        var types = cols.type instanceof Array ? cols.type : [cols.type];\n\n        for (var k = 0; k < types.length; k++) {\n          query.aggregate(types[k].toLowerCase(), cols.field);\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.virtualGroupPageQuery = function (query) {\n    var fName = 'fn';\n\n    if (query.queries.length) {\n      for (var i = 0; i < query.queries.length; i++) {\n        if (query.queries[i][fName] === 'onPage') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.pageQuery = function (query, skipPage) {\n    var gObj = this.parent;\n    var fName = 'fn';\n    var args = {\n      query: query,\n      skipPage: false\n    };\n    gObj.notify(events.setVirtualPageQuery, args);\n\n    if (args.skipPage) {\n      return query;\n    }\n\n    if ((gObj.allowPaging || gObj.enableVirtualization || gObj.enableInfiniteScrolling) && skipPage !== true) {\n      gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n\n      if (gObj.pageSettings.pageCount <= 0) {\n        gObj.pageSettings.pageCount = 8;\n      }\n\n      if (gObj.pageSettings.pageSize <= 0) {\n        gObj.pageSettings.pageSize = 12;\n      }\n\n      if (query.queries.length) {\n        for (var i = 0; i < query.queries.length; i++) {\n          if (query.queries[i][fName] === 'onPage') {\n            query.queries.splice(i, 1);\n          }\n        }\n      }\n\n      if (!isNullOrUndefined(gObj.infiniteScrollModule) && gObj.enableInfiniteScrolling) {\n        this.parent.notify(events.infinitePageQuery, query);\n      } else {\n        query.page(gObj.pageSettings.currentPage, gObj.allowPaging && gObj.pagerModule && gObj.pagerModule.pagerObj.isAllPage && !this.dataManager.dataSource.offline ? null : gObj.pageSettings.pageSize);\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.groupQuery = function (query) {\n    var gObj = this.parent;\n\n    if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n      if (this.parent.groupSettings.enableLazyLoading) {\n        query.lazyLoad.push({\n          key: 'isLazyLoad',\n          value: this.parent.groupSettings.enableLazyLoading\n        });\n      }\n\n      var columns = gObj.groupSettings.columns;\n\n      for (var i = 0, len = columns.length; i < len; i++) {\n        var column = this.getColumnByField(columns[i]);\n\n        if (!column) {\n          this.parent.log('initial_action', {\n            moduleName: 'group',\n            columnName: columns[i]\n          });\n        }\n\n        var isGrpFmt = column.enableGroupByFormat;\n        var format = column.format;\n\n        if (isGrpFmt) {\n          query.group(columns[i], this.formatGroupColumn.bind(this), format);\n        } else {\n          query.group(columns[i], null);\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.sortQuery = function (query) {\n    var gObj = this.parent;\n\n    if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n      var columns = gObj.sortSettings.columns;\n      var sortGrp = [];\n\n      for (var i = columns.length - 1; i > -1; i--) {\n        var col = this.getColumnByField(columns[i].field);\n\n        if (col) {\n          col.setSortDirection(columns[i].direction);\n        } else {\n          this.parent.log('initial_action', {\n            moduleName: 'sort',\n            columnName: columns[i].field\n          });\n          return query;\n        }\n\n        var fn = columns[i].direction;\n\n        if (col.sortComparer) {\n          this.parent.log('grid_sort_comparer');\n          fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[i].direction;\n        }\n\n        if (gObj.groupSettings.columns.indexOf(columns[i].field) === -1) {\n          if (col.isForeignColumn() || col.sortComparer) {\n            query.sortByForeignKey(col.field, fn, undefined, columns[i].direction.toLowerCase());\n          } else {\n            query.sortBy(col.field, fn);\n          }\n        } else {\n          sortGrp.push({\n            direction: fn,\n            field: col.field\n          });\n        }\n      }\n\n      for (var i = 0, len = sortGrp.length; i < len; i++) {\n        if (typeof sortGrp[i].direction === 'string') {\n          query.sortBy(sortGrp[i].field, sortGrp[i].direction);\n        } else {\n          var col = this.getColumnByField(sortGrp[i].field);\n          query.sortByForeignKey(sortGrp[i].field, sortGrp[i].direction, undefined, col.getSortDirection().toLowerCase());\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.searchQuery = function (query, fcolumn, isForeignKey) {\n    var sSettings = this.parent.searchSettings;\n    var fields = sSettings.fields.length ? sSettings.fields : this.getSearchColumnFieldNames();\n    var predicateList = [];\n    var needForeignKeySearch = false;\n\n    if (this.parent.searchSettings.key.length) {\n      needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) {\n        return fields.indexOf(col.field) > -1;\n      });\n      var adaptor = !isForeignKey ? this.dataManager.adaptor : fcolumn.dataSource.adaptor;\n\n      if (needForeignKeySearch || adaptor.getModuleName && adaptor.getModuleName() === 'ODataV4Adaptor') {\n        fields = isForeignKey ? [fcolumn.foreignKeyValue] : fields;\n\n        for (var i = 0; i < fields.length; i++) {\n          var column = isForeignKey ? fcolumn : this.getColumnByField(fields[i]);\n\n          if (column.isForeignColumn() && !isForeignKey) {\n            predicateList = this.fGeneratePredicate(column, predicateList);\n          } else {\n            predicateList.push(new Predicate(fields[i], sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n          }\n        }\n\n        var predList = Predicate.or(predicateList);\n        predList.key = sSettings.key;\n        query.where(predList);\n      } else {\n        query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.filterQuery = function (query, column, skipFoerign) {\n    var gObj = this.parent;\n    var predicateList = [];\n    var actualFilter = [];\n    var foreignColumn = this.parent.getForeignKeyColumns();\n    var foreignColEmpty;\n\n    if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n      var columns = column ? column : gObj.filterSettings.columns;\n      var colType = {};\n\n      for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n        var col = _a[_i];\n        colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n      }\n\n      var foreignCols = [];\n      var defaultFltrCols = [];\n\n      for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n        var col = columns_1[_b];\n        var gridColumn = gObj.getColumnByField(col.field);\n\n        if (isNullOrUndefined(col.type) && gridColumn && (gridColumn.type === 'date' || gridColumn.type === 'datetime')) {\n          col.type = gObj.getColumnByField(col.field).type;\n        }\n\n        if (col.isForeignKey) {\n          foreignCols.push(col);\n        } else {\n          defaultFltrCols.push(col);\n        }\n      }\n\n      if (defaultFltrCols.length) {\n        for (var i = 0, len = defaultFltrCols.length; i < len; i++) {\n          defaultFltrCols[i].uid = defaultFltrCols[i].uid || this.parent.grabColumnByFieldFromAllCols(defaultFltrCols[i].field).uid;\n        }\n\n        var excelPredicate = CheckBoxFilterBase.getPredicate(defaultFltrCols);\n\n        for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n          var prop = _d[_c];\n          predicateList.push(excelPredicate[prop]);\n        }\n      }\n\n      if (foreignCols.length) {\n        for (var _e = 0, foreignCols_1 = foreignCols; _e < foreignCols_1.length; _e++) {\n          var col = foreignCols_1[_e];\n          col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field).uid;\n          var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n\n          if (!column_1) {\n            this.parent.log('initial_action', {\n              moduleName: 'filter',\n              columnName: col.field\n            });\n          }\n\n          if (column_1.isForeignColumn() && getColumnByForeignKeyValue(col.field, foreignColumn) && !skipFoerign) {\n            actualFilter.push(col);\n\n            if (!column_1.columnData.length) {\n              foreignColEmpty = true;\n            }\n\n            predicateList = this.fGeneratePredicate(column_1, predicateList);\n          } else {\n            var excelPredicate = CheckBoxFilterBase.getPredicate(columns);\n\n            for (var _f = 0, _g = Object.keys(excelPredicate); _f < _g.length; _f++) {\n              var prop = _g[_f];\n              predicateList.push(excelPredicate[prop]);\n            }\n          }\n        }\n      }\n\n      if (predicateList.length && !foreignColEmpty) {\n        query.where(Predicate.and(predicateList));\n      } else {\n        this.parent.notify(events.showEmptyGrid, {});\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.fGeneratePredicate = function (col, predicateList) {\n    var fPredicate = {};\n\n    if (col) {\n      this.parent.notify(events.generateQuery, {\n        predicate: fPredicate,\n        column: col\n      });\n\n      if (fPredicate.predicate.predicates.length) {\n        predicateList.push(fPredicate.predicate);\n      }\n    }\n\n    return predicateList;\n  };\n  /**\n   * The function is used to get dataManager promise by executing given Query.\n   *\n   * @param {object} args - specifies the object\n   * @param {string} args.requestType - Defines the request type\n   * @param {string[]} args.foreignKeyData - Defines the foreignKeyData.string\n   * @param {Object} args.data - Defines the data.\n   * @param {number} args.index - Defines the index .\n   * @param {Query} query - Defines the query which will execute along with data processing.\n   * @returns {Promise<Object>} - returns the object\n   * @hidden\n   */\n\n\n  Data.prototype.getData = function (args, query) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = {\n        requestType: ''\n      };\n    }\n\n    var key = this.getKey(args.foreignKeyData && Object.keys(args.foreignKeyData).length ? args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n    this.parent.log('datasource_syntax_mismatch', {\n      dataState: this.parent\n    });\n\n    if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n      var def = this.eventPromise(args, query, key);\n      return def.promise;\n    } else {\n      var crud = void 0;\n\n      switch (args.requestType) {\n        case 'delete':\n          query = query ? query : this.generateQuery(); // eslint-disable-next-line no-case-declarations\n\n          var len = Object.keys(args.data).length;\n\n          if (len === 1) {\n            crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n          } else {\n            var changes = {\n              addedRecords: [],\n              deletedRecords: [],\n              changedRecords: []\n            };\n            changes.deletedRecords = args.data;\n            crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n          }\n\n          break;\n\n        case 'save':\n          query = query ? query : this.generateQuery();\n          args.index = isNullOrUndefined(args.index) ? 0 : args.index;\n          crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n          break;\n      }\n\n      var promise = 'promise';\n      args[promise] = crud; // eslint-disable-next-line no-prototype-builtins\n\n      if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n        return crud.then(function () {\n          return _this.insert(query, args);\n        });\n      } else {\n        return this.insert(query, args);\n      }\n    }\n  };\n\n  Data.prototype.insert = function (query, args) {\n    if (args.requestType === 'save') {\n      this.parent.notify(events.recordAdded, args);\n    }\n\n    return this.executeQuery(query);\n  };\n\n  Data.prototype.executeQuery = function (query) {\n    var _this = this;\n\n    if (this.dataManager.ready) {\n      var deferred_1 = new Deferred();\n      var ready = this.dataManager.ready;\n      ready.then(function () {\n        _this.dataManager.executeQuery(query).then(function (result) {\n          deferred_1.resolve(result);\n        });\n      }).catch(function (e) {\n        deferred_1.reject(e);\n      });\n      return deferred_1.promise;\n    } else {\n      return this.dataManager.executeQuery(query);\n    }\n  };\n\n  Data.prototype.formatGroupColumn = function (value, field) {\n    var serviceLocator = this.serviceLocator;\n    var column = this.getColumnByField(field);\n    var date = value;\n\n    if (!column.type) {\n      column.type = date.getDay ? date.getHours() > 0 || date.getMinutes() > 0 || date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date' : typeof value;\n    }\n\n    if (isNullOrUndefined(column.getFormatter())) {\n      setFormatter(serviceLocator, column);\n    }\n\n    var formatVal = ValueFormatter.prototype.toView(value, column.getFormatter());\n    return formatVal;\n  };\n\n  Data.prototype.crudActions = function (args) {\n    var query = this.generateQuery();\n    var promise = null;\n    var pr = 'promise';\n    var key = this.getKey(args.foreignKeyData && Object.keys(args.foreignKeyData).length ? args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n\n    if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n      this.eventPromise(args, query, key);\n    }\n\n    switch (args.requestType) {\n      case 'save':\n        promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n        break;\n    }\n\n    args[pr] = promise ? promise : args[pr];\n    this.parent.notify(events.crudAction, args);\n  };\n  /**\n   * @param {object} changes - specifies the changes\n   * @param {string} key - specifies the key\n   * @param {object} original - specifies the original data\n   * @param {Query} query - specifies the query\n   * @returns {Promise<Object>} returns the object\n   * @hidden\n   */\n\n\n  Data.prototype.saveChanges = function (changes, key, original, query) {\n    if (query === void 0) {\n      query = this.generateQuery();\n    }\n\n    query.requiresCount();\n\n    if ('result' in this.parent.dataSource) {\n      var deff = new Deferred();\n      var args = {\n        requestType: 'batchsave',\n        changes: changes,\n        key: key,\n        query: query,\n        endEdit: deff.resolve\n      };\n      this.setState({\n        isPending: true,\n        resolver: deff.resolve\n      });\n      this.parent.trigger(events.dataSourceChanged, args);\n      return deff.promise;\n    } else {\n      var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n      return promise;\n    }\n  };\n\n  Data.prototype.getKey = function (keys) {\n    if (keys && keys.length) {\n      return keys[0];\n    }\n\n    return undefined;\n  };\n  /**\n   * @returns {boolean} returns whether its remote data\n   * @hidden\n   */\n\n\n  Data.prototype.isRemote = function () {\n    return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined && this.dataManager.dataSource.url !== '';\n  };\n\n  Data.prototype.addRows = function (e) {\n    for (var i = e.records.length; i > 0; i--) {\n      this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n    }\n  };\n\n  Data.prototype.removeRows = function (e) {\n    var json = this.dataManager.dataSource.json;\n    this.dataManager.dataSource.json = json.filter(function (value) {\n      return e.records.indexOf(value) === -1;\n    });\n  };\n\n  Data.prototype.getColumnByField = function (field) {\n    var col;\n    return this.parent.columnModel.some(function (column) {\n      col = column;\n      return column.field === field;\n    }) && col;\n  };\n\n  Data.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.rowsAdded, this.addRows);\n    this.parent.off(events.rowsRemoved, this.removeRows);\n    this.parent.off(events.dataSourceModified, this.initDataManager);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.updateData, this.crudActions);\n    this.parent.off(events.addDeleteAction, this.getData);\n    this.parent.off(events.autoCol, this.refreshFilteredCols);\n    this.parent.off(events.columnsPrepared, this.refreshFilteredCols);\n  };\n\n  Data.prototype.getState = function () {\n    return this.dataState;\n  };\n\n  Data.prototype.setState = function (state) {\n    return this.dataState = state;\n  };\n\n  Data.prototype.getForeignKeyDataState = function () {\n    return this.foreignKeyDataState;\n  };\n\n  Data.prototype.setForeignKeyDataState = function (state) {\n    this.foreignKeyDataState = state;\n  };\n\n  Data.prototype.getStateEventArgument = function (query) {\n    var adaptr = new UrlAdaptor();\n    var dm = new DataManager({\n      url: '',\n      adaptor: new UrlAdaptor()\n    });\n    var state = adaptr.processQuery(dm, query);\n    var data = JSON.parse(state.data);\n    return extend(data, state.pvtData);\n  };\n\n  Data.prototype.eventPromise = function (args, query, key) {\n    var _this = this;\n\n    var dataArgs = args;\n    var state = this.getStateEventArgument(query);\n    var def = new Deferred();\n    var deff = new Deferred();\n\n    if (args.requestType !== undefined && this.dataState.isDataChanged !== false) {\n      state.action = args;\n\n      if (args.requestType === 'save' || args.requestType === 'delete') {\n        var editArgs_1 = args;\n        editArgs_1.key = key;\n        var promise = 'promise';\n        editArgs_1[promise] = deff.promise;\n        editArgs_1.state = state;\n        this.setState({\n          isPending: true,\n          resolver: deff.resolve\n        });\n        dataArgs.endEdit = deff.resolve;\n        dataArgs.cancelEdit = deff.reject;\n        this.parent.trigger(events.dataSourceChanged, editArgs_1);\n        deff.promise.then(function () {\n          _this.setState({\n            isPending: true,\n            resolver: def.resolve,\n            group: state.group,\n            aggregates: state.aggregates\n          });\n\n          if (editArgs_1.requestType === 'save') {\n            _this.parent.notify(events.recordAdded, editArgs_1);\n          }\n\n          _this.parent.trigger(events.dataStateChange, state);\n        }).catch(function () {\n          return void 0;\n        });\n      } else {\n        this.setState({\n          isPending: true,\n          resolver: def.resolve,\n          group: state.group,\n          aggregates: state.aggregates\n        });\n        this.parent.trigger(events.dataStateChange, state);\n      }\n    } else {\n      this.setState({});\n      def.resolve(this.parent.dataSource);\n    }\n\n    return def;\n  };\n  /**\n   * Gets the columns where searching needs to be performed from the Grid.\n   *\n   * @returns {string[]} returns the searched column field names\n   */\n\n\n  Data.prototype.getSearchColumnFieldNames = function () {\n    var colFieldNames = [];\n    var columns = this.parent.getColumns();\n\n    for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n      var col = columns_2[_i];\n\n      if (col.allowSearching && !isNullOrUndefined(col.field)) {\n        colFieldNames.push(col.field);\n      }\n    }\n\n    return colFieldNames;\n  };\n\n  Data.prototype.refreshFilteredCols = function () {\n    if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n      refreshFilteredColsUid(this.parent, this.parent.filterSettings.columns);\n    }\n  };\n\n  return Data;\n}();\n\nexport { Data };","map":{"version":3,"names":["isNullOrUndefined","extend","Query","DataManager","Predicate","Deferred","UrlAdaptor","setFormatter","isGroupAdaptive","getColumnByForeignKeyValue","refreshFilteredColsUid","events","ValueFormatter","CheckBoxFilterBase","Data","parent","serviceLocator","dataState","isPending","resolver","group","foreignKeyDataState","initDataManager","isDestroyed","getModuleName","on","rowsAdded","addRows","rowPositionChanged","reorderRows","rowsRemoved","removeRows","dataSourceModified","destroy","updateData","crudActions","addDeleteAction","getData","autoCol","refreshFilteredCols","columnsPrepared","prototype","e","dataManager","dataSource","json","splice","toIndex","fromIndex","gObj","isAngular","query","setProperties","isQueryInvokedFromData","generateQuery","skipPage","getQuery","clone","columnQueryMode","select","getColumns","filter","column","isPrimaryKey","visible","field","undefined","map","selectQueryFields","columns","i","length","push","filterQuery","searchQuery","aggregateQuery","sortQuery","virtualGroupPageQuery","pageQuery","groupQuery","rows","aggregates","row","j","cols","types","type","Array","k","aggregate","toLowerCase","fName","queries","args","notify","setVirtualPageQuery","allowPaging","enableVirtualization","enableInfiniteScrolling","pageSettings","currentPage","Math","max","pageCount","pageSize","infiniteScrollModule","infinitePageQuery","page","pagerModule","pagerObj","isAllPage","offline","allowGrouping","groupSettings","enableLazyLoading","lazyLoad","key","value","len","getColumnByField","log","moduleName","columnName","isGrpFmt","enableGroupByFormat","format","formatGroupColumn","bind","allowSorting","sortSettings","sortGrp","col","setSortDirection","direction","fn","sortComparer","isRemote","indexOf","isForeignColumn","sortByForeignKey","sortBy","getSortDirection","fcolumn","isForeignKey","sSettings","searchSettings","fields","getSearchColumnFieldNames","predicateList","needForeignKeySearch","getForeignKeyColumns","some","adaptor","foreignKeyValue","fGeneratePredicate","operator","ignoreCase","ignoreAccent","predList","or","where","search","skipFoerign","actualFilter","foreignColumn","foreignColEmpty","allowFiltering","filterSettings","colType","_i","_a","foreignCols","defaultFltrCols","_b","columns_1","gridColumn","uid","grabColumnByFieldFromAllCols","excelPredicate","getPredicate","_c","_d","Object","keys","prop","_e","foreignCols_1","column_1","grabColumnByUidFromAllCols","columnData","_f","_g","and","showEmptyGrid","fPredicate","predicate","predicates","_this","requestType","getKey","foreignKeyData","getPrimaryKeyFieldNames","def","eventPromise","promise","crud","data","remove","fromTable","changes","addedRecords","deletedRecords","changedRecords","saveChanges","requiresCount","index","insert","isArray","hasOwnProperty","then","recordAdded","executeQuery","ready","deferred_1","result","resolve","catch","reject","date","getDay","getHours","getMinutes","getSeconds","getMilliseconds","getFormatter","formatVal","toView","pr","update","previousData","crudAction","original","deff","endEdit","setState","trigger","dataSourceChanged","url","records","columnModel","off","getState","state","getForeignKeyDataState","setForeignKeyDataState","getStateEventArgument","adaptr","dm","processQuery","JSON","parse","pvtData","dataArgs","isDataChanged","action","editArgs_1","cancelEdit","dataStateChange","colFieldNames","columns_2","allowSearching"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin-Dashboard/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js"],"sourcesContent":["import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { Query, DataManager, Predicate, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { setFormatter, isGroupAdaptive, getColumnByForeignKeyValue, refreshFilteredColsUid } from '../base/util';\nimport * as events from '../base/constant';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * Grid data module is used to generate query and data source.\n *\n * @hidden\n */\nvar Data = /** @class */ (function () {\n    /**\n     * Constructor for data module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the service locator\n     * @hidden\n     */\n    function Data(parent, serviceLocator) {\n        this.dataState = { isPending: false, resolver: null, group: [] };\n        this.foreignKeyDataState = { isPending: false, resolver: null };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.initDataManager();\n        if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n            return;\n        }\n        this.parent.on(events.rowsAdded, this.addRows, this);\n        this.parent.on(events.rowPositionChanged, this.reorderRows, this);\n        this.parent.on(events.rowsRemoved, this.removeRows, this);\n        this.parent.on(events.dataSourceModified, this.initDataManager, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.updateData, this.crudActions, this);\n        this.parent.on(events.addDeleteAction, this.getData, this);\n        this.parent.on(events.autoCol, this.refreshFilteredCols, this);\n        this.parent.on(events.columnsPrepared, this.refreshFilteredCols, this);\n    }\n    Data.prototype.reorderRows = function (e) {\n        this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n    };\n    Data.prototype.getModuleName = function () {\n        return 'data';\n    };\n    /**\n     * The function used to initialize dataManager and external query\n     *\n     * @returns {void}\n     */\n    Data.prototype.initDataManager = function () {\n        var gObj = this.parent;\n        this.dataManager = gObj.dataSource instanceof DataManager ? gObj.dataSource :\n            (isNullOrUndefined(gObj.dataSource) ? new DataManager() : new DataManager(gObj.dataSource));\n        if (gObj.isAngular && !(gObj.query instanceof Query)) {\n            gObj.setProperties({ query: new Query() }, true);\n        }\n        else {\n            this.isQueryInvokedFromData = true;\n            gObj.query = gObj.query instanceof Query ? gObj.query : new Query();\n        }\n    };\n    /**\n     * The function is used to generate updated Query from Grid model.\n     *\n     * @param {boolean} skipPage - specifies the boolean to skip the page\n     * @returns {Query} returns the Query\n     * @hidden\n     */\n    Data.prototype.generateQuery = function (skipPage) {\n        var gObj = this.parent;\n        var query = gObj.getQuery().clone();\n        if (this.parent.columnQueryMode === 'ExcludeHidden') {\n            query.select(this.parent.getColumns().filter(function (column) { return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined); }).map(function (column) { return column.field; }));\n        }\n        else if (this.parent.columnQueryMode === 'Schema') {\n            var selectQueryFields = [];\n            var columns = this.parent.columns;\n            for (var i = 0; i < columns.length; i++) {\n                selectQueryFields.push(columns[i].field);\n            }\n            query.select(selectQueryFields);\n        }\n        this.filterQuery(query);\n        this.searchQuery(query);\n        this.aggregateQuery(query);\n        this.sortQuery(query);\n        if (isGroupAdaptive(this.parent)) {\n            this.virtualGroupPageQuery(query);\n        }\n        else {\n            this.pageQuery(query, skipPage);\n        }\n        this.groupQuery(query);\n        return query;\n    };\n    /**\n     * @param {Query} query - specifies the query\n     * @returns {Query} - returns the query\n     * @hidden\n     */\n    Data.prototype.aggregateQuery = function (query) {\n        var rows = this.parent.aggregates;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            for (var j = 0; j < row.columns.length; j++) {\n                var cols = row.columns[j];\n                var types = cols.type instanceof Array ? cols.type : [cols.type];\n                for (var k = 0; k < types.length; k++) {\n                    query.aggregate(types[k].toLowerCase(), cols.field);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.virtualGroupPageQuery = function (query) {\n        var fName = 'fn';\n        if (query.queries.length) {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i][fName] === 'onPage') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.pageQuery = function (query, skipPage) {\n        var gObj = this.parent;\n        var fName = 'fn';\n        var args = { query: query, skipPage: false };\n        gObj.notify(events.setVirtualPageQuery, args);\n        if (args.skipPage) {\n            return query;\n        }\n        if ((gObj.allowPaging || gObj.enableVirtualization || gObj.enableInfiniteScrolling) && skipPage !== true) {\n            gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n            if (gObj.pageSettings.pageCount <= 0) {\n                gObj.pageSettings.pageCount = 8;\n            }\n            if (gObj.pageSettings.pageSize <= 0) {\n                gObj.pageSettings.pageSize = 12;\n            }\n            if (query.queries.length) {\n                for (var i = 0; i < query.queries.length; i++) {\n                    if (query.queries[i][fName] === 'onPage') {\n                        query.queries.splice(i, 1);\n                    }\n                }\n            }\n            if (!isNullOrUndefined(gObj.infiniteScrollModule) && gObj.enableInfiniteScrolling) {\n                this.parent.notify(events.infinitePageQuery, query);\n            }\n            else {\n                query.page(gObj.pageSettings.currentPage, gObj.allowPaging && gObj.pagerModule &&\n                    gObj.pagerModule.pagerObj.isAllPage && !this.dataManager.dataSource.offline ? null :\n                    gObj.pageSettings.pageSize);\n            }\n        }\n        return query;\n    };\n    Data.prototype.groupQuery = function (query) {\n        var gObj = this.parent;\n        if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n            if (this.parent.groupSettings.enableLazyLoading) {\n                query.lazyLoad.push({ key: 'isLazyLoad', value: this.parent.groupSettings.enableLazyLoading });\n            }\n            var columns = gObj.groupSettings.columns;\n            for (var i = 0, len = columns.length; i < len; i++) {\n                var column = this.getColumnByField(columns[i]);\n                if (!column) {\n                    this.parent.log('initial_action', { moduleName: 'group', columnName: columns[i] });\n                }\n                var isGrpFmt = column.enableGroupByFormat;\n                var format = column.format;\n                if (isGrpFmt) {\n                    query.group(columns[i], this.formatGroupColumn.bind(this), format);\n                }\n                else {\n                    query.group(columns[i], null);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.sortQuery = function (query) {\n        var gObj = this.parent;\n        if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n            var columns = gObj.sortSettings.columns;\n            var sortGrp = [];\n            for (var i = columns.length - 1; i > -1; i--) {\n                var col = this.getColumnByField(columns[i].field);\n                if (col) {\n                    col.setSortDirection(columns[i].direction);\n                }\n                else {\n                    this.parent.log('initial_action', { moduleName: 'sort', columnName: columns[i].field });\n                    return query;\n                }\n                var fn = columns[i].direction;\n                if (col.sortComparer) {\n                    this.parent.log('grid_sort_comparer');\n                    fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[i].direction;\n                }\n                if (gObj.groupSettings.columns.indexOf(columns[i].field) === -1) {\n                    if (col.isForeignColumn() || col.sortComparer) {\n                        query.sortByForeignKey(col.field, fn, undefined, columns[i].direction.toLowerCase());\n                    }\n                    else {\n                        query.sortBy(col.field, fn);\n                    }\n                }\n                else {\n                    sortGrp.push({ direction: fn, field: col.field });\n                }\n            }\n            for (var i = 0, len = sortGrp.length; i < len; i++) {\n                if (typeof sortGrp[i].direction === 'string') {\n                    query.sortBy(sortGrp[i].field, sortGrp[i].direction);\n                }\n                else {\n                    var col = this.getColumnByField(sortGrp[i].field);\n                    query.sortByForeignKey(sortGrp[i].field, sortGrp[i].direction, undefined, col.getSortDirection().toLowerCase());\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.searchQuery = function (query, fcolumn, isForeignKey) {\n        var sSettings = this.parent.searchSettings;\n        var fields = sSettings.fields.length ? sSettings.fields : this.getSearchColumnFieldNames();\n        var predicateList = [];\n        var needForeignKeySearch = false;\n        if (this.parent.searchSettings.key.length) {\n            needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) { return fields.indexOf(col.field) > -1; });\n            var adaptor = !isForeignKey ? this.dataManager.adaptor : fcolumn.dataSource.adaptor;\n            if (needForeignKeySearch || (adaptor.getModuleName &&\n                adaptor.getModuleName() === 'ODataV4Adaptor')) {\n                fields = isForeignKey ? [fcolumn.foreignKeyValue] : fields;\n                for (var i = 0; i < fields.length; i++) {\n                    var column = isForeignKey ? fcolumn : this.getColumnByField(fields[i]);\n                    if (column.isForeignColumn() && !isForeignKey) {\n                        predicateList = this.fGeneratePredicate(column, predicateList);\n                    }\n                    else {\n                        predicateList.push(new Predicate(fields[i], sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n                    }\n                }\n                var predList = Predicate.or(predicateList);\n                predList.key = sSettings.key;\n                query.where(predList);\n            }\n            else {\n                query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n            }\n        }\n        return query;\n    };\n    Data.prototype.filterQuery = function (query, column, skipFoerign) {\n        var gObj = this.parent;\n        var predicateList = [];\n        var actualFilter = [];\n        var foreignColumn = this.parent.getForeignKeyColumns();\n        var foreignColEmpty;\n        if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n            var columns = column ? column : gObj.filterSettings.columns;\n            var colType = {};\n            for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n                var col = _a[_i];\n                colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n            }\n            var foreignCols = [];\n            var defaultFltrCols = [];\n            for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n                var col = columns_1[_b];\n                var gridColumn = gObj.getColumnByField(col.field);\n                if (isNullOrUndefined(col.type) && gridColumn && (gridColumn.type === 'date' || gridColumn.type === 'datetime')) {\n                    col.type = gObj.getColumnByField(col.field).type;\n                }\n                if (col.isForeignKey) {\n                    foreignCols.push(col);\n                }\n                else {\n                    defaultFltrCols.push(col);\n                }\n            }\n            if (defaultFltrCols.length) {\n                for (var i = 0, len = defaultFltrCols.length; i < len; i++) {\n                    defaultFltrCols[i].uid = defaultFltrCols[i].uid ||\n                        this.parent.grabColumnByFieldFromAllCols(defaultFltrCols[i].field).uid;\n                }\n                var excelPredicate = CheckBoxFilterBase.getPredicate(defaultFltrCols);\n                for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n                    var prop = _d[_c];\n                    predicateList.push(excelPredicate[prop]);\n                }\n            }\n            if (foreignCols.length) {\n                for (var _e = 0, foreignCols_1 = foreignCols; _e < foreignCols_1.length; _e++) {\n                    var col = foreignCols_1[_e];\n                    col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field).uid;\n                    var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n                    if (!column_1) {\n                        this.parent.log('initial_action', { moduleName: 'filter', columnName: col.field });\n                    }\n                    if (column_1.isForeignColumn() && getColumnByForeignKeyValue(col.field, foreignColumn) && !skipFoerign) {\n                        actualFilter.push(col);\n                        if (!column_1.columnData.length) {\n                            foreignColEmpty = true;\n                        }\n                        predicateList = this.fGeneratePredicate(column_1, predicateList);\n                    }\n                    else {\n                        var excelPredicate = CheckBoxFilterBase.getPredicate(columns);\n                        for (var _f = 0, _g = Object.keys(excelPredicate); _f < _g.length; _f++) {\n                            var prop = _g[_f];\n                            predicateList.push(excelPredicate[prop]);\n                        }\n                    }\n                }\n            }\n            if (predicateList.length && !foreignColEmpty) {\n                query.where(Predicate.and(predicateList));\n            }\n            else {\n                this.parent.notify(events.showEmptyGrid, {});\n            }\n        }\n        return query;\n    };\n    Data.prototype.fGeneratePredicate = function (col, predicateList) {\n        var fPredicate = {};\n        if (col) {\n            this.parent.notify(events.generateQuery, { predicate: fPredicate, column: col });\n            if (fPredicate.predicate.predicates.length) {\n                predicateList.push(fPredicate.predicate);\n            }\n        }\n        return predicateList;\n    };\n    /**\n     * The function is used to get dataManager promise by executing given Query.\n     *\n     * @param {object} args - specifies the object\n     * @param {string} args.requestType - Defines the request type\n     * @param {string[]} args.foreignKeyData - Defines the foreignKeyData.string\n     * @param {Object} args.data - Defines the data.\n     * @param {number} args.index - Defines the index .\n     * @param {Query} query - Defines the query which will execute along with data processing.\n     * @returns {Promise<Object>} - returns the object\n     * @hidden\n     */\n    Data.prototype.getData = function (args, query) {\n        var _this = this;\n        if (args === void 0) { args = { requestType: '' }; }\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ?\n            args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n        this.parent.log('datasource_syntax_mismatch', { dataState: this.parent });\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            var def = this.eventPromise(args, query, key);\n            return def.promise;\n        }\n        else {\n            var crud = void 0;\n            switch (args.requestType) {\n                case 'delete':\n                    query = query ? query : this.generateQuery();\n                    // eslint-disable-next-line no-case-declarations\n                    var len = Object.keys(args.data).length;\n                    if (len === 1) {\n                        crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n                    }\n                    else {\n                        var changes = {\n                            addedRecords: [],\n                            deletedRecords: [],\n                            changedRecords: []\n                        };\n                        changes.deletedRecords = args.data;\n                        crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n                    }\n                    break;\n                case 'save':\n                    query = query ? query : this.generateQuery();\n                    args.index = isNullOrUndefined(args.index) ? 0 : args.index;\n                    crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n                    break;\n            }\n            var promise = 'promise';\n            args[promise] = crud;\n            // eslint-disable-next-line no-prototype-builtins\n            if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n                return crud.then(function () {\n                    return _this.insert(query, args);\n                });\n            }\n            else {\n                return this.insert(query, args);\n            }\n        }\n    };\n    Data.prototype.insert = function (query, args) {\n        if (args.requestType === 'save') {\n            this.parent.notify(events.recordAdded, args);\n        }\n        return this.executeQuery(query);\n    };\n    Data.prototype.executeQuery = function (query) {\n        var _this = this;\n        if (this.dataManager.ready) {\n            var deferred_1 = new Deferred();\n            var ready = this.dataManager.ready;\n            ready.then(function () {\n                _this.dataManager.executeQuery(query).then(function (result) {\n                    deferred_1.resolve(result);\n                });\n            }).catch(function (e) {\n                deferred_1.reject(e);\n            });\n            return deferred_1.promise;\n        }\n        else {\n            return this.dataManager.executeQuery(query);\n        }\n    };\n    Data.prototype.formatGroupColumn = function (value, field) {\n        var serviceLocator = this.serviceLocator;\n        var column = this.getColumnByField(field);\n        var date = value;\n        if (!column.type) {\n            column.type = date.getDay ? (date.getHours() > 0 || date.getMinutes() > 0 ||\n                date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date') : typeof (value);\n        }\n        if (isNullOrUndefined(column.getFormatter())) {\n            setFormatter(serviceLocator, column);\n        }\n        var formatVal = ValueFormatter.prototype.toView(value, column.getFormatter());\n        return formatVal;\n    };\n    Data.prototype.crudActions = function (args) {\n        var query = this.generateQuery();\n        var promise = null;\n        var pr = 'promise';\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ? args.foreignKeyData :\n            this.parent.getPrimaryKeyFieldNames());\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            this.eventPromise(args, query, key);\n        }\n        switch (args.requestType) {\n            case 'save':\n                promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n                break;\n        }\n        args[pr] = promise ? promise : args[pr];\n        this.parent.notify(events.crudAction, args);\n    };\n    /**\n     * @param {object} changes - specifies the changes\n     * @param {string} key - specifies the key\n     * @param {object} original - specifies the original data\n     * @param {Query} query - specifies the query\n     * @returns {Promise<Object>} returns the object\n     * @hidden\n     */\n    Data.prototype.saveChanges = function (changes, key, original, query) {\n        if (query === void 0) { query = this.generateQuery(); }\n        query.requiresCount();\n        if ('result' in this.parent.dataSource) {\n            var deff = new Deferred();\n            var args = {\n                requestType: 'batchsave', changes: changes, key: key, query: query,\n                endEdit: deff.resolve\n            };\n            this.setState({ isPending: true, resolver: deff.resolve });\n            this.parent.trigger(events.dataSourceChanged, args);\n            return deff.promise;\n        }\n        else {\n            var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n            return promise;\n        }\n    };\n    Data.prototype.getKey = function (keys) {\n        if (keys && keys.length) {\n            return keys[0];\n        }\n        return undefined;\n    };\n    /**\n     * @returns {boolean} returns whether its remote data\n     * @hidden\n     */\n    Data.prototype.isRemote = function () {\n        return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined &&\n            this.dataManager.dataSource.url !== '';\n    };\n    Data.prototype.addRows = function (e) {\n        for (var i = e.records.length; i > 0; i--) {\n            this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n        }\n    };\n    Data.prototype.removeRows = function (e) {\n        var json = this.dataManager.dataSource.json;\n        this.dataManager.dataSource.json = json.filter(function (value) { return e.records.indexOf(value) === -1; });\n    };\n    Data.prototype.getColumnByField = function (field) {\n        var col;\n        return (this.parent.columnModel).some(function (column) {\n            col = column;\n            return column.field === field;\n        }) && col;\n    };\n    Data.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowsAdded, this.addRows);\n        this.parent.off(events.rowsRemoved, this.removeRows);\n        this.parent.off(events.dataSourceModified, this.initDataManager);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.updateData, this.crudActions);\n        this.parent.off(events.addDeleteAction, this.getData);\n        this.parent.off(events.autoCol, this.refreshFilteredCols);\n        this.parent.off(events.columnsPrepared, this.refreshFilteredCols);\n    };\n    Data.prototype.getState = function () {\n        return this.dataState;\n    };\n    Data.prototype.setState = function (state) {\n        return this.dataState = state;\n    };\n    Data.prototype.getForeignKeyDataState = function () {\n        return this.foreignKeyDataState;\n    };\n    Data.prototype.setForeignKeyDataState = function (state) {\n        this.foreignKeyDataState = state;\n    };\n    Data.prototype.getStateEventArgument = function (query) {\n        var adaptr = new UrlAdaptor();\n        var dm = new DataManager({ url: '', adaptor: new UrlAdaptor });\n        var state = adaptr.processQuery(dm, query);\n        var data = JSON.parse(state.data);\n        return extend(data, state.pvtData);\n    };\n    Data.prototype.eventPromise = function (args, query, key) {\n        var _this = this;\n        var dataArgs = args;\n        var state = this.getStateEventArgument(query);\n        var def = new Deferred();\n        var deff = new Deferred();\n        if (args.requestType !== undefined && this.dataState.isDataChanged !== false) {\n            state.action = args;\n            if (args.requestType === 'save' || args.requestType === 'delete') {\n                var editArgs_1 = args;\n                editArgs_1.key = key;\n                var promise = 'promise';\n                editArgs_1[promise] = deff.promise;\n                editArgs_1.state = state;\n                this.setState({ isPending: true, resolver: deff.resolve });\n                dataArgs.endEdit = deff.resolve;\n                dataArgs.cancelEdit = deff.reject;\n                this.parent.trigger(events.dataSourceChanged, editArgs_1);\n                deff.promise.then(function () {\n                    _this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                    if (editArgs_1.requestType === 'save') {\n                        _this.parent.notify(events.recordAdded, editArgs_1);\n                    }\n                    _this.parent.trigger(events.dataStateChange, state);\n                })\n                    .catch(function () { return void 0; });\n            }\n            else {\n                this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                this.parent.trigger(events.dataStateChange, state);\n            }\n        }\n        else {\n            this.setState({});\n            def.resolve(this.parent.dataSource);\n        }\n        return def;\n    };\n    /**\n     * Gets the columns where searching needs to be performed from the Grid.\n     *\n     * @returns {string[]} returns the searched column field names\n     */\n    Data.prototype.getSearchColumnFieldNames = function () {\n        var colFieldNames = [];\n        var columns = this.parent.getColumns();\n        for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n            var col = columns_2[_i];\n            if (col.allowSearching && !isNullOrUndefined(col.field)) {\n                colFieldNames.push(col.field);\n            }\n        }\n        return colFieldNames;\n    };\n    Data.prototype.refreshFilteredCols = function () {\n        if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n            refreshFilteredColsUid(this.parent, this.parent.filterSettings.columns);\n        }\n    };\n    return Data;\n}());\nexport { Data };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}