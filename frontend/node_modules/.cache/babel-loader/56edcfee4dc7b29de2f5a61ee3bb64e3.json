{"ast":null,"code":"import { closest, addClass, select } from '@syncfusion/ej2-base';\nimport { extend, getValue } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { EditRender } from '../renderer/edit-renderer';\nimport { BooleanEditCell } from '../renderer/boolean-edit-cell';\nimport { DropDownEditCell } from '../renderer/dropdown-edit-cell';\nimport { NumericEditCell } from '../renderer/numeric-edit-cell';\nimport { DefaultEditCell } from '../renderer/default-edit-cell';\nimport { InlineEdit } from './inline-edit';\nimport { BatchEdit } from './batch-edit';\nimport { DialogEdit } from './dialog-edit';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { parentsUntil, getComplexFieldID, setComplexFieldID, getScrollBarWidth, setValidationRuels } from '../base/util';\nimport { FormValidator } from '@syncfusion/ej2-inputs';\nimport { DatePickerEditCell } from '../renderer/datepicker-edit-cell';\nimport { calculateRelativeBasedPosition } from '@syncfusion/ej2-popups';\nimport { TemplateEditCell } from '../renderer/template-edit-cell';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { addRemoveEventListener, getColumnModelByFieldName } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Edit` module is used to handle editing actions.\n */\n\nvar Edit =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid editing module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} serviceLocator - specifies the servicelocator\n   * @hidden\n   */\n  function Edit(parent, serviceLocator) {\n    this.editType = {\n      'Inline': InlineEdit,\n      'Normal': InlineEdit,\n      'Batch': BatchEdit,\n      'Dialog': DialogEdit\n    };\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.l10n = this.serviceLocator.getService('localization');\n    this.addEventListener();\n    this.updateEditObj();\n    this.createAlertDlg();\n    this.createConfirmDlg();\n  }\n\n  Edit.prototype.updateColTypeObj = function () {\n    var cols = this.parent.columnModel;\n\n    for (var i = 0; i < cols.length; i++) {\n      if (this.parent.editSettings.template || cols[i].editTemplate) {\n        var templteCell = 'templateedit';\n        cols[i].edit = extend(new Edit.editCellType[templteCell](this.parent), cols[i].edit || {});\n      } else {\n        cols[i].edit = extend(new Edit.editCellType[cols[i].editType && Edit.editCellType[cols[i].editType] ? cols[i].editType : 'defaultedit'](this.parent, this.serviceLocator), cols[i].edit || {});\n      }\n    }\n\n    this.parent.log('primary_column_missing');\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  Edit.prototype.getModuleName = function () {\n    return 'edit';\n  };\n  /**\n   * @param {NotifyArgs} e - specifies the notifyargs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    for (var _i = 0, _a = Object.keys(e.properties); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowAdding':\n        case 'allowDeleting':\n        case 'allowEditing':\n          if (gObj.editSettings.allowAdding || gObj.editSettings.allowEditing || gObj.editSettings.allowDeleting) {\n            this.initialEnd();\n          }\n\n          break;\n\n        case 'mode':\n          this.updateEditObj();\n          gObj.isEdit = false;\n          gObj.refresh();\n          break;\n      }\n    }\n  };\n\n  Edit.prototype.updateEditObj = function () {\n    if (this.editModule) {\n      this.editModule.destroy();\n    }\n\n    this.renderer = new EditRender(this.parent, this.serviceLocator);\n    this.editModule = new this.editType[this.parent.editSettings.mode](this.parent, this.serviceLocator, this.renderer);\n  };\n\n  Edit.prototype.initialEnd = function () {\n    this.updateColTypeObj();\n  };\n  /**\n   * Edits any bound record in the Grid by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.startEdit = function (tr) {\n    var gObj = this.parent;\n\n    if (!gObj.editSettings.allowEditing || gObj.isEdit || gObj.editSettings.mode === 'Batch') {\n      return;\n    }\n\n    this.parent.element.classList.add('e-editing');\n\n    if (!gObj.getSelectedRows().length) {\n      if (!tr) {\n        this.showDialog('EditOperationAlert', this.alertDObj);\n        return;\n      }\n    } else if (!tr) {\n      tr = gObj.getSelectedRows()[0];\n    }\n\n    this.isLastRow = tr.rowIndex === this.parent.getContent().querySelector('tr:last-child').rowIndex;\n\n    if (tr.style.display === 'none') {\n      return;\n    }\n\n    this.editModule.startEdit(tr);\n    this.refreshToolbar();\n    gObj.element.querySelector('.e-gridpopup').style.display = 'none';\n    this.parent.notify('start-edit', {});\n  };\n  /**\n   * @param {Element} tr - specifies the tr element\n   * @param {object} args - specifies the object\n   * @param {Element} args.row -specfifes the row\n   * @param {string} args.requestType - specifies the request type\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.checkLastRow = function (tr, args) {\n    var checkLastRow = this.isLastRow;\n\n    if (this.parent.height !== 'auto' && this.parent.editSettings.newRowPosition === 'Bottom' && args && args.requestType === 'add' && this.parent.getContent().firstElementChild.offsetHeight > this.parent.getContentTable().scrollHeight) {\n      addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), 'e-lastrowadded');\n    } else if (checkLastRow && tr && tr.classList) {\n      addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), 'e-lastrowcell');\n    }\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.closeEdit = function () {\n    if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog && this.parent.element.getElementsByClassName('e-updatedtd').length) {\n      this.showDialog('CancelEdit', this.dialogObj);\n      return;\n    }\n\n    this.parent.element.classList.remove('e-editing');\n    this.editModule.closeEdit();\n    this.refreshToolbar();\n    this.parent.notify(events.closeEdit, {});\n  };\n\n  Edit.prototype.refreshToolbar = function () {\n    this.parent.notify(events.toolbarRefresh, {});\n  };\n  /**\n   * To adds a new row at the top with the given data. When data is not passed, it will add empty rows.\n   * > `editSettings.allowEditing` should be true.\n   *\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   * @returns {void}\n   */\n\n\n  Edit.prototype.addRecord = function (data, index) {\n    if (!this.parent.editSettings.allowAdding) {\n      return;\n    }\n\n    var args = {\n      startEdit: true\n    };\n\n    if (!data) {\n      this.parent.notify(events.virtualScrollAddActionBegin, args);\n    }\n\n    if (args.startEdit) {\n      this.parent.element.classList.add('e-editing');\n      this.editModule.addRecord(data, index);\n      this.refreshToolbar();\n      this.parent.notify('start-add', {});\n    }\n  };\n  /**\n   * Deletes a record with the given options. If fieldname and data are not given, the Grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   *\n   * @param {string} fieldname - Defines the primary key field name of the column.\n   * @param {Object} data - Defines the JSON data record to be deleted.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.deleteRecord = function (fieldname, data) {\n    var gObj = this.parent;\n\n    if (!gObj.editSettings.allowDeleting) {\n      return;\n    }\n\n    if (!data) {\n      if (!gObj.getSelectedRecords().length && isNullOrUndefined(gObj.commandDelIndex)) {\n        this.showDialog('DeleteOperationAlert', this.alertDObj);\n        return;\n      }\n    }\n\n    if (gObj.editSettings.showDeleteConfirmDialog) {\n      this.showDialog('ConfirmDelete', this.dialogObj);\n      return;\n    }\n\n    this.editModule.deleteRecord(fieldname, data);\n  };\n  /**\n   * Deletes a visible row by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.deleteRow = function (tr) {\n    this.deleteRowUid = tr.getAttribute('data-uid');\n    var rowObj = this.parent.getRowObjectFromUID(this.deleteRowUid);\n\n    if (!isNullOrUndefined(rowObj)) {\n      this.deleteRecord(null, rowObj.data);\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.endEdit = function () {\n    if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog && (isNullOrUndefined(this.formObj) || this.formObj.validate())) {\n      this.parent.editModule.saveCell();\n      this.parent.notify(events.editNextValCell, {});\n\n      if (isNullOrUndefined(this.formObj) || this.formObj.validate()) {\n        this.showDialog('BatchSaveConfirm', this.dialogObj);\n        return;\n      }\n    }\n\n    this.endEditing();\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   *\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.updateCell = function (rowIndex, field, value) {\n    this.editModule.updateCell(rowIndex, field, value);\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   *\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.updateRow = function (index, data) {\n    this.editModule.updateRow(index, data);\n  };\n  /**\n   * Resets added, edited, and deleted records in the batch mode.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.batchCancel = function () {\n    this.closeEdit();\n  };\n  /**\n   * Bulk saves added, edited, and deleted records in the batch mode.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.batchSave = function () {\n    this.endEdit();\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   *\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   * @returns {void}\n   */\n\n\n  Edit.prototype.editCell = function (index, field) {\n    this.editModule.editCell(index, field);\n  };\n  /**\n   * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n   *\n   * @returns {boolean} returns whether the form is validated\n   */\n\n\n  Edit.prototype.editFormValidate = function () {\n    var form1 = this.formObj ? this.formObj.validate() : true;\n    var form2 = this.mFormObj ? this.mFormObj.validate() : true;\n    var form3 = this.frFormObj ? this.frFormObj.validate() : true;\n    return form1 && form2 && form3;\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   *\n   * @returns {Object} returns the Object\n   */\n\n\n  Edit.prototype.getBatchChanges = function () {\n    return this.editModule.getBatchChanges ? this.editModule.getBatchChanges() : {};\n  };\n  /**\n   * Gets the current value of the edited component.\n   *\n   * @returns {Object} returns the Object\n   */\n\n\n  Edit.prototype.getCurrentEditCellData = function () {\n    var obj = this.getCurrentEditedData(this.formObj.element, {});\n    return obj[Object.keys(obj)[0]];\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.saveCell = function () {\n    this.editModule.saveCell();\n  };\n\n  Edit.prototype.endEditing = function () {\n    this.parent.element.classList.remove('e-editing');\n    this.editModule.endEdit();\n    this.refreshToolbar();\n  };\n\n  Edit.prototype.showDialog = function (content, obj) {\n    obj.content = '<div>' + this.l10n.getConstant(content) + '</div>';\n    obj.dataBind();\n    obj.show();\n  };\n\n  Edit.prototype.getValueFromType = function (col, value) {\n    var val = value;\n\n    switch (col.type) {\n      case 'number':\n        val = !isNaN(parseFloat(value)) ? parseFloat(value) : null;\n        break;\n\n      case 'boolean':\n        if (col.editType !== 'booleanedit') {\n          val = value === this.l10n.getConstant('True') || value === true ? true : false;\n        }\n\n        break;\n\n      case 'date':\n      case 'datetime':\n        if (col.editType !== 'datepickeredit' && col.editType !== 'datetimepickeredit' && value && value.length) {\n          val = new Date(value);\n        } else if (value === '') {\n          val = null;\n        }\n\n        break;\n    }\n\n    return val;\n  };\n\n  Edit.prototype.destroyToolTip = function () {\n    var elements = [].slice.call(this.parent.element.getElementsByClassName('e-griderror'));\n\n    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n      var elem = elements_1[_i];\n      remove(elem);\n    }\n\n    this.parent.getContent().firstElementChild.style.position = 'relative';\n  };\n\n  Edit.prototype.createConfirmDlg = function () {\n    this.dialogObj = this.dlgWidget([{\n      click: this.dlgOk.bind(this),\n      buttonModel: {\n        content: this.l10n.getConstant('OKButton'),\n        cssClass: 'e-primary',\n        isPrimary: true\n      }\n    }, {\n      click: this.dlgCancel.bind(this),\n      buttonModel: {\n        cssClass: 'e-flat',\n        content: this.l10n.getConstant('CancelButton')\n      }\n    }], 'EditConfirm');\n  };\n\n  Edit.prototype.createAlertDlg = function () {\n    this.alertDObj = this.dlgWidget([{\n      click: this.alertClick.bind(this),\n      buttonModel: {\n        content: this.l10n.getConstant('OKButton'),\n        cssClass: 'e-flat',\n        isPrimary: true\n      }\n    }], 'EditAlert');\n  };\n\n  Edit.prototype.alertClick = function () {\n    this.alertDObj.hide();\n  };\n\n  Edit.prototype.dlgWidget = function (btnOptions, name) {\n    var div = this.parent.createElement('div', {\n      id: this.parent.element.id + name\n    });\n    this.parent.element.appendChild(div);\n    var options = {\n      showCloseIcon: false,\n      isModal: true,\n      visible: false,\n      closeOnEscape: true,\n      target: this.parent.element,\n      width: '320px',\n      animationSettings: {\n        effect: 'None'\n      }\n    };\n    options.buttons = btnOptions;\n    var obj = new Dialog(options);\n    var isStringTemplate = 'isStringTemplate';\n    obj[isStringTemplate] = true;\n    obj.appendTo(div);\n    return obj;\n  };\n\n  Edit.prototype.dlgCancel = function () {\n    this.parent.focusModule.clearIndicator();\n    this.parent.focusModule.restoreFocus();\n    this.dialogObj.hide();\n  };\n\n  Edit.prototype.dlgOk = function () {\n    switch (this.dialogObj.element.querySelector('.e-dlg-content').firstElementChild.innerText) {\n      case this.l10n.getConstant('ConfirmDelete'):\n        this.editModule.deleteRecord();\n        break;\n\n      case this.l10n.getConstant('CancelEdit'):\n        this.editModule.closeEdit();\n        break;\n\n      case this.l10n.getConstant('BatchSaveConfirm'):\n        this.endEditing();\n        break;\n\n      case this.l10n.getConstant('BatchSaveLostChanges'):\n        if (this.parent.editSettings.mode === 'Batch') {\n          this.editModule.addCancelWhilePaging();\n        }\n\n        this.executeAction();\n        break;\n    }\n\n    this.dlgCancel();\n  };\n\n  Edit.prototype.destroyEditComponents = function () {\n    if (this.parent.isEdit) {\n      this.destroyWidgets();\n      this.destroyForm();\n    }\n\n    this.destroy();\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.eventDetails = [{\n      event: events.inBoundModelChanged,\n      handler: this.onPropertyChanged\n    }, {\n      event: events.initialEnd,\n      handler: this.initialEnd\n    }, {\n      event: events.keyPressed,\n      handler: this.keyPressHandler\n    }, {\n      event: events.autoCol,\n      handler: this.updateColTypeObj\n    }, {\n      event: events.tooltipDestroy,\n      handler: this.destroyToolTip\n    }, {\n      event: events.preventBatch,\n      handler: this.preventBatch\n    }, {\n      event: events.destroyForm,\n      handler: this.destroyForm\n    }, {\n      event: events.destroy,\n      handler: this.destroyEditComponents\n    }];\n    addRemoveEventListener(this.parent, this.eventDetails, true, this);\n    this.actionBeginFunction = this.onActionBegin.bind(this);\n    this.actionCompleteFunction = this.actionComplete.bind(this);\n    this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    addRemoveEventListener(this.parent, this.eventDetails, false);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n  };\n\n  Edit.prototype.actionComplete = function (e) {\n    var actions = ['add', 'beginEdit', 'save', 'delete', 'cancel'];\n\n    if (actions.indexOf(e.requestType) < 0) {\n      this.parent.isEdit = false;\n    }\n\n    if (e.requestType === 'batchsave') {\n      this.parent.focusModule.restoreFocus();\n    }\n\n    this.refreshToolbar();\n  };\n  /**\n   * @param {Element} form - specifies the element\n   * @param {Object} editedData - specifies the edited data\n   * @returns {Object} returns the object\n   * @hidden\n   */\n\n\n  Edit.prototype.getCurrentEditedData = function (form, editedData) {\n    var gObj = this.parent;\n\n    if (gObj.editSettings.template) {\n      var elements = [].slice.call(form.elements);\n\n      for (var k = 0; k < elements.length; k++) {\n        if ((elements[k].hasAttribute('name') && elements[k].className !== 'e-multi-hidden' || elements[k].classList.contains('e-multiselect')) && !(elements[k].type === 'hidden' && (parentsUntil(elements[k], 'e-switch-wrapper') || parentsUntil(elements[k], 'e-checkbox-wrapper')))) {\n          var field = elements[k].hasAttribute('name') ? setComplexFieldID(elements[k].getAttribute('name')) : setComplexFieldID(elements[k].getAttribute('id'));\n          var column = gObj.getColumnByField(field) || {\n            field: field,\n            type: elements[k].getAttribute('type')\n          };\n          var value = void 0;\n\n          if (column.type === 'checkbox' || column.type === 'boolean') {\n            value = elements[k].checked;\n          } else if (elements[k].value) {\n            value = elements[k].value;\n\n            if (elements[k].ej2_instances && elements[k].ej2_instances.length && !isNullOrUndefined(elements[k].ej2_instances[0].value)) {\n              elements[k].blur();\n              value = elements[k].ej2_instances[0].value;\n            }\n          } else if (elements[k].ej2_instances) {\n            value = elements[k].ej2_instances[0].value;\n          }\n\n          if (column.edit && typeof column.edit.read === 'string') {\n            value = getValue(column.edit.read, window)(elements[k], value);\n          } else if (column.edit && column.edit.read) {\n            value = column.edit.read(elements[k], value);\n          }\n\n          value = gObj.editModule.getValueFromType(column, value);\n\n          if (elements[k].type === 'radio') {\n            if (elements[k].checked) {\n              DataUtil.setValue(column.field, value, editedData);\n            }\n          } else {\n            DataUtil.setValue(column.field, value, editedData);\n          }\n        }\n      }\n\n      return editedData;\n    }\n\n    var col = gObj.columnModel.filter(function (col) {\n      return col.editTemplate;\n    });\n\n    for (var j = 0; j < col.length; j++) {\n      if (form[getComplexFieldID(col[j].field)]) {\n        var inputElements = [].slice.call(form[getComplexFieldID(col[j].field)]);\n        inputElements = inputElements.length ? inputElements : [form[getComplexFieldID(col[j].field)]];\n        var temp = inputElements.filter(function (e) {\n          return !isNullOrUndefined(e.ej2_instances);\n        });\n\n        if (temp.length === 0) {\n          temp = inputElements.filter(function (e) {\n            return e.hasAttribute('name');\n          });\n        }\n\n        for (var k = 0; k < temp.length; k++) {\n          var value = this.getValue(col[j], temp[k], editedData);\n          DataUtil.setValue(col[j].field, value, editedData);\n        }\n      }\n    }\n\n    var inputs = [].slice.call(form.getElementsByClassName('e-field'));\n\n    for (var i = 0, len = inputs.length; i < len; i++) {\n      var col_1 = gObj.getColumnByUid(inputs[i].getAttribute('e-mappinguid'));\n\n      if (col_1 && col_1.field) {\n        var value = this.getValue(col_1, inputs[i], editedData);\n        DataUtil.setValue(col_1.field, value, editedData);\n      }\n    }\n\n    return editedData;\n  };\n\n  Edit.prototype.getValue = function (col, input, editedData) {\n    var value = input.ej2_instances ? input.ej2_instances[0].value : input.value;\n    var gObj = this.parent;\n    var temp = col.edit.read;\n\n    if (col.type === 'checkbox' || col.type === 'boolean') {\n      value = input.checked;\n    }\n\n    if (typeof temp === 'string') {\n      temp = getValue(temp, window);\n      value = gObj.editModule.getValueFromType(col, temp(input, value));\n    } else {\n      value = gObj.editModule.getValueFromType(col, col.edit.read(input, value));\n    }\n\n    if (isNullOrUndefined(editedData[col.field]) && value === '') {\n      value = editedData[col.field];\n    }\n\n    return value;\n  };\n  /**\n   * @param {NotifyArgs} e - specifies the NotifyArgs\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.onActionBegin = function (e) {\n    if (e.requestType === 'columnstate' && this.parent.isEdit && this.parent.editSettings.mode !== 'Batch') {\n      this.closeEdit();\n    } else {\n      var editRow = this.parent.element.querySelector('.' + literals.editedRow);\n      var addRow = this.parent.element.querySelector('.' + literals.addedRow);\n\n      if (editRow && this.parent.frozenRows && e.requestType === 'virtualscroll' && parseInt(parentsUntil(editRow, literals.row).getAttribute(literals.ariaRowIndex), 10) < this.parent.frozenRows) {\n        return;\n      }\n\n      var restrictedRequestTypes = ['filterafteropen', 'filterbeforeopen', 'filterchoicerequest', 'save', 'infiniteScroll', 'virtualscroll'];\n      var isRestrict = restrictedRequestTypes.indexOf(e.requestType) === -1;\n      var isDestroyVirtualForm = this.parent.enableVirtualization && this.formObj && !this.formObj.isDestroyed && (editRow || addRow || e.requestType === 'cancel') && isRestrict;\n\n      if (!this.parent.enableVirtualization && this.parent.editSettings.mode !== 'Batch' && this.formObj && !this.formObj.isDestroyed && isRestrict && !e.cancel || isDestroyVirtualForm) {\n        this.destroyWidgets();\n        this.destroyForm();\n      }\n    }\n  };\n  /**\n   * @param {Column[]} cols - specfies the column\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.destroyWidgets = function (cols) {\n    var gObj = this.parent;\n\n    if (gObj.editSettings.template) {\n      this.parent.destroyTemplate(['editSettingsTemplate']);\n\n      if (this.parent.isReact) {\n        this.parent.renderTemplates();\n      }\n    }\n\n    cols = cols ? cols : this.parent.getCurrentVisibleColumns(this.parent.enableColumnVirtualization);\n\n    if (cols.some(function (column) {\n      return !isNullOrUndefined(column.editTemplate);\n    })) {\n      this.parent.destroyTemplate(['editTemplate']);\n\n      if (this.parent.isReact) {\n        this.parent.renderTemplates();\n      }\n    }\n\n    for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {\n      var col = cols_1[_i];\n      var temp = col.edit.destroy;\n\n      if (col.edit.destroy) {\n        if (typeof temp === 'string') {\n          temp = getValue(temp, window);\n          temp();\n        } else {\n          col.edit.destroy();\n        }\n      }\n    }\n\n    var elements = [].slice.call(this.formObj.element.elements);\n\n    for (var i = 0; i < elements.length; i++) {\n      if (elements[i].hasAttribute('name')) {\n        if (elements[i].ej2_instances && elements[i].ej2_instances.length && !elements[i].ej2_instances[0].isDestroyed) {\n          elements[i].ej2_instances[0].destroy();\n        }\n      }\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.destroyForm = function () {\n    this.destroyToolTip();\n    var formObjects = [this.formObj, this.mFormObj, this.frFormObj, this.virtualFormObj];\n\n    for (var i = 0; i < formObjects.length; i++) {\n      if (formObjects[i] && formObjects[i].element && !formObjects[i].isDestroyed) {\n        formObjects[i].destroy();\n      }\n    }\n\n    this.destroyToolTip();\n  };\n  /**\n   * To destroy the editing.\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (!gridElement) {\n      return;\n    }\n\n    var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) && gridElement.querySelector('.' + literals.gridContent) ? true : false;\n\n    if (hasGridChild) {\n      this.destroyForm();\n    }\n\n    this.removeEventListener();\n    var elem = this.dialogObj.element;\n\n    if (elem.childElementCount > 0) {\n      this.dialogObj.destroy();\n      remove(elem);\n    }\n\n    elem = this.alertDObj.element;\n\n    if (elem.childElementCount > 0) {\n      this.alertDObj.destroy();\n      remove(elem);\n    }\n\n    if (!hasGridChild) {\n      return;\n    }\n\n    if (this.editModule) {\n      this.editModule.destroy();\n    }\n  };\n\n  Edit.prototype.keyPressHandler = function (e) {\n    switch (e.action) {\n      case 'insert':\n        this.addRecord();\n        break;\n\n      case 'delete':\n        if ((e.target.tagName !== 'INPUT' || e.target.classList.contains('e-checkselect')) && !document.querySelector('.e-popup-open')) {\n          this.deleteRecord();\n        }\n\n        break;\n\n      case 'f2':\n        this.startEdit();\n        break;\n\n      case 'enter':\n        if (!parentsUntil(e.target, 'e-unboundcelldiv') && this.parent.editSettings.mode !== 'Batch' && (parentsUntil(e.target, literals.gridContent) || this.parent.frozenRows && parentsUntil(e.target, literals.headerContent)) && !document.getElementsByClassName('e-popup-open').length) {\n          e.preventDefault();\n          this.endEdit();\n        }\n\n        break;\n\n      case 'escape':\n        if (this.parent.isEdit) {\n          if (this.parent.editSettings.mode === 'Batch') {\n            this.editModule.escapeCellEdit();\n          } else {\n            this.closeEdit();\n          }\n        }\n\n        break;\n    }\n  };\n\n  Edit.prototype.preventBatch = function (args) {\n    this.preventObj = args;\n    this.showDialog('BatchSaveLostChanges', this.dialogObj);\n  };\n\n  Edit.prototype.executeAction = function () {\n    this.preventObj.handler.call(this.preventObj.instance, this.preventObj.arg1, this.preventObj.arg2, this.preventObj.arg3, this.preventObj.arg4, this.preventObj.arg5, this.preventObj.arg6, this.preventObj.arg7, this.preventObj.arg8);\n  };\n  /**\n   * @param {Column[]} cols - specifies the column\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.applyFormValidation = function (cols) {\n    var gObj = this.parent;\n    var frzCols = gObj.isFrozenGrid();\n    var isInline = this.parent.editSettings.mode === 'Normal';\n    var idx = this.parent.getFrozenMode() === 'Right' && isInline ? 1 : 0;\n    var form = this.parent.editSettings.mode !== 'Dialog' ? gObj.element.getElementsByClassName('e-gridform')[idx] : select('#' + gObj.element.id + '_dialogEdit_wrapper .e-gridform', document);\n    var index = this.parent.getFrozenMode() === 'Right' && isInline ? 0 : 1;\n    var mForm = gObj.element.getElementsByClassName('e-gridform')[index];\n    var rules = {};\n    var mRules = {};\n    var frRules = {};\n    cols = cols ? cols : gObj.getColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (!cols[i].visible && (gObj.editSettings.mode !== 'Dialog' || gObj.groupSettings.columns.indexOf(cols[i].field) === -1 && gObj.editSettings.mode === 'Dialog')) {\n        continue;\n      }\n\n      if (cols[i].validationRules) {\n        setValidationRuels(cols[i], index, rules, mRules, frRules, cols.length);\n      }\n    }\n\n    if (frzCols && this.parent.editSettings.mode !== 'Dialog') {\n      this.parent.editModule.mFormObj = this.createFormObj(mForm, mRules);\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        var frForm = gObj.element.getElementsByClassName('e-gridform')[2];\n        this.parent.editModule.frFormObj = this.createFormObj(frForm, frRules);\n      }\n    } else {\n      rules = extend(rules, mRules, frRules);\n    }\n\n    this.parent.editModule.formObj = this.createFormObj(form, rules);\n  };\n  /**\n   * @param {HTMLFormElement} form - Defined Form element\n   * @param {Object} rules - Defines form rules\n   * @returns {FormValidator} Returns formvalidator instance\n   * @hidden\n   */\n\n\n  Edit.prototype.createFormObj = function (form, rules) {\n    var _this = this;\n\n    return new FormValidator(form, {\n      rules: rules,\n      locale: this.parent.locale,\n      validationComplete: function (args) {\n        _this.validationComplete(args);\n      },\n      customPlacement: function (inputElement, error) {\n        var uid = inputElement.getAttribute('e-mappinguid');\n        var args = {\n          column: _this.parent.getColumnByUid(uid),\n          error: error,\n          inputElement: inputElement,\n          value: inputElement.value\n        };\n\n        _this.valErrorPlacement(inputElement, error);\n\n        _this.parent.notify(events.valCustomPlacement, args);\n      }\n    });\n  };\n\n  Edit.prototype.valErrorPlacement = function (inputElement, error) {\n    if (this.parent.isEdit) {\n      var id = error.getAttribute('for');\n      var elem = this.getElemTable(inputElement).querySelector('#' + id + '_Error');\n\n      if (!elem) {\n        this.createTooltip(inputElement, error, id, '');\n      } else {\n        elem.querySelector('.e-tip-content').innerHTML = error.outerHTML;\n      }\n    }\n  };\n\n  Edit.prototype.getElemTable = function (inputElement) {\n    var isFHdr;\n    var gObj = this.parent;\n    var table;\n\n    if (gObj.editSettings.mode !== 'Dialog') {\n      isFHdr = gObj.frozenRows && gObj.frozenRows > (parseInt(closest(inputElement, '.' + literals.row).getAttribute(literals.ariaRowIndex), 10) || 0);\n      var field = inputElement.name;\n      var col = void 0;\n\n      if (field) {\n        col = getColumnModelByFieldName(this.parent, setComplexFieldID(field));\n      }\n\n      if (col && gObj.isFrozenGrid()) {\n        if (col.getFreezeTableName() === 'frozen-left') {\n          table = isFHdr ? gObj.getFrozenVirtualHeader().querySelector('table') : gObj.getFrozenVirtualContent().querySelector('table');\n        } else if (col.getFreezeTableName() === 'frozen-right') {\n          table = isFHdr ? gObj.getFrozenRightHeader().querySelector('table') : gObj.getFrozenRightContent().querySelector('table');\n        } else if (col.getFreezeTableName() === 'movable') {\n          table = isFHdr ? gObj.getMovableVirtualHeader().querySelector('table') : gObj.getMovableVirtualContent().querySelector('table');\n        }\n      } else {\n        table = isFHdr ? gObj.getHeaderTable() : gObj.getContentTable();\n      }\n    } else {\n      table = select('#' + gObj.element.id + '_dialogEdit_wrapper', document);\n    }\n\n    return table;\n  };\n\n  Edit.prototype.resetElemPosition = function (elem, args) {\n    var td = parentsUntil(args.element, literals.rowCell);\n\n    if (td) {\n      var tdRight = td.getBoundingClientRect().right;\n      var elemRight = elem.getBoundingClientRect().right;\n\n      if (elemRight > tdRight) {\n        var offSet = elemRight - tdRight;\n        elem.style.left = elem.offsetLeft - offSet + 'px';\n      }\n    }\n  };\n\n  Edit.prototype.validationComplete = function (args) {\n    if (this.parent.isEdit) {\n      var elem = this.getElemTable(args.element).querySelector('#' + args.inputName + '_Error');\n\n      if (elem) {\n        if (args.status === 'failure') {\n          elem.style.display = '';\n          this.resetElemPosition(elem, args);\n        } else {\n          elem.style.display = 'none';\n        }\n      }\n    }\n  };\n\n  Edit.prototype.createTooltip = function (element, error, name, display) {\n    var column = this.parent.getColumnByField(name);\n    var formObj = this.parent.getFrozenMode() === literals.leftRight && this.parent.editSettings.mode === 'Normal' && column.getFreezeTableName() === literals.frozenRight ? this.frFormObj.element : this.formObj.element;\n    var customForm = parentsUntil(element, 'e-virtual-validation');\n\n    if (customForm) {\n      formObj = this.virtualFormObj.element;\n    }\n\n    var gcontent = this.parent.getContent().firstElementChild;\n    var frzCols = this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount();\n\n    if (frzCols) {\n      gcontent = this.parent.getMovableVirtualContent();\n    }\n\n    var isScroll = gcontent.scrollHeight > gcontent.clientHeight || gcontent.scrollWidth > gcontent.clientWidth;\n    var isInline = this.parent.editSettings.mode !== 'Dialog';\n    var td = closest(element, '.' + literals.rowCell);\n    var row = closest(element, '.' + literals.row);\n    var fCont = this.parent.getContent().querySelector('.' + literals.frozenContent);\n    var isFHdr;\n    var isFHdrLastRow = false;\n    var validationForBottomRowPos;\n    var isBatchModeLastRow = false;\n    var viewPortRowCount = Math.round(this.parent.getContent().clientHeight / this.parent.getRowHeight()) - 1;\n    var rows = !fCont ? [].slice.call(this.parent.getContent().getElementsByClassName(literals.row)) : [].slice.call(this.parent.getFrozenVirtualContent().getElementsByClassName(literals.row));\n\n    if (this.parent.editSettings.mode === 'Batch') {\n      if (viewPortRowCount > 1 && rows.length >= viewPortRowCount && rows[rows.length - 1].getAttribute(literals.ariaRowIndex) === row.getAttribute(literals.ariaRowIndex)) {\n        isBatchModeLastRow = true;\n      }\n    }\n\n    if (isInline) {\n      if (this.parent.frozenRows) {\n        var fHeraderRows = frzCols ? this.parent.getFrozenVirtualHeader().querySelector(literals.tbody).children : this.parent.getHeaderTable().querySelector(literals.tbody).children;\n        isFHdr = fHeraderRows.length > (parseInt(row.getAttribute(literals.ariaRowIndex), 10) || 0);\n        isFHdrLastRow = isFHdr && parseInt(row.getAttribute(literals.ariaRowIndex), 10) === fHeraderRows.length - 1;\n      }\n\n      if (isFHdrLastRow || viewPortRowCount > 1 && rows.length >= viewPortRowCount && (this.parent.editSettings.newRowPosition === 'Bottom' && this.editModule.args && this.editModule.args.requestType === 'add' || td.classList.contains('e-lastrowcell') && !row.classList.contains(literals.addedRow)) || isBatchModeLastRow) {\n        validationForBottomRowPos = true;\n      }\n    }\n\n    var table = isInline ? isFHdr ? this.parent.getHeaderTable() : this.parent.getContentTable() : select('#' + this.parent.element.id + '_dialogEdit_wrapper .e-dlg-content', document);\n    var client = table.getBoundingClientRect();\n    var left = isInline ? this.parent.element.getBoundingClientRect().left : client.left;\n    var input = closest(element, 'td');\n    var inputClient = input ? input.getBoundingClientRect() : element.parentElement.getBoundingClientRect();\n    var div = this.parent.createElement('div', {\n      className: 'e-tooltip-wrap e-lib e-control e-popup e-griderror',\n      id: name + '_Error',\n      styles: 'display:' + display + ';top:' + ((isFHdr ? inputClient.top + inputClient.height : inputClient.bottom - client.top - (frzCols ? fCont.scrollTop : 0)) + table.scrollTop + 9) + 'px;left:' + (inputClient.left - left + table.scrollLeft + inputClient.width / 2) + 'px;' + 'max-width:' + inputClient.width + 'px;text-align:center;'\n    });\n\n    if (isInline && client.left < left) {\n      div.style.left = parseInt(div.style.left, 10) - client.left + left + 'px';\n    }\n\n    var content = this.parent.createElement('div', {\n      className: 'e-tip-content'\n    });\n    content.appendChild(error);\n    var arrow;\n\n    if (validationForBottomRowPos) {\n      arrow = this.parent.createElement('div', {\n        className: 'e-arrow-tip e-tip-bottom'\n      });\n      arrow.appendChild(this.parent.createElement('div', {\n        className: 'e-arrow-tip-outer e-tip-bottom'\n      }));\n      arrow.appendChild(this.parent.createElement('div', {\n        className: 'e-arrow-tip-inner e-tip-bottom'\n      }));\n    } else {\n      arrow = this.parent.createElement('div', {\n        className: 'e-arrow-tip e-tip-top'\n      });\n      arrow.appendChild(this.parent.createElement('div', {\n        className: 'e-arrow-tip-outer e-tip-top'\n      }));\n      arrow.appendChild(this.parent.createElement('div', {\n        className: 'e-arrow-tip-inner e-tip-top'\n      }));\n    }\n\n    div.appendChild(content);\n    div.appendChild(arrow);\n\n    if (!customForm && (frzCols || this.parent.frozenRows) && this.parent.editSettings.mode !== 'Dialog') {\n      var getEditCell = this.parent.editSettings.mode === 'Normal' ? closest(element, '.e-editcell') : closest(element, '.' + literals.table);\n      getEditCell.style.position = 'relative';\n      div.style.position = 'absolute';\n\n      if (this.parent.editSettings.mode === 'Batch' || closest(element, '.' + literals.frozenContent) || closest(element, '.' + literals.frozenHeader) || this.parent.frozenRows && !frzCols) {\n        formObj.appendChild(div);\n      } else {\n        this.mFormObj.element.appendChild(div);\n      }\n    } else {\n      if (customForm) {\n        this.virtualFormObj.element.appendChild(div);\n      } else {\n        this.formObj.element.appendChild(div);\n      }\n    }\n\n    if (!validationForBottomRowPos && isInline && gcontent.getBoundingClientRect().bottom < inputClient.bottom + inputClient.height) {\n      gcontent.scrollTop = gcontent.scrollTop + div.offsetHeight + arrow.scrollHeight;\n    }\n\n    var lineHeight = parseInt(document.defaultView.getComputedStyle(div, null).getPropertyValue('font-size'), 10);\n\n    if (div.getBoundingClientRect().width < inputClient.width && div.querySelector('label').getBoundingClientRect().height / (lineHeight * 1.2) >= 2) {\n      div.style.width = div.style.maxWidth;\n    }\n\n    if ((frzCols || this.parent.frozenRows) && this.parent.editSettings.mode !== 'Dialog') {\n      div.style.left = input.offsetLeft + (input.offsetWidth / 2 - div.offsetWidth / 2) + 'px';\n    } else {\n      div.style.left = parseInt(div.style.left, 10) - div.offsetWidth / 2 + 'px';\n    }\n\n    if (isInline && !isScroll && !this.parent.allowPaging || frzCols || this.parent.frozenRows) {\n      gcontent.style.position = 'static';\n      var pos = calculateRelativeBasedPosition(input, div);\n      div.style.top = pos.top + inputClient.height + 9 + 'px';\n    }\n\n    if (validationForBottomRowPos) {\n      if (isScroll && !frzCols && this.parent.height !== 'auto' && !this.parent.frozenRows && !this.parent.enableVirtualization) {\n        var scrollWidth = gcontent.scrollWidth > gcontent.offsetWidth ? getScrollBarWidth() : 0;\n        div.style.bottom = this.parent.height - gcontent.querySelector('table').offsetHeight - scrollWidth + inputClient.height + 9 + 'px';\n      } else {\n        div.style.bottom = inputClient.height + 9 + 'px';\n      }\n\n      if (rows.length < viewPortRowCount && this.parent.editSettings.newRowPosition === 'Bottom' && this.editModule.args && this.editModule.args.requestType === 'add') {\n        var rowsCount = this.parent.frozenRows ? this.parent.frozenRows + (rows.length - 1) : rows.length - 1;\n        var rowsHeight = rowsCount * this.parent.getRowHeight();\n        var position = this.parent.getContent().clientHeight - rowsHeight;\n        div.style.bottom = position + 9 + 'px';\n      }\n\n      div.style.top = null;\n    }\n  };\n  /**\n   * @param {Column} col - specfies the column\n   * @returns {boolean} returns the whether column is grouped\n   * @hidden\n   */\n\n\n  Edit.prototype.checkColumnIsGrouped = function (col) {\n    return !col.visible && !(this.parent.groupSettings.columns.indexOf(col.field) > -1);\n  };\n  /**\n   * @param {object} editors -specfies the editors\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.AddEditors = function (editors) {\n    Edit.editCellType = extend(Edit.editCellType, editors);\n  };\n\n  Edit.editCellType = {\n    'dropdownedit': DropDownEditCell,\n    'numericedit': NumericEditCell,\n    'datepickeredit': DatePickerEditCell,\n    'datetimepickeredit': DatePickerEditCell,\n    'booleanedit': BooleanEditCell,\n    'defaultedit': DefaultEditCell,\n    'templateedit': TemplateEditCell\n  };\n  return Edit;\n}();\n\nexport { Edit };","map":{"version":3,"names":["closest","addClass","select","extend","getValue","remove","isNullOrUndefined","events","EditRender","BooleanEditCell","DropDownEditCell","NumericEditCell","DefaultEditCell","InlineEdit","BatchEdit","DialogEdit","Dialog","parentsUntil","getComplexFieldID","setComplexFieldID","getScrollBarWidth","setValidationRuels","FormValidator","DatePickerEditCell","calculateRelativeBasedPosition","TemplateEditCell","DataUtil","addRemoveEventListener","getColumnModelByFieldName","literals","Edit","parent","serviceLocator","editType","l10n","getService","addEventListener","updateEditObj","createAlertDlg","createConfirmDlg","prototype","updateColTypeObj","cols","columnModel","i","length","editSettings","template","editTemplate","templteCell","edit","editCellType","log","getModuleName","onPropertyChanged","e","module","gObj","_i","_a","Object","keys","properties","prop","allowAdding","allowEditing","allowDeleting","initialEnd","isEdit","refresh","editModule","destroy","renderer","mode","startEdit","tr","element","classList","add","getSelectedRows","showDialog","alertDObj","isLastRow","rowIndex","getContent","querySelector","style","display","refreshToolbar","notify","checkLastRow","args","height","newRowPosition","requestType","firstElementChild","offsetHeight","getContentTable","scrollHeight","slice","call","getElementsByClassName","rowCell","closeEdit","showConfirmDialog","dialogObj","toolbarRefresh","addRecord","data","index","virtualScrollAddActionBegin","deleteRecord","fieldname","getSelectedRecords","commandDelIndex","showDeleteConfirmDialog","deleteRow","deleteRowUid","getAttribute","rowObj","getRowObjectFromUID","endEdit","formObj","validate","saveCell","editNextValCell","endEditing","updateCell","field","value","updateRow","batchCancel","batchSave","editCell","editFormValidate","form1","form2","mFormObj","form3","frFormObj","getBatchChanges","getCurrentEditCellData","obj","getCurrentEditedData","content","getConstant","dataBind","show","getValueFromType","col","val","type","isNaN","parseFloat","Date","destroyToolTip","elements","elements_1","elem","position","dlgWidget","click","dlgOk","bind","buttonModel","cssClass","isPrimary","dlgCancel","alertClick","hide","btnOptions","name","div","createElement","id","appendChild","options","showCloseIcon","isModal","visible","closeOnEscape","target","width","animationSettings","effect","buttons","isStringTemplate","appendTo","focusModule","clearIndicator","restoreFocus","innerText","addCancelWhilePaging","executeAction","destroyEditComponents","destroyWidgets","destroyForm","isDestroyed","eventDetails","event","inBoundModelChanged","handler","keyPressed","keyPressHandler","autoCol","tooltipDestroy","preventBatch","actionBeginFunction","onActionBegin","actionCompleteFunction","actionComplete","actionBegin","removeEventListener","actions","indexOf","form","editedData","k","hasAttribute","className","contains","column","getColumnByField","checked","ej2_instances","blur","read","window","setValue","filter","j","inputElements","temp","inputs","len","col_1","getColumnByUid","input","editRow","editedRow","addRow","addedRow","frozenRows","parseInt","row","ariaRowIndex","restrictedRequestTypes","isRestrict","isDestroyVirtualForm","enableVirtualization","cancel","destroyTemplate","isReact","renderTemplates","getCurrentVisibleColumns","enableColumnVirtualization","some","cols_1","formObjects","virtualFormObj","gridElement","hasGridChild","gridHeader","gridContent","childElementCount","action","tagName","document","headerContent","preventDefault","escapeCellEdit","preventObj","instance","arg1","arg2","arg3","arg4","arg5","arg6","arg7","arg8","applyFormValidation","frzCols","isFrozenGrid","isInline","idx","getFrozenMode","mForm","rules","mRules","frRules","getColumns","groupSettings","columns","validationRules","createFormObj","leftRight","frForm","_this","locale","validationComplete","customPlacement","inputElement","error","uid","valErrorPlacement","valCustomPlacement","getElemTable","createTooltip","innerHTML","outerHTML","isFHdr","table","getFreezeTableName","getFrozenVirtualHeader","getFrozenVirtualContent","getFrozenRightHeader","getFrozenRightContent","getMovableVirtualHeader","getMovableVirtualContent","getHeaderTable","resetElemPosition","td","tdRight","getBoundingClientRect","right","elemRight","offSet","left","offsetLeft","inputName","status","frozenRight","customForm","gcontent","getFrozenColumns","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","isScroll","clientHeight","scrollWidth","clientWidth","fCont","frozenContent","isFHdrLastRow","validationForBottomRowPos","isBatchModeLastRow","viewPortRowCount","Math","round","getRowHeight","rows","fHeraderRows","tbody","children","client","inputClient","parentElement","styles","top","bottom","scrollTop","scrollLeft","arrow","getEditCell","frozenHeader","lineHeight","defaultView","getComputedStyle","getPropertyValue","maxWidth","offsetWidth","allowPaging","pos","rowsCount","rowsHeight","checkColumnIsGrouped","AddEditors","editors"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin-Dashboard/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/edit.js"],"sourcesContent":["import { closest, addClass, select } from '@syncfusion/ej2-base';\nimport { extend, getValue } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { EditRender } from '../renderer/edit-renderer';\nimport { BooleanEditCell } from '../renderer/boolean-edit-cell';\nimport { DropDownEditCell } from '../renderer/dropdown-edit-cell';\nimport { NumericEditCell } from '../renderer/numeric-edit-cell';\nimport { DefaultEditCell } from '../renderer/default-edit-cell';\nimport { InlineEdit } from './inline-edit';\nimport { BatchEdit } from './batch-edit';\nimport { DialogEdit } from './dialog-edit';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { parentsUntil, getComplexFieldID, setComplexFieldID, getScrollBarWidth, setValidationRuels } from '../base/util';\nimport { FormValidator } from '@syncfusion/ej2-inputs';\nimport { DatePickerEditCell } from '../renderer/datepicker-edit-cell';\nimport { calculateRelativeBasedPosition } from '@syncfusion/ej2-popups';\nimport { TemplateEditCell } from '../renderer/template-edit-cell';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { addRemoveEventListener, getColumnModelByFieldName } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for the Grid editing module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the servicelocator\n     * @hidden\n     */\n    function Edit(parent, serviceLocator) {\n        this.editType = { 'Inline': InlineEdit, 'Normal': InlineEdit, 'Batch': BatchEdit, 'Dialog': DialogEdit };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.l10n = this.serviceLocator.getService('localization');\n        this.addEventListener();\n        this.updateEditObj();\n        this.createAlertDlg();\n        this.createConfirmDlg();\n    }\n    Edit.prototype.updateColTypeObj = function () {\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            if (this.parent.editSettings.template || cols[i].editTemplate) {\n                var templteCell = 'templateedit';\n                cols[i].edit = extend(new Edit.editCellType[templteCell](this.parent), cols[i].edit || {});\n            }\n            else {\n                cols[i].edit = extend(new Edit.editCellType[cols[i].editType && Edit.editCellType[cols[i].editType] ?\n                    cols[i].editType : 'defaultedit'](this.parent, this.serviceLocator), cols[i].edit || {});\n            }\n        }\n        this.parent.log('primary_column_missing');\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        for (var _i = 0, _a = Object.keys(e.properties); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowAdding':\n                case 'allowDeleting':\n                case 'allowEditing':\n                    if (gObj.editSettings.allowAdding || gObj.editSettings.allowEditing || gObj.editSettings.allowDeleting) {\n                        this.initialEnd();\n                    }\n                    break;\n                case 'mode':\n                    this.updateEditObj();\n                    gObj.isEdit = false;\n                    gObj.refresh();\n                    break;\n            }\n        }\n    };\n    Edit.prototype.updateEditObj = function () {\n        if (this.editModule) {\n            this.editModule.destroy();\n        }\n        this.renderer = new EditRender(this.parent, this.serviceLocator);\n        this.editModule = new this.editType[this.parent.editSettings.mode](this.parent, this.serviceLocator, this.renderer);\n    };\n    Edit.prototype.initialEnd = function () {\n        this.updateColTypeObj();\n    };\n    /**\n     * Edits any bound record in the Grid by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     * @returns {void}\n     */\n    Edit.prototype.startEdit = function (tr) {\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowEditing || gObj.isEdit || gObj.editSettings.mode === 'Batch') {\n            return;\n        }\n        this.parent.element.classList.add('e-editing');\n        if (!gObj.getSelectedRows().length) {\n            if (!tr) {\n                this.showDialog('EditOperationAlert', this.alertDObj);\n                return;\n            }\n        }\n        else if (!tr) {\n            tr = gObj.getSelectedRows()[0];\n        }\n        this.isLastRow = tr.rowIndex === this.parent.getContent().querySelector('tr:last-child').rowIndex;\n        if (tr.style.display === 'none') {\n            return;\n        }\n        this.editModule.startEdit(tr);\n        this.refreshToolbar();\n        gObj.element.querySelector('.e-gridpopup').style.display = 'none';\n        this.parent.notify('start-edit', {});\n    };\n    /**\n     * @param {Element} tr - specifies the tr element\n     * @param {object} args - specifies the object\n     * @param {Element} args.row -specfifes the row\n     * @param {string} args.requestType - specifies the request type\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.checkLastRow = function (tr, args) {\n        var checkLastRow = this.isLastRow;\n        if (this.parent.height !== 'auto' && this.parent.editSettings.newRowPosition === 'Bottom' && args && args.requestType === 'add' &&\n            this.parent.getContent().firstElementChild.offsetHeight > this.parent.getContentTable().scrollHeight) {\n            addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), 'e-lastrowadded');\n        }\n        else if (checkLastRow && tr && tr.classList) {\n            addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), 'e-lastrowcell');\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.closeEdit = function () {\n        if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog\n            && this.parent.element.getElementsByClassName('e-updatedtd').length) {\n            this.showDialog('CancelEdit', this.dialogObj);\n            return;\n        }\n        this.parent.element.classList.remove('e-editing');\n        this.editModule.closeEdit();\n        this.refreshToolbar();\n        this.parent.notify(events.closeEdit, {});\n    };\n    Edit.prototype.refreshToolbar = function () {\n        this.parent.notify(events.toolbarRefresh, {});\n    };\n    /**\n     * To adds a new row at the top with the given data. When data is not passed, it will add empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index) {\n        if (!this.parent.editSettings.allowAdding) {\n            return;\n        }\n        var args = { startEdit: true };\n        if (!data) {\n            this.parent.notify(events.virtualScrollAddActionBegin, args);\n        }\n        if (args.startEdit) {\n            this.parent.element.classList.add('e-editing');\n            this.editModule.addRecord(data, index);\n            this.refreshToolbar();\n            this.parent.notify('start-add', {});\n        }\n    };\n    /**\n     * Deletes a record with the given options. If fieldname and data are not given, the Grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field name of the column.\n     * @param {Object} data - Defines the JSON data record to be deleted.\n     * @returns {void}\n     */\n    Edit.prototype.deleteRecord = function (fieldname, data) {\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowDeleting) {\n            return;\n        }\n        if (!data) {\n            if (!gObj.getSelectedRecords().length && isNullOrUndefined(gObj.commandDelIndex)) {\n                this.showDialog('DeleteOperationAlert', this.alertDObj);\n                return;\n            }\n        }\n        if (gObj.editSettings.showDeleteConfirmDialog) {\n            this.showDialog('ConfirmDelete', this.dialogObj);\n            return;\n        }\n        this.editModule.deleteRecord(fieldname, data);\n    };\n    /**\n     * Deletes a visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Edit.prototype.deleteRow = function (tr) {\n        this.deleteRowUid = tr.getAttribute('data-uid');\n        var rowObj = this.parent.getRowObjectFromUID(this.deleteRowUid);\n        if (!isNullOrUndefined(rowObj)) {\n            this.deleteRecord(null, rowObj.data);\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.endEdit = function () {\n        if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.showConfirmDialog &&\n            (isNullOrUndefined(this.formObj) || this.formObj.validate())) {\n            this.parent.editModule.saveCell();\n            this.parent.notify(events.editNextValCell, {});\n            if (isNullOrUndefined(this.formObj) || this.formObj.validate()) {\n                this.showDialog('BatchSaveConfirm', this.dialogObj);\n                return;\n            }\n        }\n        this.endEditing();\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    Edit.prototype.updateCell = function (rowIndex, field, value) {\n        this.editModule.updateCell(rowIndex, field, value);\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    Edit.prototype.updateRow = function (index, data) {\n        this.editModule.updateRow(index, data);\n    };\n    /**\n     * Resets added, edited, and deleted records in the batch mode.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.batchCancel = function () {\n        this.closeEdit();\n    };\n    /**\n     * Bulk saves added, edited, and deleted records in the batch mode.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.batchSave = function () {\n        this.endEdit();\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (index, field) {\n        this.editModule.editCell(index, field);\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} returns whether the form is validated\n     */\n    Edit.prototype.editFormValidate = function () {\n        var form1 = this.formObj ? this.formObj.validate() : true;\n        var form2 = this.mFormObj ? this.mFormObj.validate() : true;\n        var form3 = this.frFormObj ? this.frFormObj.validate() : true;\n        return form1 && form2 && form3;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} returns the Object\n     */\n    Edit.prototype.getBatchChanges = function () {\n        return this.editModule.getBatchChanges ? this.editModule.getBatchChanges() : {};\n    };\n    /**\n     * Gets the current value of the edited component.\n     *\n     * @returns {Object} returns the Object\n     */\n    Edit.prototype.getCurrentEditCellData = function () {\n        var obj = this.getCurrentEditedData(this.formObj.element, {});\n        return obj[Object.keys(obj)[0]];\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.saveCell = function () {\n        this.editModule.saveCell();\n    };\n    Edit.prototype.endEditing = function () {\n        this.parent.element.classList.remove('e-editing');\n        this.editModule.endEdit();\n        this.refreshToolbar();\n    };\n    Edit.prototype.showDialog = function (content, obj) {\n        obj.content = '<div>' + this.l10n.getConstant(content) + '</div>';\n        obj.dataBind();\n        obj.show();\n    };\n    Edit.prototype.getValueFromType = function (col, value) {\n        var val = value;\n        switch (col.type) {\n            case 'number':\n                val = !isNaN(parseFloat(value)) ? parseFloat(value) : null;\n                break;\n            case 'boolean':\n                if (col.editType !== 'booleanedit') {\n                    val = value === this.l10n.getConstant('True') || value === true ? true : false;\n                }\n                break;\n            case 'date':\n            case 'datetime':\n                if (col.editType !== 'datepickeredit' && col.editType !== 'datetimepickeredit'\n                    && value && value.length) {\n                    val = new Date(value);\n                }\n                else if (value === '') {\n                    val = null;\n                }\n                break;\n        }\n        return val;\n    };\n    Edit.prototype.destroyToolTip = function () {\n        var elements = [].slice.call(this.parent.element.getElementsByClassName('e-griderror'));\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var elem = elements_1[_i];\n            remove(elem);\n        }\n        this.parent.getContent().firstElementChild.style.position = 'relative';\n    };\n    Edit.prototype.createConfirmDlg = function () {\n        this.dialogObj = this.dlgWidget([\n            {\n                click: this.dlgOk.bind(this),\n                buttonModel: { content: this.l10n.getConstant('OKButton'), cssClass: 'e-primary', isPrimary: true }\n            },\n            {\n                click: this.dlgCancel.bind(this),\n                buttonModel: { cssClass: 'e-flat', content: this.l10n.getConstant('CancelButton') }\n            }\n        ], 'EditConfirm');\n    };\n    Edit.prototype.createAlertDlg = function () {\n        this.alertDObj = this.dlgWidget([\n            {\n                click: this.alertClick.bind(this), buttonModel: { content: this.l10n.getConstant('OKButton'), cssClass: 'e-flat', isPrimary: true }\n            }\n        ], 'EditAlert');\n    };\n    Edit.prototype.alertClick = function () {\n        this.alertDObj.hide();\n    };\n    Edit.prototype.dlgWidget = function (btnOptions, name) {\n        var div = this.parent.createElement('div', { id: this.parent.element.id + name });\n        this.parent.element.appendChild(div);\n        var options = {\n            showCloseIcon: false,\n            isModal: true,\n            visible: false,\n            closeOnEscape: true,\n            target: this.parent.element,\n            width: '320px',\n            animationSettings: { effect: 'None' }\n        };\n        options.buttons = btnOptions;\n        var obj = new Dialog(options);\n        var isStringTemplate = 'isStringTemplate';\n        obj[isStringTemplate] = true;\n        obj.appendTo(div);\n        return obj;\n    };\n    Edit.prototype.dlgCancel = function () {\n        this.parent.focusModule.clearIndicator();\n        this.parent.focusModule.restoreFocus();\n        this.dialogObj.hide();\n    };\n    Edit.prototype.dlgOk = function () {\n        switch (this.dialogObj.element.querySelector('.e-dlg-content').firstElementChild.innerText) {\n            case this.l10n.getConstant('ConfirmDelete'):\n                this.editModule.deleteRecord();\n                break;\n            case this.l10n.getConstant('CancelEdit'):\n                this.editModule.closeEdit();\n                break;\n            case this.l10n.getConstant('BatchSaveConfirm'):\n                this.endEditing();\n                break;\n            case this.l10n.getConstant('BatchSaveLostChanges'):\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.editModule.addCancelWhilePaging();\n                }\n                this.executeAction();\n                break;\n        }\n        this.dlgCancel();\n    };\n    Edit.prototype.destroyEditComponents = function () {\n        if (this.parent.isEdit) {\n            this.destroyWidgets();\n            this.destroyForm();\n        }\n        this.destroy();\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.eventDetails = [{ event: events.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: events.initialEnd, handler: this.initialEnd },\n            { event: events.keyPressed, handler: this.keyPressHandler },\n            { event: events.autoCol, handler: this.updateColTypeObj },\n            { event: events.tooltipDestroy, handler: this.destroyToolTip },\n            { event: events.preventBatch, handler: this.preventBatch },\n            { event: events.destroyForm, handler: this.destroyForm },\n            { event: events.destroy, handler: this.destroyEditComponents }];\n        addRemoveEventListener(this.parent, this.eventDetails, true, this);\n        this.actionBeginFunction = this.onActionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.eventDetails, false);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n    };\n    Edit.prototype.actionComplete = function (e) {\n        var actions = ['add', 'beginEdit', 'save', 'delete', 'cancel'];\n        if (actions.indexOf(e.requestType) < 0) {\n            this.parent.isEdit = false;\n        }\n        if (e.requestType === 'batchsave') {\n            this.parent.focusModule.restoreFocus();\n        }\n        this.refreshToolbar();\n    };\n    /**\n     * @param {Element} form - specifies the element\n     * @param {Object} editedData - specifies the edited data\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    Edit.prototype.getCurrentEditedData = function (form, editedData) {\n        var gObj = this.parent;\n        if (gObj.editSettings.template) {\n            var elements = [].slice.call(form.elements);\n            for (var k = 0; k < elements.length; k++) {\n                if (((elements[k].hasAttribute('name') && (elements[k].className !== 'e-multi-hidden')) ||\n                    elements[k].classList.contains('e-multiselect')) && !(elements[k].type === 'hidden' &&\n                    (parentsUntil(elements[k], 'e-switch-wrapper') || parentsUntil(elements[k], 'e-checkbox-wrapper')))) {\n                    var field = (elements[k].hasAttribute('name')) ? setComplexFieldID(elements[k].getAttribute('name')) :\n                        setComplexFieldID(elements[k].getAttribute('id'));\n                    var column = gObj.getColumnByField(field) || { field: field, type: elements[k].getAttribute('type') };\n                    var value = void 0;\n                    if (column.type === 'checkbox' || column.type === 'boolean') {\n                        value = elements[k].checked;\n                    }\n                    else if (elements[k].value) {\n                        value = elements[k].value;\n                        if (elements[k].ej2_instances &&\n                            elements[k].ej2_instances.length &&\n                            !isNullOrUndefined(elements[k].ej2_instances[0].value)) {\n                            elements[k].blur();\n                            value = elements[k].ej2_instances[0].value;\n                        }\n                    }\n                    else if (elements[k].ej2_instances) {\n                        value = elements[k].ej2_instances[0].value;\n                    }\n                    if (column.edit && typeof column.edit.read === 'string') {\n                        value = getValue(column.edit.read, window)(elements[k], value);\n                    }\n                    else if (column.edit && column.edit.read) {\n                        value = column.edit.read(elements[k], value);\n                    }\n                    value = gObj.editModule.getValueFromType(column, value);\n                    if (elements[k].type === 'radio') {\n                        if (elements[k].checked) {\n                            DataUtil.setValue(column.field, value, editedData);\n                        }\n                    }\n                    else {\n                        DataUtil.setValue(column.field, value, editedData);\n                    }\n                }\n            }\n            return editedData;\n        }\n        var col = gObj.columnModel.filter(function (col) { return col.editTemplate; });\n        for (var j = 0; j < col.length; j++) {\n            if (form[getComplexFieldID(col[j].field)]) {\n                var inputElements = [].slice.call(form[getComplexFieldID(col[j].field)]);\n                inputElements = inputElements.length ? inputElements : [form[getComplexFieldID(col[j].field)]];\n                var temp = inputElements.filter(function (e) {\n                    return !isNullOrUndefined((e.ej2_instances));\n                });\n                if (temp.length === 0) {\n                    temp = inputElements.filter(function (e) { return e.hasAttribute('name'); });\n                }\n                for (var k = 0; k < temp.length; k++) {\n                    var value = this.getValue(col[j], temp[k], editedData);\n                    DataUtil.setValue(col[j].field, value, editedData);\n                }\n            }\n        }\n        var inputs = [].slice.call(form.getElementsByClassName('e-field'));\n        for (var i = 0, len = inputs.length; i < len; i++) {\n            var col_1 = gObj.getColumnByUid(inputs[i].getAttribute('e-mappinguid'));\n            if (col_1 && col_1.field) {\n                var value = this.getValue(col_1, inputs[i], editedData);\n                DataUtil.setValue(col_1.field, value, editedData);\n            }\n        }\n        return editedData;\n    };\n    Edit.prototype.getValue = function (col, input, editedData) {\n        var value = input.ej2_instances ?\n            input.ej2_instances[0].value : input.value;\n        var gObj = this.parent;\n        var temp = col.edit.read;\n        if (col.type === 'checkbox' || col.type === 'boolean') {\n            value = input.checked;\n        }\n        if (typeof temp === 'string') {\n            temp = getValue(temp, window);\n            value = gObj.editModule.getValueFromType(col, (temp)(input, value));\n        }\n        else {\n            value = gObj.editModule.getValueFromType(col, col.edit.read(input, value));\n        }\n        if (isNullOrUndefined(editedData[col.field]) && value === '') {\n            value = editedData[col.field];\n        }\n        return value;\n    };\n    /**\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.onActionBegin = function (e) {\n        if (e.requestType === 'columnstate' && this.parent.isEdit\n            && this.parent.editSettings.mode !== 'Batch') {\n            this.closeEdit();\n        }\n        else {\n            var editRow = this.parent.element.querySelector('.' + literals.editedRow);\n            var addRow = this.parent.element.querySelector('.' + literals.addedRow);\n            if (editRow && this.parent.frozenRows && e.requestType === 'virtualscroll'\n                && parseInt(parentsUntil(editRow, literals.row).getAttribute(literals.ariaRowIndex), 10) < this.parent.frozenRows) {\n                return;\n            }\n            var restrictedRequestTypes = ['filterafteropen', 'filterbeforeopen', 'filterchoicerequest', 'save', 'infiniteScroll', 'virtualscroll'];\n            var isRestrict = restrictedRequestTypes.indexOf(e.requestType) === -1;\n            var isDestroyVirtualForm = this.parent.enableVirtualization && this.formObj\n                && !this.formObj.isDestroyed && (editRow || addRow || e.requestType === 'cancel') && isRestrict;\n            if ((!this.parent.enableVirtualization && this.parent.editSettings.mode !== 'Batch' && this.formObj && !this.formObj.isDestroyed\n                && isRestrict && !e.cancel) || isDestroyVirtualForm) {\n                this.destroyWidgets();\n                this.destroyForm();\n            }\n        }\n    };\n    /**\n     * @param {Column[]} cols - specfies the column\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroyWidgets = function (cols) {\n        var gObj = this.parent;\n        if (gObj.editSettings.template) {\n            this.parent.destroyTemplate(['editSettingsTemplate']);\n            if (this.parent.isReact) {\n                this.parent.renderTemplates();\n            }\n        }\n        cols = cols ? cols : this.parent.getCurrentVisibleColumns(this.parent.enableColumnVirtualization);\n        if (cols.some(function (column) { return !isNullOrUndefined(column.editTemplate); })) {\n            this.parent.destroyTemplate(['editTemplate']);\n            if (this.parent.isReact) {\n                this.parent.renderTemplates();\n            }\n        }\n        for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {\n            var col = cols_1[_i];\n            var temp = col.edit.destroy;\n            if (col.edit.destroy) {\n                if (typeof temp === 'string') {\n                    temp = getValue(temp, window);\n                    temp();\n                }\n                else {\n                    col.edit.destroy();\n                }\n            }\n        }\n        var elements = [].slice.call(this.formObj.element.elements);\n        for (var i = 0; i < elements.length; i++) {\n            if (elements[i].hasAttribute('name')) {\n                if (elements[i].ej2_instances &&\n                    elements[i].ej2_instances.length &&\n                    !elements[i].ej2_instances[0].isDestroyed) {\n                    elements[i].ej2_instances[0].destroy();\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.destroyToolTip();\n        var formObjects = [this.formObj, this.mFormObj, this.frFormObj, this.virtualFormObj];\n        for (var i = 0; i < formObjects.length; i++) {\n            if (formObjects[i] && formObjects[i].element && !formObjects[i].isDestroyed) {\n                formObjects[i].destroy();\n            }\n        }\n        this.destroyToolTip();\n    };\n    /**\n     * To destroy the editing.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) &&\n            gridElement.querySelector('.' + literals.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.destroyForm();\n        }\n        this.removeEventListener();\n        var elem = this.dialogObj.element;\n        if (elem.childElementCount > 0) {\n            this.dialogObj.destroy();\n            remove(elem);\n        }\n        elem = this.alertDObj.element;\n        if (elem.childElementCount > 0) {\n            this.alertDObj.destroy();\n            remove(elem);\n        }\n        if (!hasGridChild) {\n            return;\n        }\n        if (this.editModule) {\n            this.editModule.destroy();\n        }\n    };\n    Edit.prototype.keyPressHandler = function (e) {\n        switch (e.action) {\n            case 'insert':\n                this.addRecord();\n                break;\n            case 'delete':\n                if ((e.target.tagName !== 'INPUT' || e.target.classList.contains('e-checkselect'))\n                    && !document.querySelector('.e-popup-open')) {\n                    this.deleteRecord();\n                }\n                break;\n            case 'f2':\n                this.startEdit();\n                break;\n            case 'enter':\n                if (!parentsUntil(e.target, 'e-unboundcelldiv') && this.parent.editSettings.mode !== 'Batch' &&\n                    (parentsUntil(e.target, literals.gridContent) || (this.parent.frozenRows\n                        && parentsUntil(e.target, literals.headerContent)))\n                    && !document.getElementsByClassName('e-popup-open').length) {\n                    e.preventDefault();\n                    this.endEdit();\n                }\n                break;\n            case 'escape':\n                if (this.parent.isEdit) {\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.editModule.escapeCellEdit();\n                    }\n                    else {\n                        this.closeEdit();\n                    }\n                }\n                break;\n        }\n    };\n    Edit.prototype.preventBatch = function (args) {\n        this.preventObj = args;\n        this.showDialog('BatchSaveLostChanges', this.dialogObj);\n    };\n    Edit.prototype.executeAction = function () {\n        this.preventObj.handler.call(this.preventObj.instance, this.preventObj.arg1, this.preventObj.arg2, this.preventObj.arg3, this.preventObj.arg4, this.preventObj.arg5, this.preventObj.arg6, this.preventObj.arg7, this.preventObj.arg8);\n    };\n    /**\n     * @param {Column[]} cols - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        var gObj = this.parent;\n        var frzCols = gObj.isFrozenGrid();\n        var isInline = this.parent.editSettings.mode === 'Normal';\n        var idx = this.parent.getFrozenMode() === 'Right' && isInline ? 1 : 0;\n        var form = this.parent.editSettings.mode !== 'Dialog' ?\n            gObj.element.getElementsByClassName('e-gridform')[idx] :\n            select('#' + gObj.element.id + '_dialogEdit_wrapper .e-gridform', document);\n        var index = this.parent.getFrozenMode() === 'Right' && isInline ? 0 : 1;\n        var mForm = gObj.element.getElementsByClassName('e-gridform')[index];\n        var rules = {};\n        var mRules = {};\n        var frRules = {};\n        cols = cols ? cols : gObj.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (!cols[i].visible && (gObj.editSettings.mode !== 'Dialog' || (gObj.groupSettings.columns.indexOf(cols[i].field) === -1\n                && gObj.editSettings.mode === 'Dialog'))) {\n                continue;\n            }\n            if (cols[i].validationRules) {\n                setValidationRuels(cols[i], index, rules, mRules, frRules, cols.length);\n            }\n        }\n        if (frzCols && this.parent.editSettings.mode !== 'Dialog') {\n            this.parent.editModule.mFormObj = this.createFormObj(mForm, mRules);\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                var frForm = gObj.element.getElementsByClassName('e-gridform')[2];\n                this.parent.editModule.frFormObj = this.createFormObj(frForm, frRules);\n            }\n        }\n        else {\n            rules = extend(rules, mRules, frRules);\n        }\n        this.parent.editModule.formObj = this.createFormObj(form, rules);\n    };\n    /**\n     * @param {HTMLFormElement} form - Defined Form element\n     * @param {Object} rules - Defines form rules\n     * @returns {FormValidator} Returns formvalidator instance\n     * @hidden\n     */\n    Edit.prototype.createFormObj = function (form, rules) {\n        var _this = this;\n        return new FormValidator(form, {\n            rules: rules,\n            locale: this.parent.locale,\n            validationComplete: function (args) {\n                _this.validationComplete(args);\n            },\n            customPlacement: function (inputElement, error) {\n                var uid = inputElement.getAttribute('e-mappinguid');\n                var args = {\n                    column: _this.parent.getColumnByUid(uid),\n                    error: error,\n                    inputElement: inputElement,\n                    value: inputElement.value\n                };\n                _this.valErrorPlacement(inputElement, error);\n                _this.parent.notify(events.valCustomPlacement, args);\n            }\n        });\n    };\n    Edit.prototype.valErrorPlacement = function (inputElement, error) {\n        if (this.parent.isEdit) {\n            var id = error.getAttribute('for');\n            var elem = this.getElemTable(inputElement).querySelector('#' + id + '_Error');\n            if (!elem) {\n                this.createTooltip(inputElement, error, id, '');\n            }\n            else {\n                elem.querySelector('.e-tip-content').innerHTML = error.outerHTML;\n            }\n        }\n    };\n    Edit.prototype.getElemTable = function (inputElement) {\n        var isFHdr;\n        var gObj = this.parent;\n        var table;\n        if (gObj.editSettings.mode !== 'Dialog') {\n            isFHdr = (gObj.frozenRows && gObj.frozenRows\n                > (parseInt(closest(inputElement, '.' + literals.row).getAttribute(literals.ariaRowIndex), 10) || 0));\n            var field = inputElement.name;\n            var col = void 0;\n            if (field) {\n                col = getColumnModelByFieldName(this.parent, setComplexFieldID(field));\n            }\n            if (col && gObj.isFrozenGrid()) {\n                if (col.getFreezeTableName() === 'frozen-left') {\n                    table = isFHdr ? gObj.getFrozenVirtualHeader().querySelector('table')\n                        : gObj.getFrozenVirtualContent().querySelector('table');\n                }\n                else if (col.getFreezeTableName() === 'frozen-right') {\n                    table = isFHdr ? gObj.getFrozenRightHeader().querySelector('table')\n                        : gObj.getFrozenRightContent().querySelector('table');\n                }\n                else if (col.getFreezeTableName() === 'movable') {\n                    table = isFHdr ? gObj.getMovableVirtualHeader().querySelector('table')\n                        : gObj.getMovableVirtualContent().querySelector('table');\n                }\n            }\n            else {\n                table = isFHdr ? gObj.getHeaderTable() : gObj.getContentTable();\n            }\n        }\n        else {\n            table = select('#' + gObj.element.id + '_dialogEdit_wrapper', document);\n        }\n        return table;\n    };\n    Edit.prototype.resetElemPosition = function (elem, args) {\n        var td = parentsUntil(args.element, literals.rowCell);\n        if (td) {\n            var tdRight = td.getBoundingClientRect().right;\n            var elemRight = elem.getBoundingClientRect().right;\n            if (elemRight > tdRight) {\n                var offSet = elemRight - tdRight;\n                elem.style.left = (elem.offsetLeft - offSet) + 'px';\n            }\n        }\n    };\n    Edit.prototype.validationComplete = function (args) {\n        if (this.parent.isEdit) {\n            var elem = this.getElemTable(args.element).querySelector('#' + args.inputName + '_Error');\n            if (elem) {\n                if (args.status === 'failure') {\n                    elem.style.display = '';\n                    this.resetElemPosition(elem, args);\n                }\n                else {\n                    elem.style.display = 'none';\n                }\n            }\n        }\n    };\n    Edit.prototype.createTooltip = function (element, error, name, display) {\n        var column = this.parent.getColumnByField(name);\n        var formObj = this.parent.getFrozenMode() === literals.leftRight && this.parent.editSettings.mode === 'Normal'\n            && column.getFreezeTableName() === literals.frozenRight ? this.frFormObj.element : this.formObj.element;\n        var customForm = parentsUntil(element, 'e-virtual-validation');\n        if (customForm) {\n            formObj = this.virtualFormObj.element;\n        }\n        var gcontent = this.parent.getContent().firstElementChild;\n        var frzCols = this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()\n            || this.parent.getFrozenRightColumnsCount();\n        if (frzCols) {\n            gcontent = this.parent.getMovableVirtualContent();\n        }\n        var isScroll = gcontent.scrollHeight > gcontent.clientHeight || gcontent.scrollWidth > gcontent.clientWidth;\n        var isInline = this.parent.editSettings.mode !== 'Dialog';\n        var td = closest(element, '.' + literals.rowCell);\n        var row = closest(element, '.' + literals.row);\n        var fCont = this.parent.getContent().querySelector('.' + literals.frozenContent);\n        var isFHdr;\n        var isFHdrLastRow = false;\n        var validationForBottomRowPos;\n        var isBatchModeLastRow = false;\n        var viewPortRowCount = Math.round(this.parent.getContent().clientHeight / this.parent.getRowHeight()) - 1;\n        var rows = !fCont ? [].slice.call(this.parent.getContent().getElementsByClassName(literals.row))\n            : [].slice.call(this.parent.getFrozenVirtualContent().getElementsByClassName(literals.row));\n        if (this.parent.editSettings.mode === 'Batch') {\n            if (viewPortRowCount > 1 && rows.length >= viewPortRowCount\n                && rows[rows.length - 1].getAttribute(literals.ariaRowIndex) === row.getAttribute(literals.ariaRowIndex)) {\n                isBatchModeLastRow = true;\n            }\n        }\n        if (isInline) {\n            if (this.parent.frozenRows) {\n                var fHeraderRows = frzCols ? this.parent.getFrozenVirtualHeader().querySelector(literals.tbody).children\n                    : this.parent.getHeaderTable().querySelector(literals.tbody).children;\n                isFHdr = fHeraderRows.length > (parseInt(row.getAttribute(literals.ariaRowIndex), 10) || 0);\n                isFHdrLastRow = isFHdr && parseInt(row.getAttribute(literals.ariaRowIndex), 10) === fHeraderRows.length - 1;\n            }\n            if (isFHdrLastRow || (viewPortRowCount > 1 && rows.length >= viewPortRowCount\n                && ((this.parent.editSettings.newRowPosition === 'Bottom' && (this.editModule.args\n                    && this.editModule.args.requestType === 'add')) || (td.classList.contains('e-lastrowcell')\n                    && !row.classList.contains(literals.addedRow)))) || isBatchModeLastRow) {\n                validationForBottomRowPos = true;\n            }\n        }\n        var table = isInline ?\n            (isFHdr ? this.parent.getHeaderTable() : this.parent.getContentTable()) :\n            select('#' + this.parent.element.id + '_dialogEdit_wrapper .e-dlg-content', document);\n        var client = table.getBoundingClientRect();\n        var left = isInline ?\n            this.parent.element.getBoundingClientRect().left : client.left;\n        var input = closest(element, 'td');\n        var inputClient = input ? input.getBoundingClientRect() : element.parentElement.getBoundingClientRect();\n        var div = this.parent.createElement('div', {\n            className: 'e-tooltip-wrap e-lib e-control e-popup e-griderror',\n            id: name + '_Error',\n            styles: 'display:' + display + ';top:' +\n                ((isFHdr ? inputClient.top + inputClient.height : inputClient.bottom - client.top\n                    - (frzCols ? fCont.scrollTop : 0)) + table.scrollTop + 9) + 'px;left:' +\n                (inputClient.left - left + table.scrollLeft + inputClient.width / 2) + 'px;' +\n                'max-width:' + inputClient.width + 'px;text-align:center;'\n        });\n        if (isInline && client.left < left) {\n            div.style.left = parseInt(div.style.left, 10) - client.left + left + 'px';\n        }\n        var content = this.parent.createElement('div', { className: 'e-tip-content' });\n        content.appendChild(error);\n        var arrow;\n        if (validationForBottomRowPos) {\n            arrow = this.parent.createElement('div', { className: 'e-arrow-tip e-tip-bottom' });\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-outer e-tip-bottom' }));\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-inner e-tip-bottom' }));\n        }\n        else {\n            arrow = this.parent.createElement('div', { className: 'e-arrow-tip e-tip-top' });\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-outer e-tip-top' }));\n            arrow.appendChild(this.parent.createElement('div', { className: 'e-arrow-tip-inner e-tip-top' }));\n        }\n        div.appendChild(content);\n        div.appendChild(arrow);\n        if (!customForm && (frzCols || this.parent.frozenRows) && this.parent.editSettings.mode !== 'Dialog') {\n            var getEditCell = this.parent.editSettings.mode === 'Normal' ?\n                closest(element, '.e-editcell') : closest(element, '.' + literals.table);\n            getEditCell.style.position = 'relative';\n            div.style.position = 'absolute';\n            if (this.parent.editSettings.mode === 'Batch' ||\n                (closest(element, '.' + literals.frozenContent) || closest(element, '.' + literals.frozenHeader))\n                || (this.parent.frozenRows && !frzCols)) {\n                formObj.appendChild(div);\n            }\n            else {\n                this.mFormObj.element.appendChild(div);\n            }\n        }\n        else {\n            if (customForm) {\n                this.virtualFormObj.element.appendChild(div);\n            }\n            else {\n                this.formObj.element.appendChild(div);\n            }\n        }\n        if (!validationForBottomRowPos && isInline && gcontent.getBoundingClientRect().bottom < inputClient.bottom + inputClient.height) {\n            gcontent.scrollTop = gcontent.scrollTop + div.offsetHeight + arrow.scrollHeight;\n        }\n        var lineHeight = parseInt(document.defaultView.getComputedStyle(div, null).getPropertyValue('font-size'), 10);\n        if (div.getBoundingClientRect().width < inputClient.width &&\n            div.querySelector('label').getBoundingClientRect().height / (lineHeight * 1.2) >= 2) {\n            div.style.width = div.style.maxWidth;\n        }\n        if ((frzCols || this.parent.frozenRows) && this.parent.editSettings.mode !== 'Dialog') {\n            div.style.left = input.offsetLeft + (input.offsetWidth / 2 - div.offsetWidth / 2) + 'px';\n        }\n        else {\n            div.style.left = (parseInt(div.style.left, 10) - div.offsetWidth / 2) + 'px';\n        }\n        if (isInline && !isScroll && !this.parent.allowPaging || frzCols || this.parent.frozenRows) {\n            gcontent.style.position = 'static';\n            var pos = calculateRelativeBasedPosition(input, div);\n            div.style.top = pos.top + inputClient.height + 9 + 'px';\n        }\n        if (validationForBottomRowPos) {\n            if (isScroll && !frzCols && this.parent.height !== 'auto' && !this.parent.frozenRows\n                && !this.parent.enableVirtualization) {\n                var scrollWidth = gcontent.scrollWidth > gcontent.offsetWidth ? getScrollBarWidth() : 0;\n                div.style.bottom = (this.parent.height - gcontent.querySelector('table').offsetHeight\n                    - scrollWidth) + inputClient.height + 9 + 'px';\n            }\n            else {\n                div.style.bottom = inputClient.height + 9 + 'px';\n            }\n            if (rows.length < viewPortRowCount && this.parent.editSettings.newRowPosition === 'Bottom' && (this.editModule.args\n                && this.editModule.args.requestType === 'add')) {\n                var rowsCount = this.parent.frozenRows ? this.parent.frozenRows + (rows.length - 1) : rows.length - 1;\n                var rowsHeight = rowsCount * this.parent.getRowHeight();\n                var position = this.parent.getContent().clientHeight - rowsHeight;\n                div.style.bottom = position + 9 + 'px';\n            }\n            div.style.top = null;\n        }\n    };\n    /**\n     * @param {Column} col - specfies the column\n     * @returns {boolean} returns the whether column is grouped\n     * @hidden\n     */\n    Edit.prototype.checkColumnIsGrouped = function (col) {\n        return !col.visible && !(this.parent.groupSettings.columns.indexOf(col.field) > -1);\n    };\n    /**\n     * @param {object} editors -specfies the editors\n     * @returns {void}\n     * @hidden\n     */\n    Edit.AddEditors = function (editors) {\n        Edit.editCellType = extend(Edit.editCellType, editors);\n    };\n    Edit.editCellType = {\n        'dropdownedit': DropDownEditCell, 'numericedit': NumericEditCell,\n        'datepickeredit': DatePickerEditCell, 'datetimepickeredit': DatePickerEditCell,\n        'booleanedit': BooleanEditCell, 'defaultedit': DefaultEditCell,\n        'templateedit': TemplateEditCell\n    };\n    return Edit;\n}());\nexport { Edit };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}