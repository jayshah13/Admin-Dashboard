{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Query, DataManager } from '@syncfusion/ej2-data';\n/**\n * data module is used to generate query and data source.\n *\n * @private\n */\n\nvar Data =\n/** @class */\nfunction () {\n  /**\n   * Constructor for data module\n   *\n   * @param {Object | DataManager} dataSource Accepts the datasource as JSON objects or DataManager\n   * @param {Query} query Accepts the query to process the data\n   * @private\n   */\n  function Data(dataSource, query) {\n    this.initDataManager(dataSource, query);\n  }\n  /**\n   * The function used to initialize dataManager and query\n   *\n   * @param {Object | DataManager} dataSource Accepts the datasource as JSON objects or DataManager\n   * @param {Query} query Accepts the query to process the data\n   * @returns {void}\n   * @private\n   */\n\n\n  Data.prototype.initDataManager = function (dataSource, query) {\n    this.dataManager = dataSource instanceof DataManager ? dataSource : new DataManager(dataSource);\n    this.query = query instanceof Query ? query : new Query();\n  };\n  /**\n   * The function used to generate updated Query from schedule model\n   *\n   * @param {Date} startDate Accepts the start date\n   * @param {Date} endDate Accepts the end date\n   * @returns {void}\n   * @private\n   */\n\n\n  Data.prototype.generateQuery = function (startDate, endDate) {\n    var query = this.query.clone();\n\n    if (startDate) {\n      query.addParams('StartDate', startDate.toISOString());\n    }\n\n    if (endDate) {\n      query.addParams('EndDate', endDate.toISOString());\n    }\n\n    return query;\n  };\n  /**\n   * The function used to get dataSource by executing given Query\n   *\n   * @param  {Query} query - A Query that specifies to generate dataSource\n   * @returns {void}\n   * @private\n   */\n\n\n  Data.prototype.getData = function (query) {\n    return this.dataManager.executeQuery(query);\n  };\n  /**\n   * To destroy the crud module.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Data.prototype.destroy = function () {\n    this.dataManager = null;\n    this.query = null;\n  };\n\n  return Data;\n}();\n\nexport { Data };","map":{"version":3,"names":["Query","DataManager","Data","dataSource","query","initDataManager","prototype","dataManager","generateQuery","startDate","endDate","clone","addParams","toISOString","getData","executeQuery","destroy"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/data.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Query, DataManager } from '@syncfusion/ej2-data';\n/**\n * data module is used to generate query and data source.\n *\n * @private\n */\nvar Data = /** @class */ (function () {\n    /**\n     * Constructor for data module\n     *\n     * @param {Object | DataManager} dataSource Accepts the datasource as JSON objects or DataManager\n     * @param {Query} query Accepts the query to process the data\n     * @private\n     */\n    function Data(dataSource, query) {\n        this.initDataManager(dataSource, query);\n    }\n    /**\n     * The function used to initialize dataManager and query\n     *\n     * @param {Object | DataManager} dataSource Accepts the datasource as JSON objects or DataManager\n     * @param {Query} query Accepts the query to process the data\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.initDataManager = function (dataSource, query) {\n        this.dataManager = dataSource instanceof DataManager ? dataSource : new DataManager(dataSource);\n        this.query = query instanceof Query ? query : new Query();\n    };\n    /**\n     * The function used to generate updated Query from schedule model\n     *\n     * @param {Date} startDate Accepts the start date\n     * @param {Date} endDate Accepts the end date\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.generateQuery = function (startDate, endDate) {\n        var query = this.query.clone();\n        if (startDate) {\n            query.addParams('StartDate', startDate.toISOString());\n        }\n        if (endDate) {\n            query.addParams('EndDate', endDate.toISOString());\n        }\n        return query;\n    };\n    /**\n     * The function used to get dataSource by executing given Query\n     *\n     * @param  {Query} query - A Query that specifies to generate dataSource\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.getData = function (query) {\n        return this.dataManager.executeQuery(query);\n    };\n    /**\n     * To destroy the crud module.\n     *\n     * @returns {void}\n     * @private\n     */\n    Data.prototype.destroy = function () {\n        this.dataManager = null;\n        this.query = null;\n    };\n    return Data;\n}());\nexport { Data };\n"],"mappings":"AAAA;AACA,SAASA,KAAT,EAAgBC,WAAhB,QAAmC,sBAAnC;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI;AAAG;AAAe,YAAY;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,IAAT,CAAcC,UAAd,EAA0BC,KAA1B,EAAiC;IAC7B,KAAKC,eAAL,CAAqBF,UAArB,EAAiCC,KAAjC;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIF,IAAI,CAACI,SAAL,CAAeD,eAAf,GAAiC,UAAUF,UAAV,EAAsBC,KAAtB,EAA6B;IAC1D,KAAKG,WAAL,GAAmBJ,UAAU,YAAYF,WAAtB,GAAoCE,UAApC,GAAiD,IAAIF,WAAJ,CAAgBE,UAAhB,CAApE;IACA,KAAKC,KAAL,GAAaA,KAAK,YAAYJ,KAAjB,GAAyBI,KAAzB,GAAiC,IAAIJ,KAAJ,EAA9C;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIE,IAAI,CAACI,SAAL,CAAeE,aAAf,GAA+B,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;IACzD,IAAIN,KAAK,GAAG,KAAKA,KAAL,CAAWO,KAAX,EAAZ;;IACA,IAAIF,SAAJ,EAAe;MACXL,KAAK,CAACQ,SAAN,CAAgB,WAAhB,EAA6BH,SAAS,CAACI,WAAV,EAA7B;IACH;;IACD,IAAIH,OAAJ,EAAa;MACTN,KAAK,CAACQ,SAAN,CAAgB,SAAhB,EAA2BF,OAAO,CAACG,WAAR,EAA3B;IACH;;IACD,OAAOT,KAAP;EACH,CATD;EAUA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIF,IAAI,CAACI,SAAL,CAAeQ,OAAf,GAAyB,UAAUV,KAAV,EAAiB;IACtC,OAAO,KAAKG,WAAL,CAAiBQ,YAAjB,CAA8BX,KAA9B,CAAP;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;AACA;;;EACIF,IAAI,CAACI,SAAL,CAAeU,OAAf,GAAyB,YAAY;IACjC,KAAKT,WAAL,GAAmB,IAAnB;IACA,KAAKH,KAAL,GAAa,IAAb;EACH,CAHD;;EAIA,OAAOF,IAAP;AACH,CA9DyB,EAA1B;;AA+DA,SAASA,IAAT"},"metadata":{},"sourceType":"module"}