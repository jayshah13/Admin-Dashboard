{"ast":null,"code":"import { Mean, RectOption, pathAnimation, getElement, appendChildElement, appendClipElement } from '../../common/utils/helper';\nimport { getPoint, sum, templateAnimate } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * `ErrorBar` module is used to render the error bar for series.\n */\n\nvar ErrorBar =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the error bar module.\n   *\n   * @private\n   */\n  function ErrorBar(chart) {\n    this.chart = chart;\n  }\n  /**\n   * Render the error bar for series.\n   *\n   * @returns {void}\n   */\n\n\n  ErrorBar.prototype.render = function (series) {\n    if (this.chart.chartAreaType === 'PolarRadar') {\n      return null;\n    }\n\n    this.createElement(series, this.chart);\n    this.renderErrorBar(series);\n  };\n\n  ErrorBar.prototype.renderErrorBar = function (series) {\n    var seriesIndex = series.index;\n    var symbolId;\n    var capId;\n    var errorbar = series.errorBar;\n    var errorBarCap = series.errorBar.errorBarCap;\n    var errorDirection = ['', ''];\n    var redraw = series.chart.redraw;\n\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n\n      if (point.visible && point.symbolLocations[0]) {\n        var errorX = 0;\n        var errorY = 0;\n\n        switch (errorbar.mode) {\n          case 'Vertical':\n            errorY = errorbar.verticalError;\n            break;\n\n          case 'Horizontal':\n            errorX = errorbar.horizontalError;\n            break;\n\n          case 'Both':\n            errorX = errorbar.horizontalError;\n            errorY = errorbar.verticalError;\n            break;\n        }\n\n        errorDirection = this['calculate' + errorbar.type + 'Value'](point, series, this.chart.requireInvertedAxis, errorX, errorY);\n        symbolId = this.chart.element.id + '_Series_' + '_ErrorBarGroup_' + seriesIndex + '_Point_' + point.index;\n        capId = this.chart.element.id + '_Series_' + '_ErrorBarCap_' + seriesIndex + '_Point_' + point.index;\n        var shapeOption = new PathOption(symbolId, '', errorbar.width, errorbar.color || this.chart.themeStyle.errorBar, null, '', errorDirection[0]);\n        var element = getElement(shapeOption.id);\n        var previousDirection = element ? element.getAttribute('d') : null;\n        series.errorBarElement.appendChild(this.chart.renderer.drawPath(shapeOption));\n        pathAnimation(element, errorDirection[0], redraw, previousDirection);\n        var capOption = new PathOption(capId, '', errorBarCap.width, errorBarCap.color || this.chart.themeStyle.errorBar, null, '', errorDirection[1]);\n        element = getElement(capOption.id);\n        previousDirection = element ? element.getAttribute('d') : null;\n        appendChildElement(this.chart.enableCanvas, series.errorBarElement, this.chart.renderer.drawPath(capOption), redraw);\n        pathAnimation(element, errorDirection[1], redraw, previousDirection);\n      }\n    }\n  }; // path calculation for error bar\n\n\n  ErrorBar.prototype.findLocation = function (point, series, isInverted, x1, y1) {\n    var errorbar = series.errorBar;\n    var direction = errorbar.direction;\n    var location = [];\n    var yValue = series.type.indexOf('Stacking') > -1 ? series.stackedValues.endValues[point.index] : series.seriesType === 'HighLow' || series.seriesType === 'HighLowOpenClose' ? series.points[point.index].high : point.yValue;\n    var startPoint = getPoint(point.xValue + (direction === 'Plus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both') ? x1 = errorbar.horizontalPositiveError : x1 : 0), yValue + (direction === 'Plus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? y1 = errorbar.verticalPositiveError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n    location.push(startPoint);\n\n    if (series.isRectSeries) {\n      var midPoint = point.symbolLocations[0];\n      location.push(midPoint);\n    } else {\n      var midPoint = getPoint(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted);\n      location.push(midPoint);\n    }\n\n    var endPoint = getPoint(point.xValue - (direction === 'Minus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both') ? x1 = errorbar.horizontalNegativeError : x1 : 0), yValue - (direction === 'Minus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? y1 = errorbar.verticalNegativeError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n    location.push(endPoint); // calculate error height for datalabel position alignment\n\n    point.error = errorbar.mode === 'Vertical' ? errorbar.verticalError : errorbar.horizontalError;\n    this.negativeHeight = errorbar.mode === 'Vertical' || errorbar.mode === 'Both' ? isInverted ? location[1].x - location[2].x : location[2].y - location[1].y : 0;\n    this.positiveHeight = errorbar.mode === 'Vertical' || errorbar.mode === 'Both' ? isInverted ? location[0].x - location[1].x : location[1].y - location[0].y : 0;\n    return this.getErrorDirection(location[0], location[1], location[2], series, isInverted);\n  }; //calculations for eror bar types\n\n\n  ErrorBar.prototype.calculateFixedValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    var errorbar = series.errorBar;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.calculatePercentageValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    errorX = errorX / 100 * point.xValue;\n    errorY = errorY / 100 * point.yValue;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.calculateStandardDeviationValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    var getMean = this.meanCalculation(series, series.errorBar.mode);\n    errorX = errorX * (getMean.horizontalSquareRoot + getMean.horizontalMean);\n    errorY = errorY * (getMean.verticalSquareRoot + getMean.verticalMean);\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.calculateStandardErrorValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    var length = series.points.length;\n    var getMean = this.meanCalculation(series, series.errorBar.mode);\n    errorX = errorX * getMean.horizontalSquareRoot / Math.sqrt(length);\n    errorY = errorY * getMean.verticalSquareRoot / Math.sqrt(length);\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.calculateCustomValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    var errorbar = series.errorBar;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.getHorizontalDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var path = '';\n    var capDirection = '';\n    path += 'M ' + start.x + ' ' + mid.y + ' L ' + end.x + ' ' + mid.y;\n    capDirection += direction === 'Plus' || direction === 'Both' ? 'M ' + start.x + ' ' + (mid.y - capLength) + ' L ' + start.x + ' ' + (mid.y + capLength) : '';\n    capDirection += direction === 'Minus' || direction === 'Both' ? 'M ' + end.x + ' ' + (mid.y - capLength) + ' L ' + end.x + ' ' + (mid.y + capLength) : ' ';\n    return [path, capDirection];\n  };\n\n  ErrorBar.prototype.getVerticalDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var path = '';\n    var capDirection = '';\n    path += 'M ' + mid.x + ' ' + start.y + ' L ' + mid.x + ' ' + end.y;\n    capDirection += direction === 'Plus' || direction === 'Both' ? 'M ' + (mid.x - capLength) + ' ' + start.y + ' L ' + (mid.x + capLength) + ' ' + start.y : '';\n    capDirection += direction === 'Minus' || direction === 'Both' ? 'M ' + (mid.x - capLength) + ' ' + end.y + ' L ' + (mid.x + capLength) + ' ' + end.y : '';\n    return [path, capDirection];\n  };\n\n  ErrorBar.prototype.getBothDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var capDirection = '';\n    var path = '';\n    var pathH = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n    var pathV = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n    path = pathH[0].concat(pathV[0]);\n    capDirection = pathH[1].concat(pathV[1]);\n    return [path, capDirection];\n  };\n\n  ErrorBar.prototype.getErrorDirection = function (start, mid, end, series, isInverted) {\n    var direction = series.errorBar.direction;\n    var mode = series.errorBar.mode;\n    var capLength = series.errorBar.errorBarCap.length;\n    var paths;\n    var errorMode = mode;\n\n    switch (mode) {\n      case 'Both':\n        errorMode = mode;\n        break;\n\n      case 'Horizontal':\n        errorMode = isInverted ? 'Vertical' : mode;\n        break;\n\n      case 'Vertical':\n        errorMode = isInverted ? 'Horizontal' : mode;\n        break;\n    }\n\n    switch (errorMode) {\n      case 'Horizontal':\n        paths = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n\n      case 'Vertical':\n        paths = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n\n      case 'Both':\n        paths = this.getBothDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n    }\n\n    return [paths[0], paths[1]];\n  }; // mean calculation for standard deviation and standard error\n\n\n  ErrorBar.prototype.meanCalculation = function (series, mode) {\n    var sumOfX = 0;\n    var sumOfY = 0;\n    var verticalMean = 0;\n    var horizontalMean = 0;\n    var length = series.points.length;\n\n    switch (mode) {\n      case 'Vertical':\n        sumOfY = sum(series.yData);\n        verticalMean = sumOfY / length;\n        break;\n\n      case 'Horizontal':\n        sumOfX = sum(series.xData);\n        horizontalMean = sumOfX / length;\n        break;\n\n      case 'Both':\n        sumOfY = sum(series.yData);\n        verticalMean = sumOfY / length;\n        sumOfX = sum(series.xData);\n        horizontalMean = sumOfX / length;\n    }\n\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n\n      if (mode === 'Vertical') {\n        sumOfY = sumOfY + Math.pow(point.yValue - verticalMean, 2);\n      } else if (mode === 'Horizontal') {\n        sumOfX = sumOfX + Math.pow(point.xValue - horizontalMean, 2);\n      } else {\n        sumOfY = sumOfY + Math.pow(point.yValue - verticalMean, 2);\n        sumOfX = sumOfX + Math.pow(point.xValue - horizontalMean, 2);\n      }\n    }\n\n    var verStandardMean = sumOfY / (length - 1);\n    var verSquareRoot = Math.sqrt(sumOfY / (length - 1));\n    var horStandardMean = sumOfX / (length - 1);\n    var horSquareRoot = Math.sqrt(sumOfX / (length - 1));\n    return new Mean(verStandardMean, verSquareRoot, horStandardMean, horSquareRoot, verticalMean, horizontalMean);\n  };\n\n  ErrorBar.prototype.createElement = function (series, chart) {\n    var explodeValue = 5;\n    var transform = chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + series.clipRect.y + ')' : '';\n    var markerHeight = series.marker.height / 2;\n    var markerWidth = series.marker.width / 2;\n\n    if (chart.chartAreaType === 'Cartesian') {\n      var options = new RectOption(chart.element.id + '_ChartErrorBarClipRect_' + series.index, 'transparent', {\n        width: 1,\n        color: 'Gray'\n      }, 1, {\n        x: -markerWidth,\n        y: -markerHeight,\n        width: series.clipRect.width + markerWidth * 2,\n        height: series.clipRect.height + markerHeight * 2\n      });\n      series.errorBarElement = chart.renderer.createGroup({\n        'id': chart.element.id + 'ErrorBarGroup' + series.index,\n        'transform': transform,\n        'clip-path': 'url(#' + chart.element.id + '_ChartErrorBarClipRect_' + series.index + ')'\n      });\n      series.errorBarElement.appendChild(appendClipElement(chart.redraw, options, chart.renderer));\n    }\n  };\n  /**\n   * Animates the series.\n   *\n   * @param  {Series} series - Defines the series to animate.\n   * @returns {void}\n   */\n\n\n  ErrorBar.prototype.doErrorBarAnimation = function (series) {\n    var errorBarElements = series.errorBarElement.childNodes;\n\n    if (!errorBarElements) {\n      return null;\n    }\n\n    var delay = series.animation.delay + series.animation.duration;\n    var j = 1;\n\n    while (j < errorBarElements.length) {\n      for (var i = 0; i < series.points.length; i++) {\n        if (!series.points[i].symbolLocations[0]) {\n          continue;\n        }\n\n        errorBarElements[j].style.visibility = 'hidden';\n        templateAnimate(errorBarElements[j], delay, 350, series.chart.requireInvertedAxis ? 'SlideLeftIn' : 'SlideBottomIn', false);\n      }\n\n      j++;\n    }\n  };\n  /**\n   * Get module name.\n   */\n\n\n  ErrorBar.prototype.getModuleName = function () {\n    // Returns the module name\n    return 'ErrorBar';\n  };\n  /**\n   * To destroy the errorBar for series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ErrorBar.prototype.destroy = function () {// Destroy method performed here\n  };\n\n  return ErrorBar;\n}();\n\nexport { ErrorBar };","map":{"version":3,"names":["Mean","RectOption","pathAnimation","getElement","appendChildElement","appendClipElement","getPoint","sum","templateAnimate","PathOption","ErrorBar","chart","prototype","render","series","chartAreaType","createElement","renderErrorBar","seriesIndex","index","symbolId","capId","errorbar","errorBar","errorBarCap","errorDirection","redraw","_i","_a","points","length","point","visible","symbolLocations","errorX","errorY","mode","verticalError","horizontalError","type","requireInvertedAxis","element","id","shapeOption","width","color","themeStyle","previousDirection","getAttribute","errorBarElement","appendChild","renderer","drawPath","capOption","enableCanvas","findLocation","isInverted","x1","y1","direction","location","yValue","indexOf","stackedValues","endValues","seriesType","high","startPoint","xValue","horizontalPositiveError","verticalPositiveError","xAxis","yAxis","push","isRectSeries","midPoint","endPoint","horizontalNegativeError","verticalNegativeError","error","negativeHeight","x","y","positiveHeight","getErrorDirection","calculateFixedValue","calculatePercentageValue","calculateStandardDeviationValue","getMean","meanCalculation","horizontalSquareRoot","horizontalMean","verticalSquareRoot","verticalMean","calculateStandardErrorValue","Math","sqrt","calculateCustomValue","getHorizontalDirection","start","mid","end","errorMode","capLength","path","capDirection","getVerticalDirection","getBothDirection","pathH","pathV","concat","paths","sumOfX","sumOfY","yData","xData","pow","verStandardMean","verSquareRoot","horStandardMean","horSquareRoot","explodeValue","transform","clipRect","markerHeight","marker","height","markerWidth","options","createGroup","doErrorBarAnimation","errorBarElements","childNodes","delay","animation","duration","j","i","style","visibility","getModuleName","destroy"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin Dashboard/Frontend/node_modules/@syncfusion/ej2-charts/src/chart/series/error-bar.js"],"sourcesContent":["import { Mean, RectOption, pathAnimation, getElement, appendChildElement, appendClipElement } from '../../common/utils/helper';\nimport { getPoint, sum, templateAnimate } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * `ErrorBar` module is used to render the error bar for series.\n */\nvar ErrorBar = /** @class */ (function () {\n    /**\n     * Constructor for the error bar module.\n     *\n     * @private\n     */\n    function ErrorBar(chart) {\n        this.chart = chart;\n    }\n    /**\n     * Render the error bar for series.\n     *\n     * @returns {void}\n     */\n    ErrorBar.prototype.render = function (series) {\n        if (this.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        this.createElement(series, this.chart);\n        this.renderErrorBar(series);\n    };\n    ErrorBar.prototype.renderErrorBar = function (series) {\n        var seriesIndex = series.index;\n        var symbolId;\n        var capId;\n        var errorbar = series.errorBar;\n        var errorBarCap = series.errorBar.errorBarCap;\n        var errorDirection = ['', ''];\n        var redraw = series.chart.redraw;\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            if (point.visible && point.symbolLocations[0]) {\n                var errorX = 0;\n                var errorY = 0;\n                switch (errorbar.mode) {\n                    case 'Vertical':\n                        errorY = errorbar.verticalError;\n                        break;\n                    case 'Horizontal':\n                        errorX = errorbar.horizontalError;\n                        break;\n                    case 'Both':\n                        errorX = errorbar.horizontalError;\n                        errorY = errorbar.verticalError;\n                        break;\n                }\n                errorDirection = this['calculate' + errorbar.type + 'Value'](point, series, this.chart.requireInvertedAxis, errorX, errorY);\n                symbolId = this.chart.element.id + '_Series_' + '_ErrorBarGroup_' + seriesIndex + '_Point_' + point.index;\n                capId = this.chart.element.id + '_Series_' + '_ErrorBarCap_' + seriesIndex + '_Point_' + point.index;\n                var shapeOption = new PathOption(symbolId, '', errorbar.width, errorbar.color || this.chart.themeStyle.errorBar, null, '', errorDirection[0]);\n                var element = getElement(shapeOption.id);\n                var previousDirection = element ? element.getAttribute('d') : null;\n                series.errorBarElement.appendChild(this.chart.renderer.drawPath(shapeOption));\n                pathAnimation(element, errorDirection[0], redraw, previousDirection);\n                var capOption = new PathOption(capId, '', errorBarCap.width, errorBarCap.color || this.chart.themeStyle.errorBar, null, '', errorDirection[1]);\n                element = getElement(capOption.id);\n                previousDirection = element ? element.getAttribute('d') : null;\n                appendChildElement(this.chart.enableCanvas, series.errorBarElement, this.chart.renderer.drawPath(capOption), redraw);\n                pathAnimation(element, errorDirection[1], redraw, previousDirection);\n            }\n        }\n    };\n    // path calculation for error bar\n    ErrorBar.prototype.findLocation = function (point, series, isInverted, x1, y1) {\n        var errorbar = series.errorBar;\n        var direction = errorbar.direction;\n        var location = [];\n        var yValue = series.type.indexOf('Stacking') > -1 ? series.stackedValues.endValues[point.index] :\n            (series.seriesType === 'HighLow' || series.seriesType === 'HighLowOpenClose') ? (series.points[point.index].high) :\n                point.yValue;\n        var startPoint = getPoint(point.xValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = errorbar.horizontalPositiveError : x1 : 0), yValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = errorbar.verticalPositiveError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(startPoint);\n        if (series.isRectSeries) {\n            var midPoint = point.symbolLocations[0];\n            location.push(midPoint);\n        }\n        else {\n            var midPoint = getPoint(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted);\n            location.push(midPoint);\n        }\n        var endPoint = getPoint(point.xValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = errorbar.horizontalNegativeError : x1 : 0), yValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = errorbar.verticalNegativeError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(endPoint);\n        // calculate error height for datalabel position alignment\n        point.error = (errorbar.mode === 'Vertical') ? errorbar.verticalError : errorbar.horizontalError;\n        this.negativeHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[1].x - location[2].x) :\n            (location[2].y - location[1].y)) : 0;\n        this.positiveHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[0].x - location[1].x) :\n            (location[1].y - location[0].y)) : 0;\n        return this.getErrorDirection(location[0], location[1], location[2], series, isInverted);\n    };\n    //calculations for eror bar types\n    ErrorBar.prototype.calculateFixedValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        var errorbar = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculatePercentageValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        errorX = (errorX / 100) * point.xValue;\n        errorY = (errorY / 100) * point.yValue;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateStandardDeviationValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        var getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = errorX * (getMean.horizontalSquareRoot + getMean.horizontalMean);\n        errorY = errorY * (getMean.verticalSquareRoot + getMean.verticalMean);\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateStandardErrorValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        var length = series.points.length;\n        var getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = ((errorX * getMean.horizontalSquareRoot) / Math.sqrt(length));\n        errorY = ((errorY * getMean.verticalSquareRoot) / Math.sqrt(length));\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateCustomValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        var errorbar = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.getHorizontalDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var path = '';\n        var capDirection = '';\n        path += 'M ' + start.x + ' ' + mid.y + ' L ' + end.x + ' ' + mid.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? 'M ' + (start.x) + ' ' + (mid.y - capLength) + ' L '\n            + (start.x) + ' ' + (mid.y + capLength) : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? 'M ' + (end.x) + ' ' + (mid.y - capLength) + ' L '\n            + (end.x) + ' ' + (mid.y + capLength) : ' ';\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getVerticalDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var path = '';\n        var capDirection = '';\n        path += 'M ' + mid.x + ' ' + start.y + ' L ' + mid.x + ' ' + end.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? 'M ' + (mid.x - capLength) + ' ' + start.y + ' L '\n            + (mid.x + capLength) + ' ' + start.y : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? 'M ' + (mid.x - capLength) + ' ' + end.y + ' L '\n            + (mid.x + capLength) + ' ' + end.y : '';\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getBothDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var capDirection = '';\n        var path = '';\n        var pathH = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n        var pathV = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n        path = pathH[0].concat(pathV[0]);\n        capDirection = pathH[1].concat(pathV[1]);\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getErrorDirection = function (start, mid, end, series, isInverted) {\n        var direction = series.errorBar.direction;\n        var mode = series.errorBar.mode;\n        var capLength = series.errorBar.errorBarCap.length;\n        var paths;\n        var errorMode = mode;\n        switch (mode) {\n            case 'Both':\n                errorMode = mode;\n                break;\n            case 'Horizontal':\n                errorMode = (isInverted) ? 'Vertical' : mode;\n                break;\n            case 'Vertical':\n                errorMode = (isInverted) ? 'Horizontal' : mode;\n                break;\n        }\n        switch (errorMode) {\n            case 'Horizontal':\n                paths = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Vertical':\n                paths = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Both':\n                paths = this.getBothDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n        }\n        return [paths[0], paths[1]];\n    };\n    // mean calculation for standard deviation and standard error\n    ErrorBar.prototype.meanCalculation = function (series, mode) {\n        var sumOfX = 0;\n        var sumOfY = 0;\n        var verticalMean = 0;\n        var horizontalMean = 0;\n        var length = series.points.length;\n        switch (mode) {\n            case 'Vertical':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                break;\n            case 'Horizontal':\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n                break;\n            case 'Both':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n        }\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            if (mode === 'Vertical') {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n            }\n            else if (mode === 'Horizontal') {\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n            else {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n        }\n        var verStandardMean = sumOfY / (length - 1);\n        var verSquareRoot = Math.sqrt(sumOfY / (length - 1));\n        var horStandardMean = sumOfX / (length - 1);\n        var horSquareRoot = Math.sqrt(sumOfX / (length - 1));\n        return new Mean(verStandardMean, verSquareRoot, horStandardMean, horSquareRoot, verticalMean, horizontalMean);\n    };\n    ErrorBar.prototype.createElement = function (series, chart) {\n        var explodeValue = 5;\n        var transform = chart.chartAreaType === 'Cartesian' ?\n            'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        var markerHeight = (series.marker.height) / 2;\n        var markerWidth = (series.marker.width) / 2;\n        if (chart.chartAreaType === 'Cartesian') {\n            var options = new RectOption(chart.element.id + '_ChartErrorBarClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                x: -markerWidth, y: -markerHeight,\n                width: series.clipRect.width + markerWidth * 2, height: series.clipRect.height + markerHeight * 2\n            });\n            series.errorBarElement = chart.renderer.createGroup({\n                'id': chart.element.id + 'ErrorBarGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + chart.element.id + '_ChartErrorBarClipRect_' + series.index + ')'\n            });\n            series.errorBarElement.appendChild(appendClipElement(chart.redraw, options, chart.renderer));\n        }\n    };\n    /**\n     * Animates the series.\n     *\n     * @param  {Series} series - Defines the series to animate.\n     * @returns {void}\n     */\n    ErrorBar.prototype.doErrorBarAnimation = function (series) {\n        var errorBarElements = series.errorBarElement.childNodes;\n        if (!errorBarElements) {\n            return null;\n        }\n        var delay = series.animation.delay + series.animation.duration;\n        var j = 1;\n        while (j < errorBarElements.length) {\n            for (var i = 0; i < series.points.length; i++) {\n                if (!series.points[i].symbolLocations[0]) {\n                    continue;\n                }\n                errorBarElements[j].style.visibility = 'hidden';\n                templateAnimate(errorBarElements[j], delay, 350, series.chart.requireInvertedAxis ? 'SlideLeftIn' : 'SlideBottomIn', false);\n            }\n            j++;\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ErrorBar.prototype.getModuleName = function () {\n        // Returns the module name\n        return 'ErrorBar';\n    };\n    /**\n     * To destroy the errorBar for series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ErrorBar.prototype.destroy = function () {\n        // Destroy method performed here\n    };\n    return ErrorBar;\n}());\nexport { ErrorBar };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}