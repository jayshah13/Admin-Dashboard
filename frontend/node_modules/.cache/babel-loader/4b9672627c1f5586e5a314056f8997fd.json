{"ast":null,"code":"import { createElement, closest, detach, Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { InsertHtml } from './inserthtml';\n/**\n * Link internal component\n *\n * @hidden\n\n */\n\nvar TableCommand =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {EditorManager} parent - specifies the parent element\n   * @hidden\n    */\n  function TableCommand(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n\n  TableCommand.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.TABLE, this.createTable, this);\n    this.parent.observer.on(CONSTANT.INSERT_ROW, this.insertRow, this);\n    this.parent.observer.on(CONSTANT.INSERT_COLUMN, this.insertColumn, this);\n    this.parent.observer.on(CONSTANT.DELETEROW, this.deleteRow, this);\n    this.parent.observer.on(CONSTANT.DELETECOLUMN, this.deleteColumn, this);\n    this.parent.observer.on(CONSTANT.REMOVETABLE, this.removeTable, this);\n    this.parent.observer.on(CONSTANT.TABLEHEADER, this.tableHeader, this);\n    this.parent.observer.on(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign, this);\n    this.parent.observer.on(CONSTANT.TABLE_MERGE, this.cellMerge, this);\n    this.parent.observer.on(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit, this);\n    this.parent.observer.on(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit, this);\n    this.parent.observer.on(CONSTANT.TABLE_MOVE, this.tableMove, this);\n  };\n\n  TableCommand.prototype.createTable = function (e) {\n    var table = createElement('table', {\n      className: 'e-rte-table'\n    });\n    var tblBody = createElement('tbody');\n\n    if (!isNOU(e.item.width.width)) {\n      table.style.width = this.calculateStyleValue(e.item.width.width);\n    }\n\n    if (!isNOU(e.item.width.minWidth)) {\n      table.style.minWidth = this.calculateStyleValue(e.item.width.minWidth);\n    }\n\n    if (!isNOU(e.item.width.maxWidth)) {\n      table.style.maxWidth = this.calculateStyleValue(e.item.width.maxWidth);\n    }\n\n    var tdWid = parseInt(e.item.width.width, 10) > 100 ? 100 / e.item.columns : parseInt(e.item.width.width, 10) / e.item.columns;\n\n    for (var i = 0; i < e.item.rows; i++) {\n      var row = createElement('tr');\n\n      for (var j = 0; j < e.item.columns; j++) {\n        var cell = createElement('td');\n        cell.appendChild(createElement('br'));\n        cell.style.width = tdWid + '%';\n        row.appendChild(cell);\n      }\n\n      tblBody.appendChild(row);\n    }\n\n    table.appendChild(tblBody);\n    e.item.selection.restore();\n    InsertHtml.Insert(this.parent.currentDocument, table, this.parent.editableElement);\n    this.removeEmptyNode();\n    e.item.selection.setSelectionText(this.parent.currentDocument, table.querySelector('td'), table.querySelector('td'), 0, 0);\n\n    if (table.nextElementSibling === null) {\n      var insertElem = void 0;\n\n      if (e.enterAction === 'DIV') {\n        insertElem = createElement('div');\n        insertElem.appendChild(createElement('br'));\n      } else if (e.enterAction === 'BR') {\n        insertElem = createElement('br');\n      } else {\n        insertElem = createElement('p');\n        insertElem.appendChild(createElement('br'));\n      }\n\n      this.insertAfter(insertElem, table);\n    }\n\n    table.querySelector('td').classList.add('e-cell-select');\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: 'Table',\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: [table]\n      });\n    }\n\n    return table;\n  };\n\n  TableCommand.prototype.calculateStyleValue = function (value) {\n    var styleValue;\n\n    if (typeof value === 'string') {\n      if (value.indexOf('px') || value.indexOf('%') || value.indexOf('auto')) {\n        styleValue = value;\n      } else {\n        styleValue = value + 'px';\n      }\n    } else {\n      styleValue = value + 'px';\n    }\n\n    return styleValue;\n  };\n\n  TableCommand.prototype.removeEmptyNode = function () {\n    var emptyUl = this.parent.editableElement.querySelectorAll('ul:empty, ol:empty');\n\n    for (var i = 0; i < emptyUl.length; i++) {\n      detach(emptyUl[i]);\n    }\n\n    var emptyLiChild = this.parent.editableElement.querySelectorAll('li *:empty');\n\n    for (var i = 0; i < emptyLiChild.length; i++) {\n      detach(emptyLiChild[i]);\n\n      if (emptyLiChild.length === i + 1) {\n        emptyLiChild = this.parent.editableElement.querySelectorAll('li *:empty');\n        i = -1;\n      }\n    }\n\n    var emptyLi = this.parent.editableElement.querySelectorAll('li:empty');\n\n    for (var i = 0; i < emptyLi.length; i++) {\n      detach(emptyLi[i]);\n    }\n  };\n\n  TableCommand.prototype.insertAfter = function (newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n\n  TableCommand.prototype.getSelectedCellMinMaxIndex = function (e) {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    var a = 0;\n    var minI = e.length;\n    var maxI = 0;\n    var minJ = e[0].length;\n    var maxJ = 0; //eslint-disable-next-line\n\n    for (var i = 0; a < selectedCells.length; a++) {\n      var selectedCellIndex = this.getCorrespondingIndex(selectedCells[a], e);\n      var minMaxIndex = this.FindIndex(selectedCellIndex[0], selectedCellIndex[1], e); //eslint-disable-next-line\n\n      minI = Math.min(selectedCellIndex[0], minI), maxI = Math.max(minMaxIndex[0], maxI), minJ = Math.min(selectedCellIndex[1], minJ), maxJ = Math.max(minMaxIndex[1], maxJ);\n    }\n\n    return {\n      startRow: minI,\n      endRow: maxI,\n      startColumn: minJ,\n      endColumn: maxJ\n    };\n  };\n\n  TableCommand.prototype.insertRow = function (e) {\n    var isBelow = e.item.subCommand === 'InsertRowBefore' ? false : true;\n    var selectedCell = e.item.selection.range.startContainer;\n\n    if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n\n    if (selectedCell.nodeName.toLowerCase() === 'th' && e.item.subCommand === 'InsertRowBefore') {\n      return;\n    }\n\n    this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n\n    if (this.curTable.querySelectorAll('.e-cell-select').length === 0) {\n      var lastRow = this.curTable.rows[this.curTable.rows.length - 1];\n      var cloneRow = lastRow.cloneNode(true);\n      cloneRow.removeAttribute('rowspan');\n      this.insertAfter(cloneRow, lastRow);\n    } else {\n      var allCells = this.getCorrespondingColumns();\n      var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n      var minVal = isBelow ? minMaxIndex.endRow : minMaxIndex.startRow;\n      var newRow = createElement('tr');\n      var isHeaderSelect = this.curTable.querySelectorAll('th.e-cell-select').length > 0;\n\n      for (var i = 0; i < allCells[minVal].length; i++) {\n        if (isBelow && minVal < allCells.length - 1 && allCells[minVal][i] === allCells[minVal + 1][i] || !isBelow && 0 < minVal && allCells[minVal][i] === allCells[minVal - 1][i]) {\n          if (0 === i || 0 < i && allCells[minVal][i] !== allCells[minVal][i - 1]) {\n            allCells[minVal][i].setAttribute('rowspan', (parseInt(allCells[minVal][i].getAttribute('rowspan'), 10) + 1).toString());\n          }\n        } else {\n          var tdElement = createElement('td');\n          tdElement.appendChild(createElement('br'));\n          newRow.appendChild(tdElement);\n          tdElement.setAttribute('style', allCells[isHeaderSelect && isBelow ? minVal + 1 : minVal][i].getAttribute('style'));\n        }\n      } // eslint-disable-next-line\n\n\n      var selectedRow = void 0;\n\n      if (isHeaderSelect && isBelow) {\n        selectedRow = this.curTable.querySelector('tbody').childNodes[0];\n      } else {\n        selectedRow = this.curTable.rows[minVal];\n      } // eslint-disable-next-line\n\n\n      e.item.subCommand === 'InsertRowBefore' ? selectedRow.parentElement.insertBefore(newRow, selectedRow) : isHeaderSelect ? selectedRow.parentElement.insertBefore(newRow, selectedRow) : this.insertAfter(newRow, selectedRow);\n    }\n\n    e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.insertColumn = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n\n    if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n\n    var curRow = closest(selectedCell, 'tr');\n    var curCell;\n    var allRows = closest(curRow, 'table').rows;\n    var colIndex = Array.prototype.slice.call(curRow.querySelectorAll(':scope > td, :scope > th')).indexOf(selectedCell);\n    var previousWidth = parseInt(e.item.width, 10) / curRow.querySelectorAll(':scope > td, :scope > th').length;\n    var currentWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length + 1);\n    var currentTabElm = closest(curRow, 'table');\n    var thTdElm = closest(curRow, 'table').querySelectorAll('th,td');\n\n    for (var i = 0; i < thTdElm.length; i++) {\n      thTdElm[i].dataset.oldWidth = thTdElm[i].offsetWidth / currentTabElm.offsetWidth * 100 + '%';\n    }\n\n    for (var i = 0; i < allRows.length; i++) {\n      curCell = allRows[i].querySelectorAll(':scope > td, :scope > th')[colIndex];\n      var colTemplate = curCell.cloneNode(true);\n      colTemplate.innerHTML = '';\n      colTemplate.appendChild(createElement('br'));\n      colTemplate.removeAttribute('class');\n      colTemplate.removeAttribute('colspan');\n      colTemplate.removeAttribute('rowspan'); // eslint-disable-next-line\n\n      e.item.subCommand === 'InsertColumnLeft' ? curCell.parentElement.insertBefore(colTemplate, curCell) : this.insertAfter(colTemplate, curCell);\n      colTemplate.style.width = currentWidth.toFixed(4) + '%';\n      delete colTemplate.dataset.oldWidth;\n    }\n\n    for (var i = 0; i < thTdElm.length; i++) {\n      thTdElm[i].style.width = (Number(thTdElm[i].dataset.oldWidth.split('%')[0]) * currentWidth / previousWidth).toFixed(4) + '%';\n      delete thTdElm[i].dataset.oldWidth;\n    }\n\n    e.item.selection.setSelectionText(this.parent.currentDocument, selectedCell, selectedCell, 0, 0);\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.deleteColumn = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n\n    if (selectedCell.nodeType === 3) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n\n    var tBodyHeadEle = closest(selectedCell, selectedCell.tagName === 'TH' ? 'thead' : 'tbody');\n    var rowIndex = tBodyHeadEle && Array.prototype.indexOf.call(tBodyHeadEle.childNodes, selectedCell.parentNode);\n    this.curTable = closest(selectedCell, 'table');\n    var curRow = closest(selectedCell, 'tr');\n\n    if (curRow.querySelectorAll('th,td').length === 1) {\n      e.item.selection.restore();\n      detach(closest(selectedCell.parentElement, 'table'));\n    } else {\n      var deleteIndex = void 0;\n      var allCells = this.getCorrespondingColumns(); //eslint-disable-next-line\n\n      var selectedMinMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n      var minCol = selectedMinMaxIndex.startColumn;\n      var maxCol = selectedMinMaxIndex.endColumn;\n\n      for (var i = 0; i < allCells.length; i++) {\n        var currentRow = allCells[i];\n\n        for (var j = 0; j < currentRow.length; j++) {\n          var currentCell = currentRow[j]; //eslint-disable-next-line\n\n          var currentCellIndex = this.getCorrespondingIndex(currentCell, allCells);\n          var colSpanVal = parseInt(currentCell.getAttribute('colspan'), 10) || 1;\n\n          if (currentCellIndex[1] + (colSpanVal - 1) >= minCol && currentCellIndex[1] <= maxCol) {\n            if (colSpanVal > 1) {\n              currentCell.setAttribute('colspan', (colSpanVal - 1).toString());\n            } else {\n              detach(currentCell);\n              deleteIndex = j;\n\n              if (Browser.isIE) {\n                e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                this.curTable.querySelector('td, th').classList.add('e-cell-select');\n              }\n            }\n          }\n        }\n      }\n\n      if (deleteIndex > -1) {\n        var rowHeadEle = tBodyHeadEle.children[rowIndex];\n        var nextFocusCell = rowHeadEle && rowHeadEle.children[deleteIndex <= rowHeadEle.children.length - 1 ? deleteIndex : deleteIndex - 1];\n\n        if (nextFocusCell) {\n          e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n          nextFocusCell.classList.add('e-cell-select');\n        }\n      }\n    }\n\n    if (e.callBack) {\n      var sContainer = this.parent.nodeSelection.getRange(this.parent.currentDocument).startContainer;\n\n      if (sContainer.nodeName !== 'TD') {\n        var startChildLength = this.parent.nodeSelection.getRange(this.parent.currentDocument).startOffset;\n        var focusNode = sContainer.children[startChildLength];\n\n        if (focusNode) {\n          this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, focusNode, 0);\n        }\n      }\n\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.deleteRow = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n\n    if (selectedCell.nodeType === 3) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n\n    var colIndex = Array.prototype.indexOf.call(selectedCell.parentNode.childNodes, selectedCell);\n    this.curTable = closest(selectedCell, 'table');\n    var currentRow;\n    var allCells = this.getCorrespondingColumns();\n    var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n    var maxI;\n    var j;\n\n    if (this.curTable.rows.length === 1) {\n      e.item.selection.restore();\n      detach(closest(selectedCell.parentElement, 'table'));\n    } else {\n      for (maxI = minMaxIndex.endRow; maxI >= minMaxIndex.startRow; maxI--) {\n        currentRow = this.curTable.rows[maxI];\n\n        for (j = 0; j < allCells[maxI].length; j++) {\n          if (j === 0 || allCells[maxI][j] !== allCells[maxI][j - 1]) {\n            if (1 < parseInt(allCells[maxI][j].getAttribute('rowspan'), 10)) {\n              var rowSpanVal = parseInt(allCells[maxI][j].getAttribute('rowspan'), 10) - 1; //eslint-disable-next-line\n\n              1 === rowSpanVal ? allCells[maxI][j].removeAttribute('rowspan') : allCells[maxI][j].setAttribute('rowspan', rowSpanVal.toString());\n            }\n          }\n\n          if (maxI < allCells.length - 1 && allCells[maxI][j] === allCells[maxI + 1][j] && (0 === maxI || allCells[maxI][j] !== allCells[maxI - 1][j])) {\n            var element = allCells[maxI][j];\n            var index = void 0;\n\n            for (index = j; 0 < index && allCells[maxI][index] === allCells[maxI][index - 1]; index--) {\n              if (index === 0) {\n                this.curTable.rows[maxI + 1].prepend(element);\n              } else {\n                allCells[maxI + 1][index - 1].insertAdjacentElement('afterend', element);\n              }\n            }\n          }\n        }\n\n        var deleteIndex = currentRow.rowIndex;\n        this.curTable.deleteRow(deleteIndex);\n        var focusTrEle = !isNOU(this.curTable.rows[deleteIndex]) ? this.curTable.querySelectorAll('tbody tr')[deleteIndex] : this.curTable.querySelectorAll('tbody tr')[deleteIndex - 1];\n        var nextFocusCell = focusTrEle && focusTrEle.querySelectorAll('td')[colIndex];\n\n        if (nextFocusCell) {\n          e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n          nextFocusCell.classList.add('e-cell-select');\n        } else {\n          e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n          this.curTable.querySelector('td, th').classList.add('e-cell-select');\n        }\n      }\n    }\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.removeTable = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    selectedCell = selectedCell.nodeType === 3 ? selectedCell.parentNode : selectedCell;\n    var selectedTable = closest(selectedCell.parentElement, 'table');\n\n    if (selectedTable) {\n      e.item.selection.restore();\n      detach(selectedTable);\n    }\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.tableHeader = function (e) {\n    var headerExit = false;\n    var selectedCell = e.item.selection.range.startContainer;\n    selectedCell = selectedCell.nodeType === 3 ? selectedCell.parentNode : selectedCell;\n    var table = closest(selectedCell.parentElement, 'table');\n    [].slice.call(table.childNodes).forEach(function (el) {\n      if (el.nodeName === 'THEAD') {\n        headerExit = true;\n      }\n    });\n\n    if (table && !headerExit) {\n      var cellCount = table.querySelector('tr').childElementCount;\n      var colSpanCount = 0;\n\n      for (var i = 0; i < cellCount; i++) {\n        colSpanCount = colSpanCount + (parseInt(table.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n      }\n\n      var header = table.createTHead();\n      var row = header.insertRow(0);\n\n      for (var j = 0; j < colSpanCount; j++) {\n        var th = createElement('th');\n        th.appendChild(createElement('br'));\n        row.appendChild(th);\n      }\n    } else {\n      table.deleteTHead();\n    }\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.tableVerticalAlign = function (e) {\n    if (e.item.subCommand === 'AlignTop') {\n      e.item.tableCell.style.verticalAlign = 'top';\n    } else if (e.item.subCommand === 'AlignMiddle') {\n      e.item.tableCell.style.verticalAlign = 'middle';\n    } else {\n      e.item.tableCell.style.verticalAlign = 'bottom';\n    }\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.cellMerge = function (e) {\n    if (isNOU(this.curTable)) {\n      this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n    }\n\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n\n    if (selectedCells.length < 2) {\n      return;\n    }\n\n    this.mergeCellContent();\n    var minMaxIndexes = this.getSelectedMinMaxIndexes(this.getCorrespondingColumns());\n    var firstCell = selectedCells[0];\n    var rowSelectedCells = firstCell.parentElement.querySelectorAll('.e-cell-select');\n\n    if (minMaxIndexes.startColumn < minMaxIndexes.endColumn) {\n      firstCell.setAttribute('colspan', (minMaxIndexes.endColumn - minMaxIndexes.startColumn + 1).toString());\n    }\n\n    if (minMaxIndexes.startRow < minMaxIndexes.endRow) {\n      firstCell.setAttribute('rowspan', (minMaxIndexes.endRow - minMaxIndexes.startRow + 1).toString());\n    }\n\n    var totalWidth = 0;\n\n    for (var j = rowSelectedCells.length - 1; j >= 0; j--) {\n      totalWidth = totalWidth + parseFloat(rowSelectedCells[j].style.width);\n    }\n\n    firstCell.style.width = totalWidth + '%';\n\n    for (var i = 1; i <= selectedCells.length - 1; i++) {\n      detach(selectedCells[i]);\n    }\n\n    for (var i = 0; i < this.curTable.rows.length; i++) {\n      if (this.curTable.rows[i].innerHTML === '') {\n        detach(this.curTable.rows[i]);\n      }\n    }\n\n    this.updateRowSpanStyle(minMaxIndexes.startRow, minMaxIndexes.endRow, this.getCorrespondingColumns());\n    this.updateColSpanStyle(minMaxIndexes.startColumn, minMaxIndexes.endColumn, this.getCorrespondingColumns());\n    e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n\n    if (this.parent.nodeSelection.range) {\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, // eslint-disable-next-line\n      this.parent.nodeSelection.range.endContainer, 0);\n    }\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.updateColSpanStyle = function (min, max, elements) {\n    var colValue;\n    var colIndex;\n    var colMin;\n    var index = 0;\n    var attrValue;\n    var count = 0;\n    var eleArray = elements; //eslint-disable-next-line\n\n    if (min < (max = Math.min(max, eleArray[0].length - 1))) {\n      for (colIndex === min; colIndex <= max; colIndex++) {\n        // eslint-disable-next-line\n        if (!(min < colIndex && eleArray[0][colIndex] === eleArray[0][colIndex - 1]) && 1 < (index = Math.min(parseInt(eleArray[0][colIndex].getAttribute('colspan'), 10) || 1, max - min + 1)) && eleArray[0][colIndex] === eleArray[0][colIndex + 1]) {\n          for (count = index - 1, colValue = 1; colValue < eleArray.length; colValue++) {\n            if (eleArray[colValue][colIndex] !== eleArray[colValue - 1][colIndex]) {\n              /* eslint-disable */\n              for (colMin = colIndex; colMin < colIndex + index; colMin++) {\n                if (1 < (attrValue = parseInt(eleArray[colValue][colMin].getAttribute('colspan'), 10) || 1) && eleArray[colValue][colMin] === eleArray[colValue][colMin + 1]) {\n                  colMin += count = Math.min(count, attrValue - 1);\n                } else if (!(count = Math.max(0, count - 1))) {\n                  break;\n                }\n                /* eslint-enable */\n\n              }\n            }\n\n            if (!count) {\n              break;\n            }\n          }\n        }\n      }\n\n      if (count) {\n        this.updateCellAttribute(eleArray, count, 'colspan', 0, eleArray.length - 1, min, max);\n      }\n    }\n  };\n\n  TableCommand.prototype.updateRowSpanStyle = function (min, max, ele) {\n    var rowValue;\n    var colIndex;\n    var rowMin;\n    var index = 0;\n    var attrValue;\n    var count = 0;\n    var eleArray = ele; // eslint-disable-next-line\n\n    if (min < (max = Math.min(max, eleArray.length - 1))) {\n      for (rowValue = min; rowValue <= max; rowValue++) {\n        // eslint-disable-next-line\n        if (!(min < rowValue && eleArray[rowValue][0] === eleArray[rowValue - 1][0]) && 1 < (index = Math.min(parseInt(eleArray[rowValue][0].getAttribute('rowspan'), 10) || 1, max - min + 1)) && eleArray[rowValue][0] === eleArray[rowValue + 1][0]) {\n          for (count = index - 1, colIndex = 1; colIndex < eleArray[0].length; colIndex++) {\n            if (eleArray[rowValue][colIndex] !== eleArray[rowValue][colIndex - 1]) {\n              for (rowMin = rowValue; rowMin < rowValue + index; rowMin++) {\n                // eslint-disable-next-line\n                if (1 < (attrValue = parseInt(eleArray[rowMin][colIndex].getAttribute('rowspan'), 10) || 1) && eleArray[rowMin][colIndex] === eleArray[rowMin + 1][colIndex]) {\n                  rowMin += count = Math.min(count, attrValue - 1);\n                } // eslint-disable-next-line\n                else if (!(count = Math.max(0, count - 1))) {\n                  break;\n                }\n              }\n\n              if (!count) {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      if (count) {\n        this.updateCellAttribute(eleArray, count, 'rowspan', min, max, 0, eleArray[0].length - 1);\n      }\n    }\n  };\n\n  TableCommand.prototype.updateCellAttribute = function (elements, index, attr, min, max, firstIndex, length) {\n    var rowIndex;\n    var colIndex;\n    var spanCount;\n\n    for (rowIndex = min; rowIndex <= max; rowIndex++) {\n      for (colIndex = firstIndex; colIndex <= length; colIndex++) {\n        // eslint-disable-next-line\n        min < rowIndex && elements[rowIndex][colIndex] === elements[rowIndex - 1][colIndex] || firstIndex < colIndex && elements[rowIndex][colIndex] === elements[rowIndex][colIndex - 1] || 1 < (spanCount = parseInt(elements[rowIndex][colIndex].getAttribute(attr), 10) || 1) && (1 < spanCount - index ? elements[rowIndex][colIndex].setAttribute(attr, (spanCount - index).toString()) : elements[rowIndex][colIndex].removeAttribute(attr));\n      }\n    }\n  };\n\n  TableCommand.prototype.mergeCellContent = function () {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    var innerHtml = selectedCells[0].innerHTML;\n\n    for (var i = 1; i < selectedCells.length - 1; i++) {\n      if ('<br>' !== selectedCells[i].innerHTML) {\n        innerHtml = innerHtml + selectedCells[i].innerHTML;\n      }\n    }\n\n    selectedCells[0].innerHTML = innerHtml;\n  };\n\n  TableCommand.prototype.getSelectedMinMaxIndexes = function (correspondingCells) {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n\n    if (0 < selectedCells.length) {\n      var minRow = correspondingCells.length;\n      var maxRow = 0;\n      var minCol = correspondingCells[0].length;\n      var maxCol = 0;\n\n      for (var i = 0; i < selectedCells.length; i++) {\n        var currentRowCol = this.getCorrespondingIndex(selectedCells[i], correspondingCells);\n        var targetRowCol = this.FindIndex(currentRowCol[0], currentRowCol[1], correspondingCells);\n        minRow = Math.min(currentRowCol[0], minRow);\n        maxRow = Math.max(targetRowCol[0], maxRow);\n        minCol = Math.min(currentRowCol[1], minCol);\n        maxCol = Math.max(targetRowCol[1], maxCol);\n      }\n\n      return {\n        startRow: minRow,\n        endRow: maxRow,\n        startColumn: minCol,\n        endColumn: maxCol\n      };\n    }\n\n    return null;\n  };\n\n  TableCommand.prototype.HorizontalSplit = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    this.curTable = closest(selectedCell.parentElement, 'table');\n\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      return;\n    }\n\n    this.activeCell = this.curTable.querySelector('.e-cell-select');\n    var newCell = this.activeCell.cloneNode(true);\n    newCell.removeAttribute('class');\n    newCell.innerHTML = '</br>';\n    var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n    var correspondingCells = this.getCorrespondingColumns();\n    var activeCellRowSpan = this.activeCell.getAttribute('rowspan') ? parseInt(this.activeCell.getAttribute('rowspan'), 10) : 1;\n\n    if (activeCellRowSpan > 1) {\n      var avgCount = Math.ceil(activeCellRowSpan / 2); // eslint-disable-next-line\n\n      1 < avgCount ? this.activeCell.setAttribute('rowspan', avgCount.toString()) : this.activeCell.removeAttribute('rowspan'); // eslint-disable-next-line\n\n      1 < activeCellRowSpan - avgCount ? newCell.setAttribute('rowspan', (activeCellRowSpan - avgCount).toString()) : newCell.removeAttribute('rowspan');\n      var avgRowIndex = void 0;\n      var colIndex = void 0;\n\n      for (avgRowIndex = activeCellIndex[0] + Math.ceil(activeCellRowSpan / 2), colIndex = 0 === activeCellIndex[1] ? activeCellIndex[1] : activeCellIndex[1] - 1; 0 <= colIndex && (correspondingCells[avgRowIndex][colIndex] === correspondingCells[avgRowIndex][colIndex - 1] || 0 < avgRowIndex && correspondingCells[avgRowIndex][colIndex] === correspondingCells[avgRowIndex - 1][colIndex]);) {\n        colIndex--;\n      }\n\n      if (colIndex === -1) {\n        // eslint-disable-next-line\n        this.curTable.rows[avgRowIndex].firstChild ? this.curTable.rows[avgRowIndex].prepend(newCell) : this.curTable.appendChild(newCell);\n      } else {\n        correspondingCells[avgRowIndex][colIndex].insertAdjacentElement('afterend', newCell);\n      }\n    } else {\n      var newTrEle = createElement('tr');\n      newTrEle.appendChild(newCell);\n      var selectedRow = correspondingCells[activeCellIndex[0]];\n\n      for (var j = 0; j <= selectedRow.length - 1; j++) {\n        if (selectedRow[j] !== selectedRow[j - 1] && selectedRow[j] !== this.activeCell) {\n          selectedRow[j].setAttribute('rowspan', ((parseInt(selectedRow[j].getAttribute('rowspan'), 10) ? parseInt(selectedRow[j].getAttribute('rowspan'), 10) : 1) + 1).toString());\n        }\n      }\n\n      this.activeCell.parentNode.insertAdjacentElement('afterend', newTrEle);\n    }\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.VerticalSplit = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    this.curTable = closest(selectedCell.parentElement, 'table');\n\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      return;\n    }\n\n    this.activeCell = this.curTable.querySelector('.e-cell-select');\n    var allRows = this.curTable.rows;\n    var newCell = this.activeCell.cloneNode(true);\n    newCell.removeAttribute('class');\n    newCell.innerHTML = '</br>';\n    var avgWidth = parseFloat(this.activeCell.style.width) / 2;\n\n    if (this.activeCell.tagName === 'TH' && isNaN(avgWidth)) {\n      var cellCount = this.curTable.querySelector('tr').childElementCount;\n      var colSpanCount = 0;\n\n      for (var i = 0; i < cellCount; i++) {\n        colSpanCount = colSpanCount + (parseInt(this.curTable.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n      }\n\n      avgWidth = parseFloat((this.activeCell.offsetWidth / 2 / this.curTable.offsetWidth * 100).toFixed(1));\n    }\n\n    var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n    var correspondingColumns = this.getCorrespondingColumns();\n    var activeCellcolSpan = parseInt(this.activeCell.getAttribute('colspan'), 10);\n\n    if (activeCellcolSpan > 1) {\n      // eslint-disable-next-line\n      1 < Math.ceil(activeCellcolSpan / 2) ? this.activeCell.setAttribute('colspan', (activeCellcolSpan / 2).toString()) : this.activeCell.removeAttribute('colspan'); // eslint-disable-next-line\n\n      1 < activeCellcolSpan - activeCellcolSpan / 2 ? newCell.setAttribute('colspan', // eslint-disable-next-line\n      (activeCellcolSpan - activeCellcolSpan / 2).toString()) : newCell.removeAttribute('colspan');\n    } else {\n      for (var i = 0; i <= allRows.length - 1; i++) {\n        if (0 === i || correspondingColumns[i][activeCellIndex[1]] !== correspondingColumns[i - 1][activeCellIndex[1]]) {\n          var currentCell = correspondingColumns[i][activeCellIndex[1]];\n\n          if (currentCell !== this.activeCell) {\n            currentCell.setAttribute('colspan', ((parseInt(currentCell.getAttribute('colspan'), 10) ? parseInt(currentCell.getAttribute('colspan'), 10) : 1) + 1).toString());\n          }\n        }\n      }\n    }\n\n    this.activeCell.style.width = avgWidth + '%';\n    newCell.style.width = avgWidth + '%';\n    this.activeCell.parentNode.insertBefore(newCell, this.activeCell.nextSibling);\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  TableCommand.prototype.getCorrespondingColumns = function () {\n    var elementArray = []; // eslint-disable-next-line\n\n    var _this = this;\n\n    var colspan = 0;\n    var allRows = _this.curTable.rows;\n\n    for (var i = 0; i <= allRows.length - 1; i++) {\n      var ele = allRows[i];\n      var index = 0;\n\n      for (var j = 0; j <= ele.children.length - 1; j++) {\n        /* eslint-disable */\n        var colEle = ele.children[j];\n\n        for (var ele_1 = colEle, colspan_1 = parseInt(ele_1.getAttribute('colspan'), 10) || 1, rowSpan = parseInt(ele_1.getAttribute('rowspan'), 10) || 1, rowIndex = i; rowIndex < i + rowSpan; rowIndex++) {\n          for (var colIndex = index; colIndex < index + colspan_1; colIndex++) {\n            elementArray[rowIndex] || (elementArray[rowIndex] = []);\n            elementArray[rowIndex][colIndex] ? index++ : elementArray[rowIndex][colIndex] = colEle;\n          }\n        }\n\n        index += colspan;\n      }\n      /* eslint-enable */\n\n    }\n\n    return elementArray;\n  }; // eslint-disable-next-line\n\n\n  TableCommand.prototype.FindIndex = function (rowIndex, columnIndex, cells) {\n    var nextIndex;\n    var nextCol;\n\n    for (nextIndex = rowIndex + 1, nextCol = columnIndex + 1; nextIndex < cells.length;) {\n      if (cells[nextIndex][columnIndex] !== cells[rowIndex][columnIndex]) {\n        nextIndex--;\n        break;\n      }\n\n      nextIndex++;\n    }\n\n    for (nextIndex === cells.length && nextIndex--; nextCol < cells[rowIndex].length;) {\n      if (cells[rowIndex][nextCol] !== cells[rowIndex][columnIndex]) {\n        nextCol--;\n        break;\n      }\n\n      nextCol++;\n    }\n\n    return nextCol === cells[rowIndex].length && nextCol--, [nextIndex, nextCol];\n  };\n\n  TableCommand.prototype.getCorrespondingIndex = function (cell, allCells) {\n    //let value: RowCol = new RowCol();\n    for (var i = 0; i < allCells.length; i++) {\n      for (var j = 0; j < allCells[i].length; j++) {\n        if (allCells[i][j] === cell) {\n          return [i, j];\n        }\n      }\n    }\n\n    return [];\n  };\n\n  TableCommand.prototype.highlightCells = function (minRow, maxRow, minCol, maxCol, eleArray) {\n    var j;\n    var k;\n    var startCell;\n    var endCell;\n    var minRowIndex = minRow;\n    var maxRowIndex = maxRow;\n    var minColIndex = minCol;\n    var maxColIndex = maxCol;\n    var minMaxValues = new MinMax();\n\n    for (j = minRowIndex; j <= maxRowIndex; j++) {\n      /* eslint-disable */\n      if ((1 < (parseInt(eleArray[j][minColIndex].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[j][minColIndex].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][minColIndex], eleArray))[0], startCell[1], eleArray))) {\n        minRowIndex = Math.min(startCell[0], minRowIndex);\n        maxRowIndex = Math.max(endCell[0], maxRowIndex);\n        minColIndex = Math.min(startCell[1], minColIndex);\n        maxColIndex = Math.max(endCell[1], maxColIndex);\n      } else if ((1 < (parseInt(eleArray[j][maxColIndex].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[j][maxColIndex].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][maxColIndex], eleArray))[0], startCell[1], eleArray))) {\n        minRowIndex = Math.min(startCell[0], minRowIndex);\n        maxRowIndex = Math.max(endCell[0], maxRowIndex);\n        minColIndex = Math.min(startCell[1], minColIndex);\n        maxColIndex = Math.max(endCell[1], maxColIndex);\n      }\n\n      for (k = minColIndex; k <= maxColIndex; k++) {\n        if ((1 < (parseInt(eleArray[minRowIndex][k].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[minRowIndex][k].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[minRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n          minRowIndex = Math.min(startCell[0], minRowIndex);\n          maxRowIndex = Math.max(endCell[0], maxRowIndex);\n          minColIndex = Math.min(startCell[1], minColIndex);\n          maxColIndex = Math.max(endCell[1], maxColIndex);\n        } else if ((1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[maxRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n          minRowIndex = Math.min(startCell[0], minRowIndex);\n          maxRowIndex = Math.max(endCell[0], maxRowIndex);\n          minColIndex = Math.min(startCell[1], minColIndex);\n          maxColIndex = Math.max(endCell[1], maxColIndex);\n        }\n      }\n\n      minMaxValues = minRowIndex === minRow && maxRowIndex === maxRow && minColIndex === minCol && maxColIndex === maxCol ? {\n        startRow: minRow,\n        endRow: maxRow,\n        startColumn: minCol,\n        endColumn: maxCol\n      } : this.highlightCells(minRowIndex, maxRowIndex, minColIndex, maxColIndex, eleArray);\n    }\n\n    return minMaxValues;\n    /* eslint-enable */\n  };\n\n  TableCommand.prototype.tableMove = function (e) {\n    this.activeCell = e.selectNode[0];\n    var target = e.event.target;\n    var activeCellTag = this.activeCell.tagName;\n    var targetCellTag = target.tagName;\n    this.curTable = closest(target, 'table');\n\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      this.parent.nodeSelection.Clear(this.parent.currentDocument);\n    }\n\n    if (target.tagName !== 'TD' && target.tagName !== 'TH' && activeCellTag !== targetCellTag) {\n      return;\n    }\n\n    var activeRowIndex = Array.prototype.slice.call(this.activeCell.parentElement.parentElement.children).indexOf(this.activeCell.parentElement);\n    var activeColumnIndex = Array.prototype.slice.call(this.activeCell.parentElement.children).indexOf(this.activeCell);\n    var targetRowIndex = Array.prototype.slice.call(target.parentElement.parentElement.children).indexOf(target.parentElement);\n    var targetColumnIndex = Array.prototype.slice.call(target.parentElement.children).indexOf(target);\n    var activeCellList = this.curTable.querySelectorAll('.e-cell-select');\n\n    for (var i = activeCellList.length - 1; i >= 0; i--) {\n      if (this.activeCell !== activeCellList[i]) {\n        activeCellList[i].classList.remove('e-cell-select');\n      }\n    }\n\n    if (activeRowIndex === targetRowIndex && activeColumnIndex === targetColumnIndex) {\n      return;\n    }\n\n    var correspondingCells = this.getCorrespondingColumns();\n    var activeIndexes = this.getCorrespondingIndex(this.activeCell, correspondingCells);\n    var targetIndexes = this.getCorrespondingIndex(target, correspondingCells);\n    var minMaxIndexes = this.highlightCells(Math.min(activeIndexes[0], targetIndexes[0]), Math.max(activeIndexes[0],\n    /* eslint-disable */\n    targetIndexes[0]), Math.min(activeIndexes[1], targetIndexes[1]), Math.max(activeIndexes[1], targetIndexes[1]), correspondingCells);\n\n    for (var rowIndex = minMaxIndexes.startRow; rowIndex <= minMaxIndexes.endRow; rowIndex++) {\n      for (var colIndex = minMaxIndexes.startColumn; colIndex <= minMaxIndexes.endColumn; colIndex++) {\n        correspondingCells[rowIndex][colIndex].classList.add('e-cell-select');\n      }\n    }\n\n    if (this.parent.nodeSelection.range) {\n      this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, this.parent.nodeSelection.range.endContainer, 0, 0);\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, 0);\n    }\n  };\n\n  ;\n  return TableCommand;\n}();\n\nexport { TableCommand };\n\nvar MinMax =\n/** @class */\nfunction () {\n  function MinMax() {}\n\n  return MinMax;\n}();","map":{"version":3,"names":["createElement","closest","detach","Browser","isNullOrUndefined","isNOU","CONSTANT","InsertHtml","TableCommand","parent","addEventListener","prototype","observer","on","TABLE","createTable","INSERT_ROW","insertRow","INSERT_COLUMN","insertColumn","DELETEROW","deleteRow","DELETECOLUMN","deleteColumn","REMOVETABLE","removeTable","TABLEHEADER","tableHeader","TABLE_VERTICAL_ALIGN","tableVerticalAlign","TABLE_MERGE","cellMerge","TABLE_HORIZONTAL_SPLIT","HorizontalSplit","TABLE_VERTICAL_SPLIT","VerticalSplit","TABLE_MOVE","tableMove","e","table","className","tblBody","item","width","style","calculateStyleValue","minWidth","maxWidth","tdWid","parseInt","columns","i","rows","row","j","cell","appendChild","selection","restore","Insert","currentDocument","editableElement","removeEmptyNode","setSelectionText","querySelector","nextElementSibling","insertElem","enterAction","insertAfter","classList","add","callBack","requestType","editorMode","event","range","nodeSelection","getRange","elements","value","styleValue","indexOf","emptyUl","querySelectorAll","length","emptyLiChild","emptyLi","newNode","referenceNode","parentNode","insertBefore","nextSibling","getSelectedCellMinMaxIndex","selectedCells","curTable","a","minI","maxI","minJ","maxJ","selectedCellIndex","getCorrespondingIndex","minMaxIndex","FindIndex","Math","min","max","startRow","endRow","startColumn","endColumn","isBelow","subCommand","selectedCell","startContainer","nodeName","parentElement","toLowerCase","lastRow","cloneRow","cloneNode","removeAttribute","allCells","getCorrespondingColumns","minVal","newRow","isHeaderSelect","setAttribute","getAttribute","toString","tdElement","selectedRow","childNodes","getSelectedNodes","curRow","curCell","allRows","colIndex","Array","slice","call","previousWidth","currentWidth","currentTabElm","thTdElm","dataset","oldWidth","offsetWidth","colTemplate","innerHTML","toFixed","Number","split","nodeType","tBodyHeadEle","tagName","rowIndex","deleteIndex","selectedMinMaxIndex","minCol","maxCol","currentRow","currentCell","currentCellIndex","colSpanVal","isIE","rowHeadEle","children","nextFocusCell","sContainer","startChildLength","startOffset","focusNode","setCursorPoint","rowSpanVal","element","index","prepend","insertAdjacentElement","focusTrEle","selectedTable","headerExit","forEach","el","cellCount","childElementCount","colSpanCount","header","createTHead","th","deleteTHead","tableCell","verticalAlign","mergeCellContent","minMaxIndexes","getSelectedMinMaxIndexes","firstCell","rowSelectedCells","totalWidth","parseFloat","updateRowSpanStyle","updateColSpanStyle","endContainer","colValue","colMin","attrValue","count","eleArray","updateCellAttribute","ele","rowValue","rowMin","attr","firstIndex","spanCount","innerHtml","correspondingCells","minRow","maxRow","currentRowCol","targetRowCol","activeCell","newCell","activeCellIndex","activeCellRowSpan","avgCount","ceil","avgRowIndex","firstChild","newTrEle","avgWidth","isNaN","correspondingColumns","activeCellcolSpan","elementArray","_this","colspan","colEle","ele_1","colspan_1","rowSpan","columnIndex","cells","nextIndex","nextCol","highlightCells","k","startCell","endCell","minRowIndex","maxRowIndex","minColIndex","maxColIndex","minMaxValues","MinMax","selectNode","target","activeCellTag","targetCellTag","Clear","activeRowIndex","activeColumnIndex","targetRowIndex","targetColumnIndex","activeCellList","remove","activeIndexes","targetIndexes"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/table.js"],"sourcesContent":["import { createElement, closest, detach, Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { InsertHtml } from './inserthtml';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar TableCommand = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {EditorManager} parent - specifies the parent element\n     * @hidden\n\n     */\n    function TableCommand(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    TableCommand.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.TABLE, this.createTable, this);\n        this.parent.observer.on(CONSTANT.INSERT_ROW, this.insertRow, this);\n        this.parent.observer.on(CONSTANT.INSERT_COLUMN, this.insertColumn, this);\n        this.parent.observer.on(CONSTANT.DELETEROW, this.deleteRow, this);\n        this.parent.observer.on(CONSTANT.DELETECOLUMN, this.deleteColumn, this);\n        this.parent.observer.on(CONSTANT.REMOVETABLE, this.removeTable, this);\n        this.parent.observer.on(CONSTANT.TABLEHEADER, this.tableHeader, this);\n        this.parent.observer.on(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign, this);\n        this.parent.observer.on(CONSTANT.TABLE_MERGE, this.cellMerge, this);\n        this.parent.observer.on(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit, this);\n        this.parent.observer.on(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit, this);\n        this.parent.observer.on(CONSTANT.TABLE_MOVE, this.tableMove, this);\n    };\n    TableCommand.prototype.createTable = function (e) {\n        var table = createElement('table', { className: 'e-rte-table' });\n        var tblBody = createElement('tbody');\n        if (!isNOU(e.item.width.width)) {\n            table.style.width = this.calculateStyleValue(e.item.width.width);\n        }\n        if (!isNOU(e.item.width.minWidth)) {\n            table.style.minWidth = this.calculateStyleValue(e.item.width.minWidth);\n        }\n        if (!isNOU(e.item.width.maxWidth)) {\n            table.style.maxWidth = this.calculateStyleValue(e.item.width.maxWidth);\n        }\n        var tdWid = parseInt(e.item.width.width, 10) > 100 ?\n            100 / e.item.columns : parseInt(e.item.width.width, 10) / e.item.columns;\n        for (var i = 0; i < e.item.rows; i++) {\n            var row = createElement('tr');\n            for (var j = 0; j < e.item.columns; j++) {\n                var cell = createElement('td');\n                cell.appendChild(createElement('br'));\n                cell.style.width = tdWid + '%';\n                row.appendChild(cell);\n            }\n            tblBody.appendChild(row);\n        }\n        table.appendChild(tblBody);\n        e.item.selection.restore();\n        InsertHtml.Insert(this.parent.currentDocument, table, this.parent.editableElement);\n        this.removeEmptyNode();\n        e.item.selection.setSelectionText(this.parent.currentDocument, table.querySelector('td'), table.querySelector('td'), 0, 0);\n        if (table.nextElementSibling === null) {\n            var insertElem = void 0;\n            if (e.enterAction === 'DIV') {\n                insertElem = createElement('div');\n                insertElem.appendChild(createElement('br'));\n            }\n            else if (e.enterAction === 'BR') {\n                insertElem = createElement('br');\n            }\n            else {\n                insertElem = createElement('p');\n                insertElem.appendChild(createElement('br'));\n            }\n            this.insertAfter(insertElem, table);\n        }\n        table.querySelector('td').classList.add('e-cell-select');\n        if (e.callBack) {\n            e.callBack({\n                requestType: 'Table',\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: [table]\n            });\n        }\n        return table;\n    };\n    TableCommand.prototype.calculateStyleValue = function (value) {\n        var styleValue;\n        if (typeof (value) === 'string') {\n            if (value.indexOf('px') || value.indexOf('%') || value.indexOf('auto')) {\n                styleValue = value;\n            }\n            else {\n                styleValue = value + 'px';\n            }\n        }\n        else {\n            styleValue = value + 'px';\n        }\n        return styleValue;\n    };\n    TableCommand.prototype.removeEmptyNode = function () {\n        var emptyUl = this.parent.editableElement.querySelectorAll('ul:empty, ol:empty');\n        for (var i = 0; i < emptyUl.length; i++) {\n            detach(emptyUl[i]);\n        }\n        var emptyLiChild = this.parent.editableElement.querySelectorAll('li *:empty');\n        for (var i = 0; i < emptyLiChild.length; i++) {\n            detach(emptyLiChild[i]);\n            if (emptyLiChild.length === i + 1) {\n                emptyLiChild = this.parent.editableElement.querySelectorAll('li *:empty');\n                i = -1;\n            }\n        }\n        var emptyLi = this.parent.editableElement.querySelectorAll('li:empty');\n        for (var i = 0; i < emptyLi.length; i++) {\n            detach(emptyLi[i]);\n        }\n    };\n    TableCommand.prototype.insertAfter = function (newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    };\n    TableCommand.prototype.getSelectedCellMinMaxIndex = function (e) {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        var a = 0;\n        var minI = e.length;\n        var maxI = 0;\n        var minJ = e[0].length;\n        var maxJ = 0;\n        //eslint-disable-next-line\n        for (var i = 0; a < selectedCells.length; a++) {\n            var selectedCellIndex = this.getCorrespondingIndex(selectedCells[a], e);\n            var minMaxIndex = this.FindIndex(selectedCellIndex[0], selectedCellIndex[1], e);\n            //eslint-disable-next-line\n            minI = Math.min(selectedCellIndex[0], minI),\n                maxI = Math.max(minMaxIndex[0], maxI),\n                minJ = Math.min(selectedCellIndex[1], minJ),\n                maxJ = Math.max(minMaxIndex[1], maxJ);\n        }\n        return {\n            startRow: minI,\n            endRow: maxI,\n            startColumn: minJ,\n            endColumn: maxJ\n        };\n    };\n    TableCommand.prototype.insertRow = function (e) {\n        var isBelow = e.item.subCommand === 'InsertRowBefore' ? false : true;\n        var selectedCell = e.item.selection.range.startContainer;\n        if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        if (selectedCell.nodeName.toLowerCase() === 'th' && e.item.subCommand === 'InsertRowBefore') {\n            return;\n        }\n        this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length === 0) {\n            var lastRow = this.curTable.rows[this.curTable.rows.length - 1];\n            var cloneRow = lastRow.cloneNode(true);\n            cloneRow.removeAttribute('rowspan');\n            this.insertAfter(cloneRow, lastRow);\n        }\n        else {\n            var allCells = this.getCorrespondingColumns();\n            var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n            var minVal = isBelow ? minMaxIndex.endRow : minMaxIndex.startRow;\n            var newRow = createElement('tr');\n            var isHeaderSelect = this.curTable.querySelectorAll('th.e-cell-select').length > 0;\n            for (var i = 0; i < allCells[minVal].length; i++) {\n                if (isBelow && minVal < allCells.length - 1 && allCells[minVal][i] === allCells[minVal + 1][i] ||\n                    !isBelow && 0 < minVal && allCells[minVal][i] === allCells[minVal - 1][i]) {\n                    if (0 === i || 0 < i && allCells[minVal][i] !== allCells[minVal][i - 1]) {\n                        allCells[minVal][i].setAttribute('rowspan', (parseInt(allCells[minVal][i].getAttribute('rowspan'), 10) + 1).toString());\n                    }\n                }\n                else {\n                    var tdElement = createElement('td');\n                    tdElement.appendChild(createElement('br'));\n                    newRow.appendChild(tdElement);\n                    tdElement.setAttribute('style', allCells[(isHeaderSelect && isBelow) ? (minVal + 1) : minVal][i].getAttribute('style'));\n                }\n            }\n            // eslint-disable-next-line\n            var selectedRow = void 0;\n            if (isHeaderSelect && isBelow) {\n                selectedRow = this.curTable.querySelector('tbody').childNodes[0];\n            }\n            else {\n                selectedRow = this.curTable.rows[minVal];\n            }\n            // eslint-disable-next-line\n            (e.item.subCommand === 'InsertRowBefore') ? selectedRow.parentElement.insertBefore(newRow, selectedRow) :\n                (isHeaderSelect ? selectedRow.parentElement.insertBefore(newRow, selectedRow) :\n                    this.insertAfter(newRow, selectedRow));\n        }\n        e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.insertColumn = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var curRow = closest(selectedCell, 'tr');\n        var curCell;\n        var allRows = closest((curRow), 'table').rows;\n        var colIndex = Array.prototype.slice.call(curRow.querySelectorAll(':scope > td, :scope > th')).indexOf(selectedCell);\n        var previousWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length);\n        var currentWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length + 1);\n        var currentTabElm = closest(curRow, 'table');\n        var thTdElm = closest(curRow, 'table').querySelectorAll('th,td');\n        for (var i = 0; i < thTdElm.length; i++) {\n            thTdElm[i].dataset.oldWidth = (thTdElm[i].offsetWidth / currentTabElm.offsetWidth * 100) + '%';\n        }\n        for (var i = 0; i < allRows.length; i++) {\n            curCell = allRows[i].querySelectorAll(':scope > td, :scope > th')[colIndex];\n            var colTemplate = curCell.cloneNode(true);\n            colTemplate.innerHTML = '';\n            colTemplate.appendChild(createElement('br'));\n            colTemplate.removeAttribute('class');\n            colTemplate.removeAttribute('colspan');\n            colTemplate.removeAttribute('rowspan');\n            // eslint-disable-next-line\n            (e.item.subCommand === 'InsertColumnLeft') ? curCell.parentElement.insertBefore(colTemplate, curCell) :\n                this.insertAfter(colTemplate, curCell);\n            colTemplate.style.width = currentWidth.toFixed(4) + '%';\n            delete colTemplate.dataset.oldWidth;\n        }\n        for (var i = 0; i < thTdElm.length; i++) {\n            thTdElm[i].style.width = (Number(thTdElm[i].dataset.oldWidth.split('%')[0]) * currentWidth / previousWidth).toFixed(4) + '%';\n            delete thTdElm[i].dataset.oldWidth;\n        }\n        e.item.selection.setSelectionText(this.parent.currentDocument, selectedCell, selectedCell, 0, 0);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.deleteColumn = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (selectedCell.nodeType === 3) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var tBodyHeadEle = closest(selectedCell, selectedCell.tagName === 'TH' ? 'thead' : 'tbody');\n        var rowIndex = tBodyHeadEle && Array.prototype.indexOf.call(tBodyHeadEle.childNodes, selectedCell.parentNode);\n        this.curTable = closest(selectedCell, 'table');\n        var curRow = closest(selectedCell, 'tr');\n        if (curRow.querySelectorAll('th,td').length === 1) {\n            e.item.selection.restore();\n            detach(closest(selectedCell.parentElement, 'table'));\n        }\n        else {\n            var deleteIndex = void 0;\n            var allCells = this.getCorrespondingColumns();\n            //eslint-disable-next-line\n            var selectedMinMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n            var minCol = selectedMinMaxIndex.startColumn;\n            var maxCol = selectedMinMaxIndex.endColumn;\n            for (var i = 0; i < allCells.length; i++) {\n                var currentRow = allCells[i];\n                for (var j = 0; j < currentRow.length; j++) {\n                    var currentCell = currentRow[j];\n                    //eslint-disable-next-line\n                    var currentCellIndex = this.getCorrespondingIndex(currentCell, allCells);\n                    var colSpanVal = parseInt(currentCell.getAttribute('colspan'), 10) || 1;\n                    if (currentCellIndex[1] + (colSpanVal - 1) >= minCol && currentCellIndex[1] <= maxCol) {\n                        if (colSpanVal > 1) {\n                            currentCell.setAttribute('colspan', (colSpanVal - 1).toString());\n                        }\n                        else {\n                            detach(currentCell);\n                            deleteIndex = j;\n                            if (Browser.isIE) {\n                                e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                                this.curTable.querySelector('td, th').classList.add('e-cell-select');\n                            }\n                        }\n                    }\n                }\n            }\n            if (deleteIndex > -1) {\n                var rowHeadEle = tBodyHeadEle.children[rowIndex];\n                var nextFocusCell = rowHeadEle &&\n                    rowHeadEle.children[(deleteIndex <= rowHeadEle.children.length - 1 ? deleteIndex : deleteIndex - 1)];\n                if (nextFocusCell) {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n                    nextFocusCell.classList.add('e-cell-select');\n                }\n            }\n        }\n        if (e.callBack) {\n            var sContainer = this.parent.nodeSelection.getRange(this.parent.currentDocument).startContainer;\n            if (sContainer.nodeName !== 'TD') {\n                var startChildLength = this.parent.nodeSelection.getRange(this.parent.currentDocument).startOffset;\n                var focusNode = sContainer.children[startChildLength];\n                if (focusNode) {\n                    this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, focusNode, 0);\n                }\n            }\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.deleteRow = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (selectedCell.nodeType === 3) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var colIndex = Array.prototype.indexOf.call(selectedCell.parentNode.childNodes, selectedCell);\n        this.curTable = closest(selectedCell, 'table');\n        var currentRow;\n        var allCells = this.getCorrespondingColumns();\n        var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n        var maxI;\n        var j;\n        if (this.curTable.rows.length === 1) {\n            e.item.selection.restore();\n            detach(closest(selectedCell.parentElement, 'table'));\n        }\n        else {\n            for (maxI = minMaxIndex.endRow; maxI >= minMaxIndex.startRow; maxI--) {\n                currentRow = this.curTable.rows[maxI];\n                for (j = 0; j < allCells[maxI].length; j++) {\n                    if (j === 0 || allCells[maxI][j] !== allCells[maxI][j - 1]) {\n                        if (1 < parseInt(allCells[maxI][j].getAttribute('rowspan'), 10)) {\n                            var rowSpanVal = parseInt(allCells[maxI][j].getAttribute('rowspan'), 10) - 1;\n                            //eslint-disable-next-line\n                            1 === rowSpanVal ? allCells[maxI][j].removeAttribute('rowspan') : allCells[maxI][j].setAttribute('rowspan', rowSpanVal.toString());\n                        }\n                    }\n                    if (maxI < allCells.length - 1 && allCells[maxI][j] === allCells[maxI + 1][j] && (0 === maxI ||\n                        allCells[maxI][j] !== allCells[maxI - 1][j])) {\n                        var element = allCells[maxI][j];\n                        var index = void 0;\n                        for (index = j; 0 < index && allCells[maxI][index] === allCells[maxI][index - 1]; index--) {\n                            if (index === 0) {\n                                this.curTable.rows[maxI + 1].prepend(element);\n                            }\n                            else {\n                                allCells[maxI + 1][index - 1].insertAdjacentElement('afterend', element);\n                            }\n                        }\n                    }\n                }\n                var deleteIndex = currentRow.rowIndex;\n                this.curTable.deleteRow(deleteIndex);\n                var focusTrEle = !isNOU(this.curTable.rows[deleteIndex]) ? this.curTable.querySelectorAll('tbody tr')[deleteIndex]\n                    : this.curTable.querySelectorAll('tbody tr')[deleteIndex - 1];\n                var nextFocusCell = focusTrEle && focusTrEle.querySelectorAll('td')[colIndex];\n                if (nextFocusCell) {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n                    nextFocusCell.classList.add('e-cell-select');\n                }\n                else {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                    this.curTable.querySelector('td, th').classList.add('e-cell-select');\n                }\n            }\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.removeTable = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        selectedCell = (selectedCell.nodeType === 3) ? selectedCell.parentNode : selectedCell;\n        var selectedTable = closest(selectedCell.parentElement, 'table');\n        if (selectedTable) {\n            e.item.selection.restore();\n            detach(selectedTable);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.tableHeader = function (e) {\n        var headerExit = false;\n        var selectedCell = e.item.selection.range.startContainer;\n        selectedCell = (selectedCell.nodeType === 3) ? selectedCell.parentNode : selectedCell;\n        var table = closest(selectedCell.parentElement, 'table');\n        [].slice.call(table.childNodes).forEach(function (el) {\n            if (el.nodeName === 'THEAD') {\n                headerExit = true;\n            }\n        });\n        if (table && !headerExit) {\n            var cellCount = table.querySelector('tr').childElementCount;\n            var colSpanCount = 0;\n            for (var i = 0; i < cellCount; i++) {\n                colSpanCount = colSpanCount + (parseInt(table.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n            }\n            var header = table.createTHead();\n            var row = header.insertRow(0);\n            for (var j = 0; j < colSpanCount; j++) {\n                var th = createElement('th');\n                th.appendChild(createElement('br'));\n                row.appendChild(th);\n            }\n        }\n        else {\n            table.deleteTHead();\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.tableVerticalAlign = function (e) {\n        if (e.item.subCommand === 'AlignTop') {\n            e.item.tableCell.style.verticalAlign = 'top';\n        }\n        else if (e.item.subCommand === 'AlignMiddle') {\n            e.item.tableCell.style.verticalAlign = 'middle';\n        }\n        else {\n            e.item.tableCell.style.verticalAlign = 'bottom';\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.cellMerge = function (e) {\n        if (isNOU(this.curTable)) {\n            this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n        }\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        if (selectedCells.length < 2) {\n            return;\n        }\n        this.mergeCellContent();\n        var minMaxIndexes = this.getSelectedMinMaxIndexes(this.getCorrespondingColumns());\n        var firstCell = selectedCells[0];\n        var rowSelectedCells = firstCell.parentElement.querySelectorAll('.e-cell-select');\n        if (minMaxIndexes.startColumn < minMaxIndexes.endColumn) {\n            firstCell.setAttribute('colspan', (minMaxIndexes.endColumn - minMaxIndexes.startColumn + 1).toString());\n        }\n        if (minMaxIndexes.startRow < minMaxIndexes.endRow) {\n            firstCell.setAttribute('rowspan', (minMaxIndexes.endRow - minMaxIndexes.startRow + 1).toString());\n        }\n        var totalWidth = 0;\n        for (var j = rowSelectedCells.length - 1; j >= 0; j--) {\n            totalWidth = totalWidth + parseFloat(rowSelectedCells[j].style.width);\n        }\n        firstCell.style.width = totalWidth + '%';\n        for (var i = 1; i <= selectedCells.length - 1; i++) {\n            detach(selectedCells[i]);\n        }\n        for (var i = 0; i < this.curTable.rows.length; i++) {\n            if (this.curTable.rows[i].innerHTML === '') {\n                detach(this.curTable.rows[i]);\n            }\n        }\n        this.updateRowSpanStyle(minMaxIndexes.startRow, minMaxIndexes.endRow, this.getCorrespondingColumns());\n        this.updateColSpanStyle(minMaxIndexes.startColumn, minMaxIndexes.endColumn, this.getCorrespondingColumns());\n        e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n        if (this.parent.nodeSelection.range) {\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, \n            // eslint-disable-next-line\n            this.parent.nodeSelection.range.endContainer, 0);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.updateColSpanStyle = function (min, max, elements) {\n        var colValue;\n        var colIndex;\n        var colMin;\n        var index = 0;\n        var attrValue;\n        var count = 0;\n        var eleArray = elements;\n        //eslint-disable-next-line\n        if (min < (max = Math.min(max, eleArray[0].length - 1))) {\n            for (colIndex === min; colIndex <= max; colIndex++) {\n                // eslint-disable-next-line\n                if (!(min < colIndex && eleArray[0][colIndex] === eleArray[0][colIndex - 1]) && 1 < (index =\n                    Math.min(parseInt(eleArray[0][colIndex].getAttribute('colspan'), 10) || 1, max - min + 1)) &&\n                    eleArray[0][colIndex] === eleArray[0][colIndex + 1]) {\n                    for (count = index - 1, colValue = 1; colValue < eleArray.length; colValue++) {\n                        if (eleArray[colValue][colIndex] !== eleArray[colValue - 1][colIndex]) {\n                            /* eslint-disable */\n                            for (colMin = colIndex; colMin < colIndex + index; colMin++) {\n                                if (1 < (attrValue = parseInt(eleArray[colValue][colMin].getAttribute('colspan'), 10) || 1) &&\n                                    eleArray[colValue][colMin] === eleArray[colValue][colMin + 1]) {\n                                    colMin += count = Math.min(count, attrValue - 1);\n                                }\n                                else if (!(count = Math.max(0, count - 1))) {\n                                    break;\n                                }\n                                /* eslint-enable */\n                            }\n                        }\n                        if (!count) {\n                            break;\n                        }\n                    }\n                }\n            }\n            if (count) {\n                this.updateCellAttribute(eleArray, count, 'colspan', 0, eleArray.length - 1, min, max);\n            }\n        }\n    };\n    TableCommand.prototype.updateRowSpanStyle = function (min, max, ele) {\n        var rowValue;\n        var colIndex;\n        var rowMin;\n        var index = 0;\n        var attrValue;\n        var count = 0;\n        var eleArray = ele;\n        // eslint-disable-next-line\n        if (min < (max = Math.min(max, eleArray.length - 1))) {\n            for (rowValue = min; rowValue <= max; rowValue++) {\n                // eslint-disable-next-line\n                if (!(min < rowValue && eleArray[rowValue][0] === eleArray[rowValue - 1][0]) && 1 < (index = Math.min(parseInt(eleArray[rowValue][0].getAttribute('rowspan'), 10) || 1, max - min + 1)) && eleArray[rowValue][0] === eleArray[rowValue + 1][0]) {\n                    for (count = index - 1, colIndex = 1; colIndex < eleArray[0].length; colIndex++) {\n                        if (eleArray[rowValue][colIndex] !== eleArray[rowValue][colIndex - 1]) {\n                            for (rowMin = rowValue; rowMin < rowValue + index; rowMin++) {\n                                // eslint-disable-next-line\n                                if (1 < (attrValue = parseInt(eleArray[rowMin][colIndex].getAttribute('rowspan'), 10) || 1) && eleArray[rowMin][colIndex] === eleArray[rowMin + 1][colIndex]) {\n                                    rowMin += count = Math.min(count, attrValue - 1);\n                                }\n                                // eslint-disable-next-line\n                                else if (!(count = Math.max(0, count - 1))) {\n                                    break;\n                                }\n                            }\n                            if (!count) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            if (count) {\n                this.updateCellAttribute(eleArray, count, 'rowspan', min, max, 0, eleArray[0].length - 1);\n            }\n        }\n    };\n    TableCommand.prototype.updateCellAttribute = function (elements, index, attr, min, max, firstIndex, length) {\n        var rowIndex;\n        var colIndex;\n        var spanCount;\n        for (rowIndex = min; rowIndex <= max; rowIndex++) {\n            for (colIndex = firstIndex; colIndex <= length; colIndex++) {\n                // eslint-disable-next-line\n                min < rowIndex && elements[rowIndex][colIndex] === elements[rowIndex - 1][colIndex] ||\n                    firstIndex < colIndex && elements[rowIndex][colIndex] === elements[rowIndex][colIndex - 1] ||\n                    1 < (spanCount = parseInt(elements[rowIndex][colIndex].getAttribute(attr), 10) || 1) &&\n                        (1 < spanCount - index ? elements[rowIndex][colIndex].setAttribute(attr, (spanCount - index).toString()) :\n                            elements[rowIndex][colIndex].removeAttribute(attr));\n            }\n        }\n    };\n    TableCommand.prototype.mergeCellContent = function () {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        var innerHtml = selectedCells[0].innerHTML;\n        for (var i = 1; i < selectedCells.length - 1; i++) {\n            if ('<br>' !== selectedCells[i].innerHTML) {\n                innerHtml = innerHtml + selectedCells[i].innerHTML;\n            }\n        }\n        selectedCells[0].innerHTML = innerHtml;\n    };\n    TableCommand.prototype.getSelectedMinMaxIndexes = function (correspondingCells) {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        if (0 < selectedCells.length) {\n            var minRow = correspondingCells.length;\n            var maxRow = 0;\n            var minCol = correspondingCells[0].length;\n            var maxCol = 0;\n            for (var i = 0; i < selectedCells.length; i++) {\n                var currentRowCol = this.getCorrespondingIndex(selectedCells[i], correspondingCells);\n                var targetRowCol = this.FindIndex(currentRowCol[0], currentRowCol[1], correspondingCells);\n                minRow = Math.min(currentRowCol[0], minRow);\n                maxRow = Math.max(targetRowCol[0], maxRow);\n                minCol = Math.min(currentRowCol[1], minCol);\n                maxCol = Math.max(targetRowCol[1], maxCol);\n            }\n            return {\n                startRow: minRow,\n                endRow: maxRow,\n                startColumn: minCol,\n                endColumn: maxCol\n            };\n        }\n        return null;\n    };\n    TableCommand.prototype.HorizontalSplit = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        this.curTable = closest(selectedCell.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            return;\n        }\n        this.activeCell = this.curTable.querySelector('.e-cell-select');\n        var newCell = this.activeCell.cloneNode(true);\n        newCell.removeAttribute('class');\n        newCell.innerHTML = '</br>';\n        var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n        var correspondingCells = this.getCorrespondingColumns();\n        var activeCellRowSpan = this.activeCell.getAttribute('rowspan') ? parseInt(this.activeCell.getAttribute('rowspan'), 10) : 1;\n        if (activeCellRowSpan > 1) {\n            var avgCount = Math.ceil(activeCellRowSpan / 2);\n            // eslint-disable-next-line\n            1 < avgCount ? this.activeCell.setAttribute('rowspan', avgCount.toString()) :\n                this.activeCell.removeAttribute('rowspan');\n            // eslint-disable-next-line\n            1 < (activeCellRowSpan - avgCount) ? newCell.setAttribute('rowspan', (activeCellRowSpan - avgCount).toString()) : newCell.removeAttribute('rowspan');\n            var avgRowIndex = void 0;\n            var colIndex = void 0;\n            for (avgRowIndex = activeCellIndex[0] + Math.ceil(activeCellRowSpan / 2),\n                colIndex = 0 === activeCellIndex[1] ? activeCellIndex[1]\n                    : activeCellIndex[1] - 1; 0 <= colIndex && (correspondingCells[avgRowIndex][colIndex] ===\n                correspondingCells[avgRowIndex][colIndex - 1] || 0 < avgRowIndex && correspondingCells[avgRowIndex][colIndex]\n                === correspondingCells[avgRowIndex - 1][colIndex]);) {\n                colIndex--;\n            }\n            if (colIndex === -1) {\n                // eslint-disable-next-line\n                this.curTable.rows[avgRowIndex].firstChild ? this.curTable.rows[avgRowIndex].prepend(newCell) : this.curTable.appendChild(newCell);\n            }\n            else {\n                correspondingCells[avgRowIndex][colIndex].insertAdjacentElement('afterend', newCell);\n            }\n        }\n        else {\n            var newTrEle = createElement('tr');\n            newTrEle.appendChild(newCell);\n            var selectedRow = correspondingCells[activeCellIndex[0]];\n            for (var j = 0; j <= selectedRow.length - 1; j++) {\n                if (selectedRow[j] !== selectedRow[j - 1] && selectedRow[j] !== this.activeCell) {\n                    selectedRow[j].setAttribute('rowspan', ((parseInt(selectedRow[j].getAttribute('rowspan'), 10) ?\n                        parseInt(selectedRow[j].getAttribute('rowspan'), 10) : 1) + 1).toString());\n                }\n            }\n            this.activeCell.parentNode.insertAdjacentElement('afterend', newTrEle);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.VerticalSplit = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        this.curTable = closest(selectedCell.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            return;\n        }\n        this.activeCell = this.curTable.querySelector('.e-cell-select');\n        var allRows = this.curTable.rows;\n        var newCell = this.activeCell.cloneNode(true);\n        newCell.removeAttribute('class');\n        newCell.innerHTML = '</br>';\n        var avgWidth = parseFloat(this.activeCell.style.width) / 2;\n        if (this.activeCell.tagName === 'TH' && isNaN(avgWidth)) {\n            var cellCount = this.curTable.querySelector('tr').childElementCount;\n            var colSpanCount = 0;\n            for (var i = 0; i < cellCount; i++) {\n                colSpanCount = colSpanCount + (parseInt(this.curTable.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n            }\n            avgWidth = parseFloat((((this.activeCell.offsetWidth / 2) / this.curTable.offsetWidth) * 100).toFixed(1));\n        }\n        var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n        var correspondingColumns = this.getCorrespondingColumns();\n        var activeCellcolSpan = parseInt(this.activeCell.getAttribute('colspan'), 10);\n        if (activeCellcolSpan > 1) {\n            // eslint-disable-next-line\n            1 < Math.ceil(activeCellcolSpan / 2) ? this.activeCell.setAttribute('colspan', (activeCellcolSpan / 2).toString())\n                : this.activeCell.removeAttribute('colspan');\n            // eslint-disable-next-line\n            1 < (activeCellcolSpan - activeCellcolSpan / 2) ? newCell.setAttribute('colspan', \n            // eslint-disable-next-line\n            (activeCellcolSpan - activeCellcolSpan / 2).toString()) : newCell.removeAttribute('colspan');\n        }\n        else {\n            for (var i = 0; i <= allRows.length - 1; i++) {\n                if (0 === i || correspondingColumns[i][activeCellIndex[1]] !== correspondingColumns[i - 1][activeCellIndex[1]]) {\n                    var currentCell = correspondingColumns[i][activeCellIndex[1]];\n                    if (currentCell !== this.activeCell) {\n                        currentCell.setAttribute('colspan', ((parseInt(currentCell.getAttribute('colspan'), 10) ?\n                            parseInt(currentCell.getAttribute('colspan'), 10) : 1) + 1).toString());\n                    }\n                }\n            }\n        }\n        this.activeCell.style.width = avgWidth + '%';\n        newCell.style.width = avgWidth + '%';\n        this.activeCell.parentNode.insertBefore(newCell, this.activeCell.nextSibling);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.getCorrespondingColumns = function () {\n        var elementArray = [];\n        // eslint-disable-next-line\n        var _this = this;\n        var colspan = 0;\n        var allRows = _this.curTable.rows;\n        for (var i = 0; i <= allRows.length - 1; i++) {\n            var ele = allRows[i];\n            var index = 0;\n            for (var j = 0; j <= ele.children.length - 1; j++) {\n                /* eslint-disable */\n                var colEle = ele.children[j];\n                for (var ele_1 = colEle, colspan_1 = parseInt(ele_1.getAttribute('colspan'), 10) || 1, rowSpan = parseInt(ele_1.getAttribute('rowspan'), 10) || 1, rowIndex = i; rowIndex < i + rowSpan; rowIndex++) {\n                    for (var colIndex = index; colIndex < index + colspan_1; colIndex++) {\n                        elementArray[rowIndex] || (elementArray[rowIndex] = []);\n                        elementArray[rowIndex][colIndex] ? index++ : elementArray[rowIndex][colIndex] = colEle;\n                    }\n                }\n                index += colspan;\n            }\n            /* eslint-enable */\n        }\n        return elementArray;\n    };\n    // eslint-disable-next-line\n    TableCommand.prototype.FindIndex = function (rowIndex, columnIndex, cells) {\n        var nextIndex;\n        var nextCol;\n        for (nextIndex = rowIndex + 1, nextCol = columnIndex + 1; nextIndex < cells.length;) {\n            if (cells[nextIndex][columnIndex] !== cells[rowIndex][columnIndex]) {\n                nextIndex--;\n                break;\n            }\n            nextIndex++;\n        }\n        for (nextIndex === cells.length && nextIndex--; nextCol < cells[rowIndex].length;) {\n            if (cells[rowIndex][nextCol] !== cells[rowIndex][columnIndex]) {\n                nextCol--;\n                break;\n            }\n            nextCol++;\n        }\n        return nextCol === cells[rowIndex].length && nextCol--,\n            [\n                nextIndex,\n                nextCol\n            ];\n    };\n    TableCommand.prototype.getCorrespondingIndex = function (cell, allCells) {\n        //let value: RowCol = new RowCol();\n        for (var i = 0; i < allCells.length; i++) {\n            for (var j = 0; j < allCells[i].length; j++) {\n                if (allCells[i][j] === cell) {\n                    return [i, j];\n                }\n            }\n        }\n        return [];\n    };\n    TableCommand.prototype.highlightCells = function (minRow, maxRow, minCol, maxCol, eleArray) {\n        var j;\n        var k;\n        var startCell;\n        var endCell;\n        var minRowIndex = minRow;\n        var maxRowIndex = maxRow;\n        var minColIndex = minCol;\n        var maxColIndex = maxCol;\n        var minMaxValues = new MinMax();\n        for (j = minRowIndex; j <= maxRowIndex; j++) {\n            /* eslint-disable */\n            if ((1 < (parseInt(eleArray[j][minColIndex].getAttribute('rowspan'), 10) || 1) ||\n                1 < (parseInt(eleArray[j][minColIndex].getAttribute('colspan'), 10) || 1)) &&\n                (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][minColIndex], eleArray))[0], startCell[1], eleArray))) {\n                minRowIndex = Math.min(startCell[0], minRowIndex);\n                maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                minColIndex = Math.min(startCell[1], minColIndex);\n                maxColIndex = Math.max(endCell[1], maxColIndex);\n            }\n            else if ((1 < (parseInt(eleArray[j][maxColIndex].getAttribute('rowspan'), 10) || 1) ||\n                1 < (parseInt(eleArray[j][maxColIndex].getAttribute('colspan'), 10) || 1)) &&\n                (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][maxColIndex], eleArray))[0], startCell[1], eleArray))) {\n                minRowIndex = Math.min(startCell[0], minRowIndex);\n                maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                minColIndex = Math.min(startCell[1], minColIndex);\n                maxColIndex = Math.max(endCell[1], maxColIndex);\n            }\n            for (k = minColIndex; k <= maxColIndex; k++) {\n                if ((1 < (parseInt(eleArray[minRowIndex][k].getAttribute('rowspan'), 10) || 1) ||\n                    1 < (parseInt(eleArray[minRowIndex][k].getAttribute('colspan'), 10) || 1)) &&\n                    (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[minRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n                    minRowIndex = Math.min(startCell[0], minRowIndex);\n                    maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                    minColIndex = Math.min(startCell[1], minColIndex);\n                    maxColIndex = Math.max(endCell[1], maxColIndex);\n                }\n                else if ((1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('rowspan'), 10) || 1) ||\n                    1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('colspan'), 10) || 1)) &&\n                    (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[maxRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n                    minRowIndex = Math.min(startCell[0], minRowIndex);\n                    maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                    minColIndex = Math.min(startCell[1], minColIndex);\n                    maxColIndex = Math.max(endCell[1], maxColIndex);\n                }\n            }\n            minMaxValues = minRowIndex === minRow && maxRowIndex === maxRow && minColIndex === minCol && maxColIndex === maxCol ? {\n                startRow: minRow,\n                endRow: maxRow,\n                startColumn: minCol,\n                endColumn: maxCol\n            } : this.highlightCells(minRowIndex, maxRowIndex, minColIndex, maxColIndex, eleArray);\n        }\n        return minMaxValues;\n        /* eslint-enable */\n    };\n    TableCommand.prototype.tableMove = function (e) {\n        this.activeCell = e.selectNode[0];\n        var target = e.event.target;\n        var activeCellTag = this.activeCell.tagName;\n        var targetCellTag = target.tagName;\n        this.curTable = closest(target, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            this.parent.nodeSelection.Clear(this.parent.currentDocument);\n        }\n        if ((target.tagName !== 'TD' && target.tagName !== 'TH') && activeCellTag !== targetCellTag) {\n            return;\n        }\n        var activeRowIndex = Array.prototype.slice.call((this.activeCell).parentElement.parentElement.children)\n            .indexOf((this.activeCell).parentElement);\n        var activeColumnIndex = Array.prototype.slice.call((this.activeCell).parentElement.children).indexOf(this.activeCell);\n        var targetRowIndex = Array.prototype.slice.call(target.parentElement.parentElement.children)\n            .indexOf(target.parentElement);\n        var targetColumnIndex = Array.prototype.slice.call(target.parentElement.children).indexOf(target);\n        var activeCellList = this.curTable.querySelectorAll('.e-cell-select');\n        for (var i = activeCellList.length - 1; i >= 0; i--) {\n            if (this.activeCell !== activeCellList[i]) {\n                activeCellList[i].classList.remove('e-cell-select');\n            }\n        }\n        if (activeRowIndex === targetRowIndex && activeColumnIndex === targetColumnIndex) {\n            return;\n        }\n        var correspondingCells = this.getCorrespondingColumns();\n        var activeIndexes = this.getCorrespondingIndex(this.activeCell, correspondingCells);\n        var targetIndexes = this.getCorrespondingIndex(target, correspondingCells);\n        var minMaxIndexes = this.highlightCells(Math.min(activeIndexes[0], targetIndexes[0]), Math.max(activeIndexes[0], \n        /* eslint-disable */\n        targetIndexes[0]), Math.min(activeIndexes[1], targetIndexes[1]), Math.max(activeIndexes[1], targetIndexes[1]), correspondingCells);\n        for (var rowIndex = minMaxIndexes.startRow; rowIndex <= minMaxIndexes.endRow; rowIndex++) {\n            for (var colIndex = minMaxIndexes.startColumn; colIndex <= minMaxIndexes.endColumn; colIndex++) {\n                correspondingCells[rowIndex][colIndex].classList.add('e-cell-select');\n            }\n        }\n        if (this.parent.nodeSelection.range) {\n            this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, this.parent.nodeSelection.range.endContainer, 0, 0);\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, 0);\n        }\n    };\n    ;\n    return TableCommand;\n}());\nexport { TableCommand };\nvar MinMax = /** @class */ (function () {\n    function MinMax() {\n    }\n    return MinMax;\n}());\n"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,OAAxB,EAAiCC,MAAjC,EAAyCC,OAAzC,EAAkDC,iBAAiB,IAAIC,KAAvE,QAAoF,sBAApF;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY;AAAG;AAAe,YAAY;EAC1C;AACJ;AACA;AACA;AACA;AACA;EAEI,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;IAC1B,KAAKA,MAAL,GAAcA,MAAd;IACA,KAAKC,gBAAL;EACH;;EACDF,YAAY,CAACG,SAAb,CAAuBD,gBAAvB,GAA0C,YAAY;IAClD,KAAKD,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACQ,KAAjC,EAAwC,KAAKC,WAA7C,EAA0D,IAA1D;IACA,KAAKN,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACU,UAAjC,EAA6C,KAAKC,SAAlD,EAA6D,IAA7D;IACA,KAAKR,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACY,aAAjC,EAAgD,KAAKC,YAArD,EAAmE,IAAnE;IACA,KAAKV,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACc,SAAjC,EAA4C,KAAKC,SAAjD,EAA4D,IAA5D;IACA,KAAKZ,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACgB,YAAjC,EAA+C,KAAKC,YAApD,EAAkE,IAAlE;IACA,KAAKd,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACkB,WAAjC,EAA8C,KAAKC,WAAnD,EAAgE,IAAhE;IACA,KAAKhB,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACoB,WAAjC,EAA8C,KAAKC,WAAnD,EAAgE,IAAhE;IACA,KAAKlB,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACsB,oBAAjC,EAAuD,KAAKC,kBAA5D,EAAgF,IAAhF;IACA,KAAKpB,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACwB,WAAjC,EAA8C,KAAKC,SAAnD,EAA8D,IAA9D;IACA,KAAKtB,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAAC0B,sBAAjC,EAAyD,KAAKC,eAA9D,EAA+E,IAA/E;IACA,KAAKxB,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAAC4B,oBAAjC,EAAuD,KAAKC,aAA5D,EAA2E,IAA3E;IACA,KAAK1B,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAAC8B,UAAjC,EAA6C,KAAKC,SAAlD,EAA6D,IAA7D;EACH,CAbD;;EAcA7B,YAAY,CAACG,SAAb,CAAuBI,WAAvB,GAAqC,UAAUuB,CAAV,EAAa;IAC9C,IAAIC,KAAK,GAAGvC,aAAa,CAAC,OAAD,EAAU;MAAEwC,SAAS,EAAE;IAAb,CAAV,CAAzB;IACA,IAAIC,OAAO,GAAGzC,aAAa,CAAC,OAAD,CAA3B;;IACA,IAAI,CAACK,KAAK,CAACiC,CAAC,CAACI,IAAF,CAAOC,KAAP,CAAaA,KAAd,CAAV,EAAgC;MAC5BJ,KAAK,CAACK,KAAN,CAAYD,KAAZ,GAAoB,KAAKE,mBAAL,CAAyBP,CAAC,CAACI,IAAF,CAAOC,KAAP,CAAaA,KAAtC,CAApB;IACH;;IACD,IAAI,CAACtC,KAAK,CAACiC,CAAC,CAACI,IAAF,CAAOC,KAAP,CAAaG,QAAd,CAAV,EAAmC;MAC/BP,KAAK,CAACK,KAAN,CAAYE,QAAZ,GAAuB,KAAKD,mBAAL,CAAyBP,CAAC,CAACI,IAAF,CAAOC,KAAP,CAAaG,QAAtC,CAAvB;IACH;;IACD,IAAI,CAACzC,KAAK,CAACiC,CAAC,CAACI,IAAF,CAAOC,KAAP,CAAaI,QAAd,CAAV,EAAmC;MAC/BR,KAAK,CAACK,KAAN,CAAYG,QAAZ,GAAuB,KAAKF,mBAAL,CAAyBP,CAAC,CAACI,IAAF,CAAOC,KAAP,CAAaI,QAAtC,CAAvB;IACH;;IACD,IAAIC,KAAK,GAAGC,QAAQ,CAACX,CAAC,CAACI,IAAF,CAAOC,KAAP,CAAaA,KAAd,EAAqB,EAArB,CAAR,GAAmC,GAAnC,GACR,MAAML,CAAC,CAACI,IAAF,CAAOQ,OADL,GACeD,QAAQ,CAACX,CAAC,CAACI,IAAF,CAAOC,KAAP,CAAaA,KAAd,EAAqB,EAArB,CAAR,GAAmCL,CAAC,CAACI,IAAF,CAAOQ,OADrE;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAAC,CAACI,IAAF,CAAOU,IAA3B,EAAiCD,CAAC,EAAlC,EAAsC;MAClC,IAAIE,GAAG,GAAGrD,aAAa,CAAC,IAAD,CAAvB;;MACA,KAAK,IAAIsD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,CAAC,CAACI,IAAF,CAAOQ,OAA3B,EAAoCI,CAAC,EAArC,EAAyC;QACrC,IAAIC,IAAI,GAAGvD,aAAa,CAAC,IAAD,CAAxB;QACAuD,IAAI,CAACC,WAAL,CAAiBxD,aAAa,CAAC,IAAD,CAA9B;QACAuD,IAAI,CAACX,KAAL,CAAWD,KAAX,GAAmBK,KAAK,GAAG,GAA3B;QACAK,GAAG,CAACG,WAAJ,CAAgBD,IAAhB;MACH;;MACDd,OAAO,CAACe,WAAR,CAAoBH,GAApB;IACH;;IACDd,KAAK,CAACiB,WAAN,CAAkBf,OAAlB;IACAH,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBC,OAAjB;IACAnD,UAAU,CAACoD,MAAX,CAAkB,KAAKlD,MAAL,CAAYmD,eAA9B,EAA+CrB,KAA/C,EAAsD,KAAK9B,MAAL,CAAYoD,eAAlE;IACA,KAAKC,eAAL;IACAxB,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBM,gBAAjB,CAAkC,KAAKtD,MAAL,CAAYmD,eAA9C,EAA+DrB,KAAK,CAACyB,aAAN,CAAoB,IAApB,CAA/D,EAA0FzB,KAAK,CAACyB,aAAN,CAAoB,IAApB,CAA1F,EAAqH,CAArH,EAAwH,CAAxH;;IACA,IAAIzB,KAAK,CAAC0B,kBAAN,KAA6B,IAAjC,EAAuC;MACnC,IAAIC,UAAU,GAAG,KAAK,CAAtB;;MACA,IAAI5B,CAAC,CAAC6B,WAAF,KAAkB,KAAtB,EAA6B;QACzBD,UAAU,GAAGlE,aAAa,CAAC,KAAD,CAA1B;QACAkE,UAAU,CAACV,WAAX,CAAuBxD,aAAa,CAAC,IAAD,CAApC;MACH,CAHD,MAIK,IAAIsC,CAAC,CAAC6B,WAAF,KAAkB,IAAtB,EAA4B;QAC7BD,UAAU,GAAGlE,aAAa,CAAC,IAAD,CAA1B;MACH,CAFI,MAGA;QACDkE,UAAU,GAAGlE,aAAa,CAAC,GAAD,CAA1B;QACAkE,UAAU,CAACV,WAAX,CAAuBxD,aAAa,CAAC,IAAD,CAApC;MACH;;MACD,KAAKoE,WAAL,CAAiBF,UAAjB,EAA6B3B,KAA7B;IACH;;IACDA,KAAK,CAACyB,aAAN,CAAoB,IAApB,EAA0BK,SAA1B,CAAoCC,GAApC,CAAwC,eAAxC;;IACA,IAAIhC,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAE,OADN;QAEPC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,CAACvC,KAAD;MALH,CAAX;IAOH;;IACD,OAAOA,KAAP;EACH,CAvDD;;EAwDA/B,YAAY,CAACG,SAAb,CAAuBkC,mBAAvB,GAA6C,UAAUkC,KAAV,EAAiB;IAC1D,IAAIC,UAAJ;;IACA,IAAI,OAAQD,KAAR,KAAmB,QAAvB,EAAiC;MAC7B,IAAIA,KAAK,CAACE,OAAN,CAAc,IAAd,KAAuBF,KAAK,CAACE,OAAN,CAAc,GAAd,CAAvB,IAA6CF,KAAK,CAACE,OAAN,CAAc,MAAd,CAAjD,EAAwE;QACpED,UAAU,GAAGD,KAAb;MACH,CAFD,MAGK;QACDC,UAAU,GAAGD,KAAK,GAAG,IAArB;MACH;IACJ,CAPD,MAQK;MACDC,UAAU,GAAGD,KAAK,GAAG,IAArB;IACH;;IACD,OAAOC,UAAP;EACH,CAdD;;EAeAxE,YAAY,CAACG,SAAb,CAAuBmD,eAAvB,GAAyC,YAAY;IACjD,IAAIoB,OAAO,GAAG,KAAKzE,MAAL,CAAYoD,eAAZ,CAA4BsB,gBAA5B,CAA6C,oBAA7C,CAAd;;IACA,KAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,OAAO,CAACE,MAA5B,EAAoCjC,CAAC,EAArC,EAAyC;MACrCjD,MAAM,CAACgF,OAAO,CAAC/B,CAAD,CAAR,CAAN;IACH;;IACD,IAAIkC,YAAY,GAAG,KAAK5E,MAAL,CAAYoD,eAAZ,CAA4BsB,gBAA5B,CAA6C,YAA7C,CAAnB;;IACA,KAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,YAAY,CAACD,MAAjC,EAAyCjC,CAAC,EAA1C,EAA8C;MAC1CjD,MAAM,CAACmF,YAAY,CAAClC,CAAD,CAAb,CAAN;;MACA,IAAIkC,YAAY,CAACD,MAAb,KAAwBjC,CAAC,GAAG,CAAhC,EAAmC;QAC/BkC,YAAY,GAAG,KAAK5E,MAAL,CAAYoD,eAAZ,CAA4BsB,gBAA5B,CAA6C,YAA7C,CAAf;QACAhC,CAAC,GAAG,CAAC,CAAL;MACH;IACJ;;IACD,IAAImC,OAAO,GAAG,KAAK7E,MAAL,CAAYoD,eAAZ,CAA4BsB,gBAA5B,CAA6C,UAA7C,CAAd;;IACA,KAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmC,OAAO,CAACF,MAA5B,EAAoCjC,CAAC,EAArC,EAAyC;MACrCjD,MAAM,CAACoF,OAAO,CAACnC,CAAD,CAAR,CAAN;IACH;EACJ,CAjBD;;EAkBA3C,YAAY,CAACG,SAAb,CAAuByD,WAAvB,GAAqC,UAAUmB,OAAV,EAAmBC,aAAnB,EAAkC;IACnEA,aAAa,CAACC,UAAd,CAAyBC,YAAzB,CAAsCH,OAAtC,EAA+CC,aAAa,CAACG,WAA7D;EACH,CAFD;;EAGAnF,YAAY,CAACG,SAAb,CAAuBiF,0BAAvB,GAAoD,UAAUtD,CAAV,EAAa;IAC7D,IAAIuD,aAAa,GAAG,KAAKC,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,CAApB;IACA,IAAIY,CAAC,GAAG,CAAR;IACA,IAAIC,IAAI,GAAG1D,CAAC,CAAC8C,MAAb;IACA,IAAIa,IAAI,GAAG,CAAX;IACA,IAAIC,IAAI,GAAG5D,CAAC,CAAC,CAAD,CAAD,CAAK8C,MAAhB;IACA,IAAIe,IAAI,GAAG,CAAX,CAN6D,CAO7D;;IACA,KAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgB4C,CAAC,GAAGF,aAAa,CAACT,MAAlC,EAA0CW,CAAC,EAA3C,EAA+C;MAC3C,IAAIK,iBAAiB,GAAG,KAAKC,qBAAL,CAA2BR,aAAa,CAACE,CAAD,CAAxC,EAA6CzD,CAA7C,CAAxB;MACA,IAAIgE,WAAW,GAAG,KAAKC,SAAL,CAAeH,iBAAiB,CAAC,CAAD,CAAhC,EAAqCA,iBAAiB,CAAC,CAAD,CAAtD,EAA2D9D,CAA3D,CAAlB,CAF2C,CAG3C;;MACA0D,IAAI,GAAGQ,IAAI,CAACC,GAAL,CAASL,iBAAiB,CAAC,CAAD,CAA1B,EAA+BJ,IAA/B,CAAP,EACIC,IAAI,GAAGO,IAAI,CAACE,GAAL,CAASJ,WAAW,CAAC,CAAD,CAApB,EAAyBL,IAAzB,CADX,EAEIC,IAAI,GAAGM,IAAI,CAACC,GAAL,CAASL,iBAAiB,CAAC,CAAD,CAA1B,EAA+BF,IAA/B,CAFX,EAGIC,IAAI,GAAGK,IAAI,CAACE,GAAL,CAASJ,WAAW,CAAC,CAAD,CAApB,EAAyBH,IAAzB,CAHX;IAIH;;IACD,OAAO;MACHQ,QAAQ,EAAEX,IADP;MAEHY,MAAM,EAAEX,IAFL;MAGHY,WAAW,EAAEX,IAHV;MAIHY,SAAS,EAAEX;IAJR,CAAP;EAMH,CAvBD;;EAwBA3F,YAAY,CAACG,SAAb,CAAuBM,SAAvB,GAAmC,UAAUqB,CAAV,EAAa;IAC5C,IAAIyE,OAAO,GAAGzE,CAAC,CAACI,IAAF,CAAOsE,UAAP,KAAsB,iBAAtB,GAA0C,KAA1C,GAAkD,IAAhE;IACA,IAAIC,YAAY,GAAG3E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA1C;;IACA,IAAI,EAAED,YAAY,CAACE,QAAb,KAA0B,IAA1B,IAAkCF,YAAY,CAACE,QAAb,KAA0B,IAA9D,CAAJ,EAAyE;MACrEF,YAAY,GAAGhH,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAtB;IACH;;IACD,IAAIH,YAAY,CAACE,QAAb,CAAsBE,WAAtB,OAAwC,IAAxC,IAAgD/E,CAAC,CAACI,IAAF,CAAOsE,UAAP,KAAsB,iBAA1E,EAA6F;MACzF;IACH;;IACD,KAAKlB,QAAL,GAAgB7F,OAAO,CAAC,KAAKQ,MAAL,CAAYmE,aAAZ,CAA0BD,KAA1B,CAAgCuC,cAAhC,CAA+CE,aAAhD,EAA+D,OAA/D,CAAvB;;IACA,IAAI,KAAKtB,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,EAAiDC,MAAjD,KAA4D,CAAhE,EAAmE;MAC/D,IAAIkC,OAAO,GAAG,KAAKxB,QAAL,CAAc1C,IAAd,CAAmB,KAAK0C,QAAL,CAAc1C,IAAd,CAAmBgC,MAAnB,GAA4B,CAA/C,CAAd;MACA,IAAImC,QAAQ,GAAGD,OAAO,CAACE,SAAR,CAAkB,IAAlB,CAAf;MACAD,QAAQ,CAACE,eAAT,CAAyB,SAAzB;MACA,KAAKrD,WAAL,CAAiBmD,QAAjB,EAA2BD,OAA3B;IACH,CALD,MAMK;MACD,IAAII,QAAQ,GAAG,KAAKC,uBAAL,EAAf;MACA,IAAIrB,WAAW,GAAG,KAAKV,0BAAL,CAAgC8B,QAAhC,CAAlB;MACA,IAAIE,MAAM,GAAGb,OAAO,GAAGT,WAAW,CAACM,MAAf,GAAwBN,WAAW,CAACK,QAAxD;MACA,IAAIkB,MAAM,GAAG7H,aAAa,CAAC,IAAD,CAA1B;MACA,IAAI8H,cAAc,GAAG,KAAKhC,QAAL,CAAcX,gBAAd,CAA+B,kBAA/B,EAAmDC,MAAnD,GAA4D,CAAjF;;MACA,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuE,QAAQ,CAACE,MAAD,CAAR,CAAiBxC,MAArC,EAA6CjC,CAAC,EAA9C,EAAkD;QAC9C,IAAI4D,OAAO,IAAIa,MAAM,GAAGF,QAAQ,CAACtC,MAAT,GAAkB,CAAtC,IAA2CsC,QAAQ,CAACE,MAAD,CAAR,CAAiBzE,CAAjB,MAAwBuE,QAAQ,CAACE,MAAM,GAAG,CAAV,CAAR,CAAqBzE,CAArB,CAAnE,IACA,CAAC4D,OAAD,IAAY,IAAIa,MAAhB,IAA0BF,QAAQ,CAACE,MAAD,CAAR,CAAiBzE,CAAjB,MAAwBuE,QAAQ,CAACE,MAAM,GAAG,CAAV,CAAR,CAAqBzE,CAArB,CADtD,EAC+E;UAC3E,IAAI,MAAMA,CAAN,IAAW,IAAIA,CAAJ,IAASuE,QAAQ,CAACE,MAAD,CAAR,CAAiBzE,CAAjB,MAAwBuE,QAAQ,CAACE,MAAD,CAAR,CAAiBzE,CAAC,GAAG,CAArB,CAAhD,EAAyE;YACrEuE,QAAQ,CAACE,MAAD,CAAR,CAAiBzE,CAAjB,EAAoB4E,YAApB,CAAiC,SAAjC,EAA4C,CAAC9E,QAAQ,CAACyE,QAAQ,CAACE,MAAD,CAAR,CAAiBzE,CAAjB,EAAoB6E,YAApB,CAAiC,SAAjC,CAAD,EAA8C,EAA9C,CAAR,GAA4D,CAA7D,EAAgEC,QAAhE,EAA5C;UACH;QACJ,CALD,MAMK;UACD,IAAIC,SAAS,GAAGlI,aAAa,CAAC,IAAD,CAA7B;UACAkI,SAAS,CAAC1E,WAAV,CAAsBxD,aAAa,CAAC,IAAD,CAAnC;UACA6H,MAAM,CAACrE,WAAP,CAAmB0E,SAAnB;UACAA,SAAS,CAACH,YAAV,CAAuB,OAAvB,EAAgCL,QAAQ,CAAEI,cAAc,IAAIf,OAAnB,GAA+Ba,MAAM,GAAG,CAAxC,GAA6CA,MAA9C,CAAR,CAA8DzE,CAA9D,EAAiE6E,YAAjE,CAA8E,OAA9E,CAAhC;QACH;MACJ,CAnBA,CAoBD;;;MACA,IAAIG,WAAW,GAAG,KAAK,CAAvB;;MACA,IAAIL,cAAc,IAAIf,OAAtB,EAA+B;QAC3BoB,WAAW,GAAG,KAAKrC,QAAL,CAAc9B,aAAd,CAA4B,OAA5B,EAAqCoE,UAArC,CAAgD,CAAhD,CAAd;MACH,CAFD,MAGK;QACDD,WAAW,GAAG,KAAKrC,QAAL,CAAc1C,IAAd,CAAmBwE,MAAnB,CAAd;MACH,CA3BA,CA4BD;;;MACCtF,CAAC,CAACI,IAAF,CAAOsE,UAAP,KAAsB,iBAAvB,GAA4CmB,WAAW,CAACf,aAAZ,CAA0B1B,YAA1B,CAAuCmC,MAAvC,EAA+CM,WAA/C,CAA5C,GACKL,cAAc,GAAGK,WAAW,CAACf,aAAZ,CAA0B1B,YAA1B,CAAuCmC,MAAvC,EAA+CM,WAA/C,CAAH,GACX,KAAK/D,WAAL,CAAiByD,MAAjB,EAAyBM,WAAzB,CAFR;IAGH;;IACD7F,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBM,gBAAjB,CAAkC,KAAKtD,MAAL,CAAYmD,eAA9C,EAA+DtB,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAAtF,EAAsG5E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA7H,EAA6I,CAA7I,EAAgJ,CAAhJ;;IACA,IAAI5E,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CA3DD;;EA4DApD,YAAY,CAACG,SAAb,CAAuBQ,YAAvB,GAAsC,UAAUmB,CAAV,EAAa;IAC/C,IAAI2E,YAAY,GAAG3E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA1C;;IACA,IAAI,EAAED,YAAY,CAACE,QAAb,KAA0B,IAA1B,IAAkCF,YAAY,CAACE,QAAb,KAA0B,IAA9D,CAAJ,EAAyE;MACrEF,YAAY,GAAGhH,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAtB;IACH;;IACD,IAAIkB,MAAM,GAAGrI,OAAO,CAACgH,YAAD,EAAe,IAAf,CAApB;IACA,IAAIsB,OAAJ;IACA,IAAIC,OAAO,GAAGvI,OAAO,CAAEqI,MAAF,EAAW,OAAX,CAAP,CAA2BlF,IAAzC;IACA,IAAIqF,QAAQ,GAAGC,KAAK,CAAC/H,SAAN,CAAgBgI,KAAhB,CAAsBC,IAAtB,CAA2BN,MAAM,CAACnD,gBAAP,CAAwB,0BAAxB,CAA3B,EAAgFF,OAAhF,CAAwFgC,YAAxF,CAAf;IACA,IAAI4B,aAAa,GAAG5F,QAAQ,CAACX,CAAC,CAACI,IAAF,CAAOC,KAAR,EAAe,EAAf,CAAR,GAA8B2F,MAAM,CAACnD,gBAAP,CAAwB,0BAAxB,EAAoDC,MAAtG;IACA,IAAI0D,YAAY,GAAG7F,QAAQ,CAACX,CAAC,CAACI,IAAF,CAAOC,KAAR,EAAe,EAAf,CAAR,IAA8B2F,MAAM,CAACnD,gBAAP,CAAwB,0BAAxB,EAAoDC,MAApD,GAA6D,CAA3F,CAAnB;IACA,IAAI2D,aAAa,GAAG9I,OAAO,CAACqI,MAAD,EAAS,OAAT,CAA3B;IACA,IAAIU,OAAO,GAAG/I,OAAO,CAACqI,MAAD,EAAS,OAAT,CAAP,CAAyBnD,gBAAzB,CAA0C,OAA1C,CAAd;;IACA,KAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6F,OAAO,CAAC5D,MAA5B,EAAoCjC,CAAC,EAArC,EAAyC;MACrC6F,OAAO,CAAC7F,CAAD,CAAP,CAAW8F,OAAX,CAAmBC,QAAnB,GAA+BF,OAAO,CAAC7F,CAAD,CAAP,CAAWgG,WAAX,GAAyBJ,aAAa,CAACI,WAAvC,GAAqD,GAAtD,GAA6D,GAA3F;IACH;;IACD,KAAK,IAAIhG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqF,OAAO,CAACpD,MAA5B,EAAoCjC,CAAC,EAArC,EAAyC;MACrCoF,OAAO,GAAGC,OAAO,CAACrF,CAAD,CAAP,CAAWgC,gBAAX,CAA4B,0BAA5B,EAAwDsD,QAAxD,CAAV;MACA,IAAIW,WAAW,GAAGb,OAAO,CAACf,SAAR,CAAkB,IAAlB,CAAlB;MACA4B,WAAW,CAACC,SAAZ,GAAwB,EAAxB;MACAD,WAAW,CAAC5F,WAAZ,CAAwBxD,aAAa,CAAC,IAAD,CAArC;MACAoJ,WAAW,CAAC3B,eAAZ,CAA4B,OAA5B;MACA2B,WAAW,CAAC3B,eAAZ,CAA4B,SAA5B;MACA2B,WAAW,CAAC3B,eAAZ,CAA4B,SAA5B,EAPqC,CAQrC;;MACCnF,CAAC,CAACI,IAAF,CAAOsE,UAAP,KAAsB,kBAAvB,GAA6CuB,OAAO,CAACnB,aAAR,CAAsB1B,YAAtB,CAAmC0D,WAAnC,EAAgDb,OAAhD,CAA7C,GACI,KAAKnE,WAAL,CAAiBgF,WAAjB,EAA8Bb,OAA9B,CADJ;MAEAa,WAAW,CAACxG,KAAZ,CAAkBD,KAAlB,GAA0BmG,YAAY,CAACQ,OAAb,CAAqB,CAArB,IAA0B,GAApD;MACA,OAAOF,WAAW,CAACH,OAAZ,CAAoBC,QAA3B;IACH;;IACD,KAAK,IAAI/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6F,OAAO,CAAC5D,MAA5B,EAAoCjC,CAAC,EAArC,EAAyC;MACrC6F,OAAO,CAAC7F,CAAD,CAAP,CAAWP,KAAX,CAAiBD,KAAjB,GAAyB,CAAC4G,MAAM,CAACP,OAAO,CAAC7F,CAAD,CAAP,CAAW8F,OAAX,CAAmBC,QAAnB,CAA4BM,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAD,CAAN,GAAoDV,YAApD,GAAmED,aAApE,EAAmFS,OAAnF,CAA2F,CAA3F,IAAgG,GAAzH;MACA,OAAON,OAAO,CAAC7F,CAAD,CAAP,CAAW8F,OAAX,CAAmBC,QAA1B;IACH;;IACD5G,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBM,gBAAjB,CAAkC,KAAKtD,MAAL,CAAYmD,eAA9C,EAA+DqD,YAA/D,EAA6EA,YAA7E,EAA2F,CAA3F,EAA8F,CAA9F;;IACA,IAAI3E,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CA5CD;;EA6CApD,YAAY,CAACG,SAAb,CAAuBY,YAAvB,GAAsC,UAAUe,CAAV,EAAa;IAC/C,IAAI2E,YAAY,GAAG3E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA1C;;IACA,IAAID,YAAY,CAACwC,QAAb,KAA0B,CAA9B,EAAiC;MAC7BxC,YAAY,GAAGhH,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAtB;IACH;;IACD,IAAIsC,YAAY,GAAGzJ,OAAO,CAACgH,YAAD,EAAeA,YAAY,CAAC0C,OAAb,KAAyB,IAAzB,GAAgC,OAAhC,GAA0C,OAAzD,CAA1B;IACA,IAAIC,QAAQ,GAAGF,YAAY,IAAIhB,KAAK,CAAC/H,SAAN,CAAgBsE,OAAhB,CAAwB2D,IAAxB,CAA6Bc,YAAY,CAACtB,UAA1C,EAAsDnB,YAAY,CAACxB,UAAnE,CAA/B;IACA,KAAKK,QAAL,GAAgB7F,OAAO,CAACgH,YAAD,EAAe,OAAf,CAAvB;IACA,IAAIqB,MAAM,GAAGrI,OAAO,CAACgH,YAAD,EAAe,IAAf,CAApB;;IACA,IAAIqB,MAAM,CAACnD,gBAAP,CAAwB,OAAxB,EAAiCC,MAAjC,KAA4C,CAAhD,EAAmD;MAC/C9C,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBC,OAAjB;MACAxD,MAAM,CAACD,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAR,CAAN;IACH,CAHD,MAIK;MACD,IAAIyC,WAAW,GAAG,KAAK,CAAvB;MACA,IAAInC,QAAQ,GAAG,KAAKC,uBAAL,EAAf,CAFC,CAGD;;MACA,IAAImC,mBAAmB,GAAG,KAAKlE,0BAAL,CAAgC8B,QAAhC,CAA1B;MACA,IAAIqC,MAAM,GAAGD,mBAAmB,CAACjD,WAAjC;MACA,IAAImD,MAAM,GAAGF,mBAAmB,CAAChD,SAAjC;;MACA,KAAK,IAAI3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuE,QAAQ,CAACtC,MAA7B,EAAqCjC,CAAC,EAAtC,EAA0C;QACtC,IAAI8G,UAAU,GAAGvC,QAAQ,CAACvE,CAAD,CAAzB;;QACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2G,UAAU,CAAC7E,MAA/B,EAAuC9B,CAAC,EAAxC,EAA4C;UACxC,IAAI4G,WAAW,GAAGD,UAAU,CAAC3G,CAAD,CAA5B,CADwC,CAExC;;UACA,IAAI6G,gBAAgB,GAAG,KAAK9D,qBAAL,CAA2B6D,WAA3B,EAAwCxC,QAAxC,CAAvB;UACA,IAAI0C,UAAU,GAAGnH,QAAQ,CAACiH,WAAW,CAAClC,YAAZ,CAAyB,SAAzB,CAAD,EAAsC,EAAtC,CAAR,IAAqD,CAAtE;;UACA,IAAImC,gBAAgB,CAAC,CAAD,CAAhB,IAAuBC,UAAU,GAAG,CAApC,KAA0CL,MAA1C,IAAoDI,gBAAgB,CAAC,CAAD,CAAhB,IAAuBH,MAA/E,EAAuF;YACnF,IAAII,UAAU,GAAG,CAAjB,EAAoB;cAChBF,WAAW,CAACnC,YAAZ,CAAyB,SAAzB,EAAoC,CAACqC,UAAU,GAAG,CAAd,EAAiBnC,QAAjB,EAApC;YACH,CAFD,MAGK;cACD/H,MAAM,CAACgK,WAAD,CAAN;cACAL,WAAW,GAAGvG,CAAd;;cACA,IAAInD,OAAO,CAACkK,IAAZ,EAAkB;gBACd/H,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBM,gBAAjB,CAAkC,KAAKtD,MAAL,CAAYmD,eAA9C,EAA+D,KAAKkC,QAAL,CAAc9B,aAAd,CAA4B,IAA5B,CAA/D,EAAkG,KAAK8B,QAAL,CAAc9B,aAAd,CAA4B,IAA5B,CAAlG,EAAqI,CAArI,EAAwI,CAAxI;gBACA,KAAK8B,QAAL,CAAc9B,aAAd,CAA4B,QAA5B,EAAsCK,SAAtC,CAAgDC,GAAhD,CAAoD,eAApD;cACH;YACJ;UACJ;QACJ;MACJ;;MACD,IAAIuF,WAAW,GAAG,CAAC,CAAnB,EAAsB;QAClB,IAAIS,UAAU,GAAGZ,YAAY,CAACa,QAAb,CAAsBX,QAAtB,CAAjB;QACA,IAAIY,aAAa,GAAGF,UAAU,IAC1BA,UAAU,CAACC,QAAX,CAAqBV,WAAW,IAAIS,UAAU,CAACC,QAAX,CAAoBnF,MAApB,GAA6B,CAA5C,GAAgDyE,WAAhD,GAA8DA,WAAW,GAAG,CAAjG,CADJ;;QAEA,IAAIW,aAAJ,EAAmB;UACflI,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBM,gBAAjB,CAAkC,KAAKtD,MAAL,CAAYmD,eAA9C,EAA+D4G,aAA/D,EAA8EA,aAA9E,EAA6F,CAA7F,EAAgG,CAAhG;UACAA,aAAa,CAACnG,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;QACH;MACJ;IACJ;;IACD,IAAIhC,CAAC,CAACiC,QAAN,EAAgB;MACZ,IAAIkG,UAAU,GAAG,KAAKhK,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,EAAgEsD,cAAjF;;MACA,IAAIuD,UAAU,CAACtD,QAAX,KAAwB,IAA5B,EAAkC;QAC9B,IAAIuD,gBAAgB,GAAG,KAAKjK,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,EAAgE+G,WAAvF;QACA,IAAIC,SAAS,GAAGH,UAAU,CAACF,QAAX,CAAoBG,gBAApB,CAAhB;;QACA,IAAIE,SAAJ,EAAe;UACX,KAAKnK,MAAL,CAAYmE,aAAZ,CAA0BiG,cAA1B,CAAyC,KAAKpK,MAAL,CAAYmD,eAArD,EAAsEgH,SAAtE,EAAiF,CAAjF;QACH;MACJ;;MACDtI,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CArED;;EAsEApD,YAAY,CAACG,SAAb,CAAuBU,SAAvB,GAAmC,UAAUiB,CAAV,EAAa;IAC5C,IAAI2E,YAAY,GAAG3E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA1C;;IACA,IAAID,YAAY,CAACwC,QAAb,KAA0B,CAA9B,EAAiC;MAC7BxC,YAAY,GAAGhH,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAtB;IACH;;IACD,IAAIqB,QAAQ,GAAGC,KAAK,CAAC/H,SAAN,CAAgBsE,OAAhB,CAAwB2D,IAAxB,CAA6B3B,YAAY,CAACxB,UAAb,CAAwB2C,UAArD,EAAiEnB,YAAjE,CAAf;IACA,KAAKnB,QAAL,GAAgB7F,OAAO,CAACgH,YAAD,EAAe,OAAf,CAAvB;IACA,IAAIgD,UAAJ;IACA,IAAIvC,QAAQ,GAAG,KAAKC,uBAAL,EAAf;IACA,IAAIrB,WAAW,GAAG,KAAKV,0BAAL,CAAgC8B,QAAhC,CAAlB;IACA,IAAIzB,IAAJ;IACA,IAAI3C,CAAJ;;IACA,IAAI,KAAKwC,QAAL,CAAc1C,IAAd,CAAmBgC,MAAnB,KAA8B,CAAlC,EAAqC;MACjC9C,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBC,OAAjB;MACAxD,MAAM,CAACD,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAR,CAAN;IACH,CAHD,MAIK;MACD,KAAKnB,IAAI,GAAGK,WAAW,CAACM,MAAxB,EAAgCX,IAAI,IAAIK,WAAW,CAACK,QAApD,EAA8DV,IAAI,EAAlE,EAAsE;QAClEgE,UAAU,GAAG,KAAKnE,QAAL,CAAc1C,IAAd,CAAmB6C,IAAnB,CAAb;;QACA,KAAK3C,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoE,QAAQ,CAACzB,IAAD,CAAR,CAAeb,MAA/B,EAAuC9B,CAAC,EAAxC,EAA4C;UACxC,IAAIA,CAAC,KAAK,CAAN,IAAWoE,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAf,MAAsBoE,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAC,GAAG,CAAnB,CAArC,EAA4D;YACxD,IAAI,IAAIL,QAAQ,CAACyE,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAf,EAAkB0E,YAAlB,CAA+B,SAA/B,CAAD,EAA4C,EAA5C,CAAhB,EAAiE;cAC7D,IAAI8C,UAAU,GAAG7H,QAAQ,CAACyE,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAf,EAAkB0E,YAAlB,CAA+B,SAA/B,CAAD,EAA4C,EAA5C,CAAR,GAA0D,CAA3E,CAD6D,CAE7D;;cACA,MAAM8C,UAAN,GAAmBpD,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAf,EAAkBmE,eAAlB,CAAkC,SAAlC,CAAnB,GAAkEC,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAf,EAAkByE,YAAlB,CAA+B,SAA/B,EAA0C+C,UAAU,CAAC7C,QAAX,EAA1C,CAAlE;YACH;UACJ;;UACD,IAAIhC,IAAI,GAAGyB,QAAQ,CAACtC,MAAT,GAAkB,CAAzB,IAA8BsC,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAf,MAAsBoE,QAAQ,CAACzB,IAAI,GAAG,CAAR,CAAR,CAAmB3C,CAAnB,CAApD,KAA8E,MAAM2C,IAAN,IAC9EyB,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAf,MAAsBoE,QAAQ,CAACzB,IAAI,GAAG,CAAR,CAAR,CAAmB3C,CAAnB,CADtB,CAAJ,EACkD;YAC9C,IAAIyH,OAAO,GAAGrD,QAAQ,CAACzB,IAAD,CAAR,CAAe3C,CAAf,CAAd;YACA,IAAI0H,KAAK,GAAG,KAAK,CAAjB;;YACA,KAAKA,KAAK,GAAG1H,CAAb,EAAgB,IAAI0H,KAAJ,IAAatD,QAAQ,CAACzB,IAAD,CAAR,CAAe+E,KAAf,MAA0BtD,QAAQ,CAACzB,IAAD,CAAR,CAAe+E,KAAK,GAAG,CAAvB,CAAvD,EAAkFA,KAAK,EAAvF,EAA2F;cACvF,IAAIA,KAAK,KAAK,CAAd,EAAiB;gBACb,KAAKlF,QAAL,CAAc1C,IAAd,CAAmB6C,IAAI,GAAG,CAA1B,EAA6BgF,OAA7B,CAAqCF,OAArC;cACH,CAFD,MAGK;gBACDrD,QAAQ,CAACzB,IAAI,GAAG,CAAR,CAAR,CAAmB+E,KAAK,GAAG,CAA3B,EAA8BE,qBAA9B,CAAoD,UAApD,EAAgEH,OAAhE;cACH;YACJ;UACJ;QACJ;;QACD,IAAIlB,WAAW,GAAGI,UAAU,CAACL,QAA7B;QACA,KAAK9D,QAAL,CAAczE,SAAd,CAAwBwI,WAAxB;QACA,IAAIsB,UAAU,GAAG,CAAC9K,KAAK,CAAC,KAAKyF,QAAL,CAAc1C,IAAd,CAAmByG,WAAnB,CAAD,CAAN,GAA0C,KAAK/D,QAAL,CAAcX,gBAAd,CAA+B,UAA/B,EAA2C0E,WAA3C,CAA1C,GACX,KAAK/D,QAAL,CAAcX,gBAAd,CAA+B,UAA/B,EAA2C0E,WAAW,GAAG,CAAzD,CADN;QAEA,IAAIW,aAAa,GAAGW,UAAU,IAAIA,UAAU,CAAChG,gBAAX,CAA4B,IAA5B,EAAkCsD,QAAlC,CAAlC;;QACA,IAAI+B,aAAJ,EAAmB;UACflI,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBM,gBAAjB,CAAkC,KAAKtD,MAAL,CAAYmD,eAA9C,EAA+D4G,aAA/D,EAA8EA,aAA9E,EAA6F,CAA7F,EAAgG,CAAhG;UACAA,aAAa,CAACnG,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;QACH,CAHD,MAIK;UACDhC,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBM,gBAAjB,CAAkC,KAAKtD,MAAL,CAAYmD,eAA9C,EAA+D,KAAKkC,QAAL,CAAc9B,aAAd,CAA4B,IAA5B,CAA/D,EAAkG,KAAK8B,QAAL,CAAc9B,aAAd,CAA4B,IAA5B,CAAlG,EAAqI,CAArI,EAAwI,CAAxI;UACA,KAAK8B,QAAL,CAAc9B,aAAd,CAA4B,QAA5B,EAAsCK,SAAtC,CAAgDC,GAAhD,CAAoD,eAApD;QACH;MACJ;IACJ;;IACD,IAAIhC,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CAjED;;EAkEApD,YAAY,CAACG,SAAb,CAAuBc,WAAvB,GAAqC,UAAUa,CAAV,EAAa;IAC9C,IAAI2E,YAAY,GAAG3E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA1C;IACAD,YAAY,GAAIA,YAAY,CAACwC,QAAb,KAA0B,CAA3B,GAAgCxC,YAAY,CAACxB,UAA7C,GAA0DwB,YAAzE;IACA,IAAImE,aAAa,GAAGnL,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAA3B;;IACA,IAAIgE,aAAJ,EAAmB;MACf9I,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBC,OAAjB;MACAxD,MAAM,CAACkL,aAAD,CAAN;IACH;;IACD,IAAI9I,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CAjBD;;EAkBApD,YAAY,CAACG,SAAb,CAAuBgB,WAAvB,GAAqC,UAAUW,CAAV,EAAa;IAC9C,IAAI+I,UAAU,GAAG,KAAjB;IACA,IAAIpE,YAAY,GAAG3E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA1C;IACAD,YAAY,GAAIA,YAAY,CAACwC,QAAb,KAA0B,CAA3B,GAAgCxC,YAAY,CAACxB,UAA7C,GAA0DwB,YAAzE;IACA,IAAI1E,KAAK,GAAGtC,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAnB;IACA,GAAGuB,KAAH,CAASC,IAAT,CAAcrG,KAAK,CAAC6F,UAApB,EAAgCkD,OAAhC,CAAwC,UAAUC,EAAV,EAAc;MAClD,IAAIA,EAAE,CAACpE,QAAH,KAAgB,OAApB,EAA6B;QACzBkE,UAAU,GAAG,IAAb;MACH;IACJ,CAJD;;IAKA,IAAI9I,KAAK,IAAI,CAAC8I,UAAd,EAA0B;MACtB,IAAIG,SAAS,GAAGjJ,KAAK,CAACyB,aAAN,CAAoB,IAApB,EAA0ByH,iBAA1C;MACA,IAAIC,YAAY,GAAG,CAAnB;;MACA,KAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqI,SAApB,EAA+BrI,CAAC,EAAhC,EAAoC;QAChCuI,YAAY,GAAGA,YAAY,IAAIzI,QAAQ,CAACV,KAAK,CAACyB,aAAN,CAAoB,IAApB,EAA0BuG,QAA1B,CAAmCpH,CAAnC,EAAsC6E,YAAtC,CAAmD,SAAnD,CAAD,EAAgE,EAAhE,CAAR,IAA+E,CAAnF,CAA3B;MACH;;MACD,IAAI2D,MAAM,GAAGpJ,KAAK,CAACqJ,WAAN,EAAb;MACA,IAAIvI,GAAG,GAAGsI,MAAM,CAAC1K,SAAP,CAAiB,CAAjB,CAAV;;MACA,KAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoI,YAApB,EAAkCpI,CAAC,EAAnC,EAAuC;QACnC,IAAIuI,EAAE,GAAG7L,aAAa,CAAC,IAAD,CAAtB;QACA6L,EAAE,CAACrI,WAAH,CAAexD,aAAa,CAAC,IAAD,CAA5B;QACAqD,GAAG,CAACG,WAAJ,CAAgBqI,EAAhB;MACH;IACJ,CAbD,MAcK;MACDtJ,KAAK,CAACuJ,WAAN;IACH;;IACD,IAAIxJ,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CApCD;;EAqCApD,YAAY,CAACG,SAAb,CAAuBkB,kBAAvB,GAA4C,UAAUS,CAAV,EAAa;IACrD,IAAIA,CAAC,CAACI,IAAF,CAAOsE,UAAP,KAAsB,UAA1B,EAAsC;MAClC1E,CAAC,CAACI,IAAF,CAAOqJ,SAAP,CAAiBnJ,KAAjB,CAAuBoJ,aAAvB,GAAuC,KAAvC;IACH,CAFD,MAGK,IAAI1J,CAAC,CAACI,IAAF,CAAOsE,UAAP,KAAsB,aAA1B,EAAyC;MAC1C1E,CAAC,CAACI,IAAF,CAAOqJ,SAAP,CAAiBnJ,KAAjB,CAAuBoJ,aAAvB,GAAuC,QAAvC;IACH,CAFI,MAGA;MACD1J,CAAC,CAACI,IAAF,CAAOqJ,SAAP,CAAiBnJ,KAAjB,CAAuBoJ,aAAvB,GAAuC,QAAvC;IACH;;IACD,IAAI1J,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CAnBD;;EAoBApD,YAAY,CAACG,SAAb,CAAuBoB,SAAvB,GAAmC,UAAUO,CAAV,EAAa;IAC5C,IAAIjC,KAAK,CAAC,KAAKyF,QAAN,CAAT,EAA0B;MACtB,KAAKA,QAAL,GAAgB7F,OAAO,CAAC,KAAKQ,MAAL,CAAYmE,aAAZ,CAA0BD,KAA1B,CAAgCuC,cAAhC,CAA+CE,aAAhD,EAA+D,OAA/D,CAAvB;IACH;;IACD,IAAIvB,aAAa,GAAG,KAAKC,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,CAApB;;IACA,IAAIU,aAAa,CAACT,MAAd,GAAuB,CAA3B,EAA8B;MAC1B;IACH;;IACD,KAAK6G,gBAAL;IACA,IAAIC,aAAa,GAAG,KAAKC,wBAAL,CAA8B,KAAKxE,uBAAL,EAA9B,CAApB;IACA,IAAIyE,SAAS,GAAGvG,aAAa,CAAC,CAAD,CAA7B;IACA,IAAIwG,gBAAgB,GAAGD,SAAS,CAAChF,aAAV,CAAwBjC,gBAAxB,CAAyC,gBAAzC,CAAvB;;IACA,IAAI+G,aAAa,CAACrF,WAAd,GAA4BqF,aAAa,CAACpF,SAA9C,EAAyD;MACrDsF,SAAS,CAACrE,YAAV,CAAuB,SAAvB,EAAkC,CAACmE,aAAa,CAACpF,SAAd,GAA0BoF,aAAa,CAACrF,WAAxC,GAAsD,CAAvD,EAA0DoB,QAA1D,EAAlC;IACH;;IACD,IAAIiE,aAAa,CAACvF,QAAd,GAAyBuF,aAAa,CAACtF,MAA3C,EAAmD;MAC/CwF,SAAS,CAACrE,YAAV,CAAuB,SAAvB,EAAkC,CAACmE,aAAa,CAACtF,MAAd,GAAuBsF,aAAa,CAACvF,QAArC,GAAgD,CAAjD,EAAoDsB,QAApD,EAAlC;IACH;;IACD,IAAIqE,UAAU,GAAG,CAAjB;;IACA,KAAK,IAAIhJ,CAAC,GAAG+I,gBAAgB,CAACjH,MAAjB,GAA0B,CAAvC,EAA0C9B,CAAC,IAAI,CAA/C,EAAkDA,CAAC,EAAnD,EAAuD;MACnDgJ,UAAU,GAAGA,UAAU,GAAGC,UAAU,CAACF,gBAAgB,CAAC/I,CAAD,CAAhB,CAAoBV,KAApB,CAA0BD,KAA3B,CAApC;IACH;;IACDyJ,SAAS,CAACxJ,KAAV,CAAgBD,KAAhB,GAAwB2J,UAAU,GAAG,GAArC;;IACA,KAAK,IAAInJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI0C,aAAa,CAACT,MAAd,GAAuB,CAA5C,EAA+CjC,CAAC,EAAhD,EAAoD;MAChDjD,MAAM,CAAC2F,aAAa,CAAC1C,CAAD,CAAd,CAAN;IACH;;IACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK2C,QAAL,CAAc1C,IAAd,CAAmBgC,MAAvC,EAA+CjC,CAAC,EAAhD,EAAoD;MAChD,IAAI,KAAK2C,QAAL,CAAc1C,IAAd,CAAmBD,CAAnB,EAAsBkG,SAAtB,KAAoC,EAAxC,EAA4C;QACxCnJ,MAAM,CAAC,KAAK4F,QAAL,CAAc1C,IAAd,CAAmBD,CAAnB,CAAD,CAAN;MACH;IACJ;;IACD,KAAKqJ,kBAAL,CAAwBN,aAAa,CAACvF,QAAtC,EAAgDuF,aAAa,CAACtF,MAA9D,EAAsE,KAAKe,uBAAL,EAAtE;IACA,KAAK8E,kBAAL,CAAwBP,aAAa,CAACrF,WAAtC,EAAmDqF,aAAa,CAACpF,SAAjE,EAA4E,KAAKa,uBAAL,EAA5E;IACArF,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBM,gBAAjB,CAAkC,KAAKtD,MAAL,CAAYmD,eAA9C,EAA+DtB,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAAtF,EAAsG5E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA7H,EAA6I,CAA7I,EAAgJ,CAAhJ;;IACA,IAAI,KAAKzG,MAAL,CAAYmE,aAAZ,CAA0BD,KAA9B,EAAqC;MACjC,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BiG,cAA1B,CAAyC,KAAKpK,MAAL,CAAYmD,eAArD,EACA;MACA,KAAKnD,MAAL,CAAYmE,aAAZ,CAA0BD,KAA1B,CAAgC+H,YAFhC,EAE8C,CAF9C;IAGH;;IACD,IAAIpK,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CAhDD;;EAiDApD,YAAY,CAACG,SAAb,CAAuB8L,kBAAvB,GAA4C,UAAUhG,GAAV,EAAeC,GAAf,EAAoB5B,QAApB,EAA8B;IACtE,IAAI6H,QAAJ;IACA,IAAIlE,QAAJ;IACA,IAAImE,MAAJ;IACA,IAAI5B,KAAK,GAAG,CAAZ;IACA,IAAI6B,SAAJ;IACA,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,QAAQ,GAAGjI,QAAf,CAPsE,CAQtE;;IACA,IAAI2B,GAAG,IAAIC,GAAG,GAAGF,IAAI,CAACC,GAAL,CAASC,GAAT,EAAcqG,QAAQ,CAAC,CAAD,CAAR,CAAY3H,MAAZ,GAAqB,CAAnC,CAAV,CAAP,EAAyD;MACrD,KAAKqD,QAAQ,KAAKhC,GAAlB,EAAuBgC,QAAQ,IAAI/B,GAAnC,EAAwC+B,QAAQ,EAAhD,EAAoD;QAChD;QACA,IAAI,EAAEhC,GAAG,GAAGgC,QAAN,IAAkBsE,QAAQ,CAAC,CAAD,CAAR,CAAYtE,QAAZ,MAA0BsE,QAAQ,CAAC,CAAD,CAAR,CAAYtE,QAAQ,GAAG,CAAvB,CAA9C,KAA4E,KAAKuC,KAAK,GACtFxE,IAAI,CAACC,GAAL,CAASxD,QAAQ,CAAC8J,QAAQ,CAAC,CAAD,CAAR,CAAYtE,QAAZ,EAAsBT,YAAtB,CAAmC,SAAnC,CAAD,EAAgD,EAAhD,CAAR,IAA+D,CAAxE,EAA2EtB,GAAG,GAAGD,GAAN,GAAY,CAAvF,CAD4E,CAA5E,IAEAsG,QAAQ,CAAC,CAAD,CAAR,CAAYtE,QAAZ,MAA0BsE,QAAQ,CAAC,CAAD,CAAR,CAAYtE,QAAQ,GAAG,CAAvB,CAF9B,EAEyD;UACrD,KAAKqE,KAAK,GAAG9B,KAAK,GAAG,CAAhB,EAAmB2B,QAAQ,GAAG,CAAnC,EAAsCA,QAAQ,GAAGI,QAAQ,CAAC3H,MAA1D,EAAkEuH,QAAQ,EAA1E,EAA8E;YAC1E,IAAII,QAAQ,CAACJ,QAAD,CAAR,CAAmBlE,QAAnB,MAAiCsE,QAAQ,CAACJ,QAAQ,GAAG,CAAZ,CAAR,CAAuBlE,QAAvB,CAArC,EAAuE;cACnE;cACA,KAAKmE,MAAM,GAAGnE,QAAd,EAAwBmE,MAAM,GAAGnE,QAAQ,GAAGuC,KAA5C,EAAmD4B,MAAM,EAAzD,EAA6D;gBACzD,IAAI,KAAKC,SAAS,GAAG5J,QAAQ,CAAC8J,QAAQ,CAACJ,QAAD,CAAR,CAAmBC,MAAnB,EAA2B5E,YAA3B,CAAwC,SAAxC,CAAD,EAAqD,EAArD,CAAR,IAAoE,CAArF,KACA+E,QAAQ,CAACJ,QAAD,CAAR,CAAmBC,MAAnB,MAA+BG,QAAQ,CAACJ,QAAD,CAAR,CAAmBC,MAAM,GAAG,CAA5B,CADnC,EACmE;kBAC/DA,MAAM,IAAIE,KAAK,GAAGtG,IAAI,CAACC,GAAL,CAASqG,KAAT,EAAgBD,SAAS,GAAG,CAA5B,CAAlB;gBACH,CAHD,MAIK,IAAI,EAAEC,KAAK,GAAGtG,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYoG,KAAK,GAAG,CAApB,CAAV,CAAJ,EAAuC;kBACxC;gBACH;gBACD;;cACH;YACJ;;YACD,IAAI,CAACA,KAAL,EAAY;cACR;YACH;UACJ;QACJ;MACJ;;MACD,IAAIA,KAAJ,EAAW;QACP,KAAKE,mBAAL,CAAyBD,QAAzB,EAAmCD,KAAnC,EAA0C,SAA1C,EAAqD,CAArD,EAAwDC,QAAQ,CAAC3H,MAAT,GAAkB,CAA1E,EAA6EqB,GAA7E,EAAkFC,GAAlF;MACH;IACJ;EACJ,CAvCD;;EAwCAlG,YAAY,CAACG,SAAb,CAAuB6L,kBAAvB,GAA4C,UAAU/F,GAAV,EAAeC,GAAf,EAAoBuG,GAApB,EAAyB;IACjE,IAAIC,QAAJ;IACA,IAAIzE,QAAJ;IACA,IAAI0E,MAAJ;IACA,IAAInC,KAAK,GAAG,CAAZ;IACA,IAAI6B,SAAJ;IACA,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,QAAQ,GAAGE,GAAf,CAPiE,CAQjE;;IACA,IAAIxG,GAAG,IAAIC,GAAG,GAAGF,IAAI,CAACC,GAAL,CAASC,GAAT,EAAcqG,QAAQ,CAAC3H,MAAT,GAAkB,CAAhC,CAAV,CAAP,EAAsD;MAClD,KAAK8H,QAAQ,GAAGzG,GAAhB,EAAqByG,QAAQ,IAAIxG,GAAjC,EAAsCwG,QAAQ,EAA9C,EAAkD;QAC9C;QACA,IAAI,EAAEzG,GAAG,GAAGyG,QAAN,IAAkBH,QAAQ,CAACG,QAAD,CAAR,CAAmB,CAAnB,MAA0BH,QAAQ,CAACG,QAAQ,GAAG,CAAZ,CAAR,CAAuB,CAAvB,CAA9C,KAA4E,KAAKlC,KAAK,GAAGxE,IAAI,CAACC,GAAL,CAASxD,QAAQ,CAAC8J,QAAQ,CAACG,QAAD,CAAR,CAAmB,CAAnB,EAAsBlF,YAAtB,CAAmC,SAAnC,CAAD,EAAgD,EAAhD,CAAR,IAA+D,CAAxE,EAA2EtB,GAAG,GAAGD,GAAN,GAAY,CAAvF,CAAb,CAA5E,IAAuLsG,QAAQ,CAACG,QAAD,CAAR,CAAmB,CAAnB,MAA0BH,QAAQ,CAACG,QAAQ,GAAG,CAAZ,CAAR,CAAuB,CAAvB,CAArN,EAAgP;UAC5O,KAAKJ,KAAK,GAAG9B,KAAK,GAAG,CAAhB,EAAmBvC,QAAQ,GAAG,CAAnC,EAAsCA,QAAQ,GAAGsE,QAAQ,CAAC,CAAD,CAAR,CAAY3H,MAA7D,EAAqEqD,QAAQ,EAA7E,EAAiF;YAC7E,IAAIsE,QAAQ,CAACG,QAAD,CAAR,CAAmBzE,QAAnB,MAAiCsE,QAAQ,CAACG,QAAD,CAAR,CAAmBzE,QAAQ,GAAG,CAA9B,CAArC,EAAuE;cACnE,KAAK0E,MAAM,GAAGD,QAAd,EAAwBC,MAAM,GAAGD,QAAQ,GAAGlC,KAA5C,EAAmDmC,MAAM,EAAzD,EAA6D;gBACzD;gBACA,IAAI,KAAKN,SAAS,GAAG5J,QAAQ,CAAC8J,QAAQ,CAACI,MAAD,CAAR,CAAiB1E,QAAjB,EAA2BT,YAA3B,CAAwC,SAAxC,CAAD,EAAqD,EAArD,CAAR,IAAoE,CAArF,KAA2F+E,QAAQ,CAACI,MAAD,CAAR,CAAiB1E,QAAjB,MAA+BsE,QAAQ,CAACI,MAAM,GAAG,CAAV,CAAR,CAAqB1E,QAArB,CAA9H,EAA8J;kBAC1J0E,MAAM,IAAIL,KAAK,GAAGtG,IAAI,CAACC,GAAL,CAASqG,KAAT,EAAgBD,SAAS,GAAG,CAA5B,CAAlB;gBACH,CAFD,CAGA;gBAHA,KAIK,IAAI,EAAEC,KAAK,GAAGtG,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYoG,KAAK,GAAG,CAApB,CAAV,CAAJ,EAAuC;kBACxC;gBACH;cACJ;;cACD,IAAI,CAACA,KAAL,EAAY;gBACR;cACH;YACJ;UACJ;QACJ;MACJ;;MACD,IAAIA,KAAJ,EAAW;QACP,KAAKE,mBAAL,CAAyBD,QAAzB,EAAmCD,KAAnC,EAA0C,SAA1C,EAAqDrG,GAArD,EAA0DC,GAA1D,EAA+D,CAA/D,EAAkEqG,QAAQ,CAAC,CAAD,CAAR,CAAY3H,MAAZ,GAAqB,CAAvF;MACH;IACJ;EACJ,CApCD;;EAqCA5E,YAAY,CAACG,SAAb,CAAuBqM,mBAAvB,GAA6C,UAAUlI,QAAV,EAAoBkG,KAApB,EAA2BoC,IAA3B,EAAiC3G,GAAjC,EAAsCC,GAAtC,EAA2C2G,UAA3C,EAAuDjI,MAAvD,EAA+D;IACxG,IAAIwE,QAAJ;IACA,IAAInB,QAAJ;IACA,IAAI6E,SAAJ;;IACA,KAAK1D,QAAQ,GAAGnD,GAAhB,EAAqBmD,QAAQ,IAAIlD,GAAjC,EAAsCkD,QAAQ,EAA9C,EAAkD;MAC9C,KAAKnB,QAAQ,GAAG4E,UAAhB,EAA4B5E,QAAQ,IAAIrD,MAAxC,EAAgDqD,QAAQ,EAAxD,EAA4D;QACxD;QACAhC,GAAG,GAAGmD,QAAN,IAAkB9E,QAAQ,CAAC8E,QAAD,CAAR,CAAmBnB,QAAnB,MAAiC3D,QAAQ,CAAC8E,QAAQ,GAAG,CAAZ,CAAR,CAAuBnB,QAAvB,CAAnD,IACI4E,UAAU,GAAG5E,QAAb,IAAyB3D,QAAQ,CAAC8E,QAAD,CAAR,CAAmBnB,QAAnB,MAAiC3D,QAAQ,CAAC8E,QAAD,CAAR,CAAmBnB,QAAQ,GAAG,CAA9B,CAD9D,IAEI,KAAK6E,SAAS,GAAGrK,QAAQ,CAAC6B,QAAQ,CAAC8E,QAAD,CAAR,CAAmBnB,QAAnB,EAA6BT,YAA7B,CAA0CoF,IAA1C,CAAD,EAAkD,EAAlD,CAAR,IAAiE,CAAlF,MACK,IAAIE,SAAS,GAAGtC,KAAhB,GAAwBlG,QAAQ,CAAC8E,QAAD,CAAR,CAAmBnB,QAAnB,EAA6BV,YAA7B,CAA0CqF,IAA1C,EAAgD,CAACE,SAAS,GAAGtC,KAAb,EAAoB/C,QAApB,EAAhD,CAAxB,GACGnD,QAAQ,CAAC8E,QAAD,CAAR,CAAmBnB,QAAnB,EAA6BhB,eAA7B,CAA6C2F,IAA7C,CAFR,CAFJ;MAKH;IACJ;EACJ,CAdD;;EAeA5M,YAAY,CAACG,SAAb,CAAuBsL,gBAAvB,GAA0C,YAAY;IAClD,IAAIpG,aAAa,GAAG,KAAKC,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,CAApB;IACA,IAAIoI,SAAS,GAAG1H,aAAa,CAAC,CAAD,CAAb,CAAiBwD,SAAjC;;IACA,KAAK,IAAIlG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0C,aAAa,CAACT,MAAd,GAAuB,CAA3C,EAA8CjC,CAAC,EAA/C,EAAmD;MAC/C,IAAI,WAAW0C,aAAa,CAAC1C,CAAD,CAAb,CAAiBkG,SAAhC,EAA2C;QACvCkE,SAAS,GAAGA,SAAS,GAAG1H,aAAa,CAAC1C,CAAD,CAAb,CAAiBkG,SAAzC;MACH;IACJ;;IACDxD,aAAa,CAAC,CAAD,CAAb,CAAiBwD,SAAjB,GAA6BkE,SAA7B;EACH,CATD;;EAUA/M,YAAY,CAACG,SAAb,CAAuBwL,wBAAvB,GAAkD,UAAUqB,kBAAV,EAA8B;IAC5E,IAAI3H,aAAa,GAAG,KAAKC,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,CAApB;;IACA,IAAI,IAAIU,aAAa,CAACT,MAAtB,EAA8B;MAC1B,IAAIqI,MAAM,GAAGD,kBAAkB,CAACpI,MAAhC;MACA,IAAIsI,MAAM,GAAG,CAAb;MACA,IAAI3D,MAAM,GAAGyD,kBAAkB,CAAC,CAAD,CAAlB,CAAsBpI,MAAnC;MACA,IAAI4E,MAAM,GAAG,CAAb;;MACA,KAAK,IAAI7G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0C,aAAa,CAACT,MAAlC,EAA0CjC,CAAC,EAA3C,EAA+C;QAC3C,IAAIwK,aAAa,GAAG,KAAKtH,qBAAL,CAA2BR,aAAa,CAAC1C,CAAD,CAAxC,EAA6CqK,kBAA7C,CAApB;QACA,IAAII,YAAY,GAAG,KAAKrH,SAAL,CAAeoH,aAAa,CAAC,CAAD,CAA5B,EAAiCA,aAAa,CAAC,CAAD,CAA9C,EAAmDH,kBAAnD,CAAnB;QACAC,MAAM,GAAGjH,IAAI,CAACC,GAAL,CAASkH,aAAa,CAAC,CAAD,CAAtB,EAA2BF,MAA3B,CAAT;QACAC,MAAM,GAAGlH,IAAI,CAACE,GAAL,CAASkH,YAAY,CAAC,CAAD,CAArB,EAA0BF,MAA1B,CAAT;QACA3D,MAAM,GAAGvD,IAAI,CAACC,GAAL,CAASkH,aAAa,CAAC,CAAD,CAAtB,EAA2B5D,MAA3B,CAAT;QACAC,MAAM,GAAGxD,IAAI,CAACE,GAAL,CAASkH,YAAY,CAAC,CAAD,CAArB,EAA0B5D,MAA1B,CAAT;MACH;;MACD,OAAO;QACHrD,QAAQ,EAAE8G,MADP;QAEH7G,MAAM,EAAE8G,MAFL;QAGH7G,WAAW,EAAEkD,MAHV;QAIHjD,SAAS,EAAEkD;MAJR,CAAP;IAMH;;IACD,OAAO,IAAP;EACH,CAvBD;;EAwBAxJ,YAAY,CAACG,SAAb,CAAuBsB,eAAvB,GAAyC,UAAUK,CAAV,EAAa;IAClD,IAAI2E,YAAY,GAAG3E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA1C;IACA,KAAKpB,QAAL,GAAgB7F,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAvB;;IACA,IAAI,KAAKtB,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,EAAiDC,MAAjD,GAA0D,CAA9D,EAAiE;MAC7D;IACH;;IACD,KAAKyI,UAAL,GAAkB,KAAK/H,QAAL,CAAc9B,aAAd,CAA4B,gBAA5B,CAAlB;IACA,IAAI8J,OAAO,GAAG,KAAKD,UAAL,CAAgBrG,SAAhB,CAA0B,IAA1B,CAAd;IACAsG,OAAO,CAACrG,eAAR,CAAwB,OAAxB;IACAqG,OAAO,CAACzE,SAAR,GAAoB,OAApB;IACA,IAAI0E,eAAe,GAAG,KAAK1H,qBAAL,CAA2B,KAAKwH,UAAhC,EAA4C,KAAKlG,uBAAL,EAA5C,CAAtB;IACA,IAAI6F,kBAAkB,GAAG,KAAK7F,uBAAL,EAAzB;IACA,IAAIqG,iBAAiB,GAAG,KAAKH,UAAL,CAAgB7F,YAAhB,CAA6B,SAA7B,IAA0C/E,QAAQ,CAAC,KAAK4K,UAAL,CAAgB7F,YAAhB,CAA6B,SAA7B,CAAD,EAA0C,EAA1C,CAAlD,GAAkG,CAA1H;;IACA,IAAIgG,iBAAiB,GAAG,CAAxB,EAA2B;MACvB,IAAIC,QAAQ,GAAGzH,IAAI,CAAC0H,IAAL,CAAUF,iBAAiB,GAAG,CAA9B,CAAf,CADuB,CAEvB;;MACA,IAAIC,QAAJ,GAAe,KAAKJ,UAAL,CAAgB9F,YAAhB,CAA6B,SAA7B,EAAwCkG,QAAQ,CAAChG,QAAT,EAAxC,CAAf,GACI,KAAK4F,UAAL,CAAgBpG,eAAhB,CAAgC,SAAhC,CADJ,CAHuB,CAKvB;;MACA,IAAKuG,iBAAiB,GAAGC,QAAzB,GAAqCH,OAAO,CAAC/F,YAAR,CAAqB,SAArB,EAAgC,CAACiG,iBAAiB,GAAGC,QAArB,EAA+BhG,QAA/B,EAAhC,CAArC,GAAkH6F,OAAO,CAACrG,eAAR,CAAwB,SAAxB,CAAlH;MACA,IAAI0G,WAAW,GAAG,KAAK,CAAvB;MACA,IAAI1F,QAAQ,GAAG,KAAK,CAApB;;MACA,KAAK0F,WAAW,GAAGJ,eAAe,CAAC,CAAD,CAAf,GAAqBvH,IAAI,CAAC0H,IAAL,CAAUF,iBAAiB,GAAG,CAA9B,CAAnC,EACDvF,QAAQ,GAAG,MAAMsF,eAAe,CAAC,CAAD,CAArB,GAA2BA,eAAe,CAAC,CAAD,CAA1C,GACLA,eAAe,CAAC,CAAD,CAAf,GAAqB,CAF/B,EAEkC,KAAKtF,QAAL,KAAkB+E,kBAAkB,CAACW,WAAD,CAAlB,CAAgC1F,QAAhC,MAChD+E,kBAAkB,CAACW,WAAD,CAAlB,CAAgC1F,QAAQ,GAAG,CAA3C,CADgD,IACC,IAAI0F,WAAJ,IAAmBX,kBAAkB,CAACW,WAAD,CAAlB,CAAgC1F,QAAhC,MAChE+E,kBAAkB,CAACW,WAAW,GAAG,CAAf,CAAlB,CAAoC1F,QAApC,CAF0B,CAFlC,GAIyD;QACrDA,QAAQ;MACX;;MACD,IAAIA,QAAQ,KAAK,CAAC,CAAlB,EAAqB;QACjB;QACA,KAAK3C,QAAL,CAAc1C,IAAd,CAAmB+K,WAAnB,EAAgCC,UAAhC,GAA6C,KAAKtI,QAAL,CAAc1C,IAAd,CAAmB+K,WAAnB,EAAgClD,OAAhC,CAAwC6C,OAAxC,CAA7C,GAAgG,KAAKhI,QAAL,CAActC,WAAd,CAA0BsK,OAA1B,CAAhG;MACH,CAHD,MAIK;QACDN,kBAAkB,CAACW,WAAD,CAAlB,CAAgC1F,QAAhC,EAA0CyC,qBAA1C,CAAgE,UAAhE,EAA4E4C,OAA5E;MACH;IACJ,CAvBD,MAwBK;MACD,IAAIO,QAAQ,GAAGrO,aAAa,CAAC,IAAD,CAA5B;MACAqO,QAAQ,CAAC7K,WAAT,CAAqBsK,OAArB;MACA,IAAI3F,WAAW,GAAGqF,kBAAkB,CAACO,eAAe,CAAC,CAAD,CAAhB,CAApC;;MACA,KAAK,IAAIzK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI6E,WAAW,CAAC/C,MAAZ,GAAqB,CAA1C,EAA6C9B,CAAC,EAA9C,EAAkD;QAC9C,IAAI6E,WAAW,CAAC7E,CAAD,CAAX,KAAmB6E,WAAW,CAAC7E,CAAC,GAAG,CAAL,CAA9B,IAAyC6E,WAAW,CAAC7E,CAAD,CAAX,KAAmB,KAAKuK,UAArE,EAAiF;UAC7E1F,WAAW,CAAC7E,CAAD,CAAX,CAAeyE,YAAf,CAA4B,SAA5B,EAAuC,CAAC,CAAC9E,QAAQ,CAACkF,WAAW,CAAC7E,CAAD,CAAX,CAAe0E,YAAf,CAA4B,SAA5B,CAAD,EAAyC,EAAzC,CAAR,GACrC/E,QAAQ,CAACkF,WAAW,CAAC7E,CAAD,CAAX,CAAe0E,YAAf,CAA4B,SAA5B,CAAD,EAAyC,EAAzC,CAD6B,GACkB,CADnB,IACwB,CADzB,EAC4BC,QAD5B,EAAvC;QAEH;MACJ;;MACD,KAAK4F,UAAL,CAAgBpI,UAAhB,CAA2ByF,qBAA3B,CAAiD,UAAjD,EAA6DmD,QAA7D;IACH;;IACD,IAAI/L,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CA1DD;;EA2DApD,YAAY,CAACG,SAAb,CAAuBwB,aAAvB,GAAuC,UAAUG,CAAV,EAAa;IAChD,IAAI2E,YAAY,GAAG3E,CAAC,CAACI,IAAF,CAAOe,SAAP,CAAiBkB,KAAjB,CAAuBuC,cAA1C;IACA,KAAKpB,QAAL,GAAgB7F,OAAO,CAACgH,YAAY,CAACG,aAAd,EAA6B,OAA7B,CAAvB;;IACA,IAAI,KAAKtB,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,EAAiDC,MAAjD,GAA0D,CAA9D,EAAiE;MAC7D;IACH;;IACD,KAAKyI,UAAL,GAAkB,KAAK/H,QAAL,CAAc9B,aAAd,CAA4B,gBAA5B,CAAlB;IACA,IAAIwE,OAAO,GAAG,KAAK1C,QAAL,CAAc1C,IAA5B;IACA,IAAI0K,OAAO,GAAG,KAAKD,UAAL,CAAgBrG,SAAhB,CAA0B,IAA1B,CAAd;IACAsG,OAAO,CAACrG,eAAR,CAAwB,OAAxB;IACAqG,OAAO,CAACzE,SAAR,GAAoB,OAApB;IACA,IAAIiF,QAAQ,GAAG/B,UAAU,CAAC,KAAKsB,UAAL,CAAgBjL,KAAhB,CAAsBD,KAAvB,CAAV,GAA0C,CAAzD;;IACA,IAAI,KAAKkL,UAAL,CAAgBlE,OAAhB,KAA4B,IAA5B,IAAoC4E,KAAK,CAACD,QAAD,CAA7C,EAAyD;MACrD,IAAI9C,SAAS,GAAG,KAAK1F,QAAL,CAAc9B,aAAd,CAA4B,IAA5B,EAAkCyH,iBAAlD;MACA,IAAIC,YAAY,GAAG,CAAnB;;MACA,KAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqI,SAApB,EAA+BrI,CAAC,EAAhC,EAAoC;QAChCuI,YAAY,GAAGA,YAAY,IAAIzI,QAAQ,CAAC,KAAK6C,QAAL,CAAc9B,aAAd,CAA4B,IAA5B,EAAkCuG,QAAlC,CAA2CpH,CAA3C,EAA8C6E,YAA9C,CAA2D,SAA3D,CAAD,EAAwE,EAAxE,CAAR,IAAuF,CAA3F,CAA3B;MACH;;MACDsG,QAAQ,GAAG/B,UAAU,CAAC,CAAG,KAAKsB,UAAL,CAAgB1E,WAAhB,GAA8B,CAA/B,GAAoC,KAAKrD,QAAL,CAAcqD,WAAnD,GAAkE,GAAnE,EAAwEG,OAAxE,CAAgF,CAAhF,CAAD,CAArB;IACH;;IACD,IAAIyE,eAAe,GAAG,KAAK1H,qBAAL,CAA2B,KAAKwH,UAAhC,EAA4C,KAAKlG,uBAAL,EAA5C,CAAtB;IACA,IAAI6G,oBAAoB,GAAG,KAAK7G,uBAAL,EAA3B;IACA,IAAI8G,iBAAiB,GAAGxL,QAAQ,CAAC,KAAK4K,UAAL,CAAgB7F,YAAhB,CAA6B,SAA7B,CAAD,EAA0C,EAA1C,CAAhC;;IACA,IAAIyG,iBAAiB,GAAG,CAAxB,EAA2B;MACvB;MACA,IAAIjI,IAAI,CAAC0H,IAAL,CAAUO,iBAAiB,GAAG,CAA9B,CAAJ,GAAuC,KAAKZ,UAAL,CAAgB9F,YAAhB,CAA6B,SAA7B,EAAwC,CAAC0G,iBAAiB,GAAG,CAArB,EAAwBxG,QAAxB,EAAxC,CAAvC,GACM,KAAK4F,UAAL,CAAgBpG,eAAhB,CAAgC,SAAhC,CADN,CAFuB,CAIvB;;MACA,IAAKgH,iBAAiB,GAAGA,iBAAiB,GAAG,CAA7C,GAAkDX,OAAO,CAAC/F,YAAR,CAAqB,SAArB,EAClD;MACA,CAAC0G,iBAAiB,GAAGA,iBAAiB,GAAG,CAAzC,EAA4CxG,QAA5C,EAFkD,CAAlD,GAE0D6F,OAAO,CAACrG,eAAR,CAAwB,SAAxB,CAF1D;IAGH,CARD,MASK;MACD,KAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIqF,OAAO,CAACpD,MAAR,GAAiB,CAAtC,EAAyCjC,CAAC,EAA1C,EAA8C;QAC1C,IAAI,MAAMA,CAAN,IAAWqL,oBAAoB,CAACrL,CAAD,CAApB,CAAwB4K,eAAe,CAAC,CAAD,CAAvC,MAAgDS,oBAAoB,CAACrL,CAAC,GAAG,CAAL,CAApB,CAA4B4K,eAAe,CAAC,CAAD,CAA3C,CAA/D,EAAgH;UAC5G,IAAI7D,WAAW,GAAGsE,oBAAoB,CAACrL,CAAD,CAApB,CAAwB4K,eAAe,CAAC,CAAD,CAAvC,CAAlB;;UACA,IAAI7D,WAAW,KAAK,KAAK2D,UAAzB,EAAqC;YACjC3D,WAAW,CAACnC,YAAZ,CAAyB,SAAzB,EAAoC,CAAC,CAAC9E,QAAQ,CAACiH,WAAW,CAAClC,YAAZ,CAAyB,SAAzB,CAAD,EAAsC,EAAtC,CAAR,GAClC/E,QAAQ,CAACiH,WAAW,CAAClC,YAAZ,CAAyB,SAAzB,CAAD,EAAsC,EAAtC,CAD0B,GACkB,CADnB,IACwB,CADzB,EAC4BC,QAD5B,EAApC;UAEH;QACJ;MACJ;IACJ;;IACD,KAAK4F,UAAL,CAAgBjL,KAAhB,CAAsBD,KAAtB,GAA8B2L,QAAQ,GAAG,GAAzC;IACAR,OAAO,CAAClL,KAAR,CAAcD,KAAd,GAAsB2L,QAAQ,GAAG,GAAjC;IACA,KAAKT,UAAL,CAAgBpI,UAAhB,CAA2BC,YAA3B,CAAwCoI,OAAxC,EAAiD,KAAKD,UAAL,CAAgBlI,WAAjE;;IACA,IAAIrD,CAAC,CAACiC,QAAN,EAAgB;MACZjC,CAAC,CAACiC,QAAF,CAAW;QACPC,WAAW,EAAElC,CAAC,CAACI,IAAF,CAAOsE,UADb;QAEPvC,UAAU,EAAE,MAFL;QAGPC,KAAK,EAAEpC,CAAC,CAACoC,KAHF;QAIPC,KAAK,EAAE,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKpE,MAAL,CAAYmD,eAA/C,CAJA;QAKPkB,QAAQ,EAAE,KAAKrE,MAAL,CAAYmE,aAAZ,CAA0ByD,gBAA1B,CAA2C,KAAK5H,MAAL,CAAYmD,eAAvD;MALH,CAAX;IAOH;EACJ,CAvDD;;EAwDApD,YAAY,CAACG,SAAb,CAAuBgH,uBAAvB,GAAiD,YAAY;IACzD,IAAI+G,YAAY,GAAG,EAAnB,CADyD,CAEzD;;IACA,IAAIC,KAAK,GAAG,IAAZ;;IACA,IAAIC,OAAO,GAAG,CAAd;IACA,IAAIpG,OAAO,GAAGmG,KAAK,CAAC7I,QAAN,CAAe1C,IAA7B;;IACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIqF,OAAO,CAACpD,MAAR,GAAiB,CAAtC,EAAyCjC,CAAC,EAA1C,EAA8C;MAC1C,IAAI8J,GAAG,GAAGzE,OAAO,CAACrF,CAAD,CAAjB;MACA,IAAI6H,KAAK,GAAG,CAAZ;;MACA,KAAK,IAAI1H,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI2J,GAAG,CAAC1C,QAAJ,CAAanF,MAAb,GAAsB,CAA3C,EAA8C9B,CAAC,EAA/C,EAAmD;QAC/C;QACA,IAAIuL,MAAM,GAAG5B,GAAG,CAAC1C,QAAJ,CAAajH,CAAb,CAAb;;QACA,KAAK,IAAIwL,KAAK,GAAGD,MAAZ,EAAoBE,SAAS,GAAG9L,QAAQ,CAAC6L,KAAK,CAAC9G,YAAN,CAAmB,SAAnB,CAAD,EAAgC,EAAhC,CAAR,IAA+C,CAA/E,EAAkFgH,OAAO,GAAG/L,QAAQ,CAAC6L,KAAK,CAAC9G,YAAN,CAAmB,SAAnB,CAAD,EAAgC,EAAhC,CAAR,IAA+C,CAA3I,EAA8I4B,QAAQ,GAAGzG,CAA9J,EAAiKyG,QAAQ,GAAGzG,CAAC,GAAG6L,OAAhL,EAAyLpF,QAAQ,EAAjM,EAAqM;UACjM,KAAK,IAAInB,QAAQ,GAAGuC,KAApB,EAA2BvC,QAAQ,GAAGuC,KAAK,GAAG+D,SAA9C,EAAyDtG,QAAQ,EAAjE,EAAqE;YACjEiG,YAAY,CAAC9E,QAAD,CAAZ,KAA2B8E,YAAY,CAAC9E,QAAD,CAAZ,GAAyB,EAApD;YACA8E,YAAY,CAAC9E,QAAD,CAAZ,CAAuBnB,QAAvB,IAAmCuC,KAAK,EAAxC,GAA6C0D,YAAY,CAAC9E,QAAD,CAAZ,CAAuBnB,QAAvB,IAAmCoG,MAAhF;UACH;QACJ;;QACD7D,KAAK,IAAI4D,OAAT;MACH;MACD;;IACH;;IACD,OAAOF,YAAP;EACH,CAvBD,CA5uB0C,CAowB1C;;;EACAlO,YAAY,CAACG,SAAb,CAAuB4F,SAAvB,GAAmC,UAAUqD,QAAV,EAAoBqF,WAApB,EAAiCC,KAAjC,EAAwC;IACvE,IAAIC,SAAJ;IACA,IAAIC,OAAJ;;IACA,KAAKD,SAAS,GAAGvF,QAAQ,GAAG,CAAvB,EAA0BwF,OAAO,GAAGH,WAAW,GAAG,CAAvD,EAA0DE,SAAS,GAAGD,KAAK,CAAC9J,MAA5E,GAAqF;MACjF,IAAI8J,KAAK,CAACC,SAAD,CAAL,CAAiBF,WAAjB,MAAkCC,KAAK,CAACtF,QAAD,CAAL,CAAgBqF,WAAhB,CAAtC,EAAoE;QAChEE,SAAS;QACT;MACH;;MACDA,SAAS;IACZ;;IACD,KAAKA,SAAS,KAAKD,KAAK,CAAC9J,MAApB,IAA8B+J,SAAS,EAA5C,EAAgDC,OAAO,GAAGF,KAAK,CAACtF,QAAD,CAAL,CAAgBxE,MAA1E,GAAmF;MAC/E,IAAI8J,KAAK,CAACtF,QAAD,CAAL,CAAgBwF,OAAhB,MAA6BF,KAAK,CAACtF,QAAD,CAAL,CAAgBqF,WAAhB,CAAjC,EAA+D;QAC3DG,OAAO;QACP;MACH;;MACDA,OAAO;IACV;;IACD,OAAOA,OAAO,KAAKF,KAAK,CAACtF,QAAD,CAAL,CAAgBxE,MAA5B,IAAsCgK,OAAO,EAA7C,EACH,CACID,SADJ,EAEIC,OAFJ,CADJ;EAKH,CAtBD;;EAuBA5O,YAAY,CAACG,SAAb,CAAuB0F,qBAAvB,GAA+C,UAAU9C,IAAV,EAAgBmE,QAAhB,EAA0B;IACrE;IACA,KAAK,IAAIvE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuE,QAAQ,CAACtC,MAA7B,EAAqCjC,CAAC,EAAtC,EAA0C;MACtC,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoE,QAAQ,CAACvE,CAAD,CAAR,CAAYiC,MAAhC,EAAwC9B,CAAC,EAAzC,EAA6C;QACzC,IAAIoE,QAAQ,CAACvE,CAAD,CAAR,CAAYG,CAAZ,MAAmBC,IAAvB,EAA6B;UACzB,OAAO,CAACJ,CAAD,EAAIG,CAAJ,CAAP;QACH;MACJ;IACJ;;IACD,OAAO,EAAP;EACH,CAVD;;EAWA9C,YAAY,CAACG,SAAb,CAAuB0O,cAAvB,GAAwC,UAAU5B,MAAV,EAAkBC,MAAlB,EAA0B3D,MAA1B,EAAkCC,MAAlC,EAA0C+C,QAA1C,EAAoD;IACxF,IAAIzJ,CAAJ;IACA,IAAIgM,CAAJ;IACA,IAAIC,SAAJ;IACA,IAAIC,OAAJ;IACA,IAAIC,WAAW,GAAGhC,MAAlB;IACA,IAAIiC,WAAW,GAAGhC,MAAlB;IACA,IAAIiC,WAAW,GAAG5F,MAAlB;IACA,IAAI6F,WAAW,GAAG5F,MAAlB;IACA,IAAI6F,YAAY,GAAG,IAAIC,MAAJ,EAAnB;;IACA,KAAKxM,CAAC,GAAGmM,WAAT,EAAsBnM,CAAC,IAAIoM,WAA3B,EAAwCpM,CAAC,EAAzC,EAA6C;MACzC;MACA,IAAI,CAAC,KAAKL,QAAQ,CAAC8J,QAAQ,CAACzJ,CAAD,CAAR,CAAYqM,WAAZ,EAAyB3H,YAAzB,CAAsC,SAAtC,CAAD,EAAmD,EAAnD,CAAR,IAAkE,CAAvE,KACD,KAAK/E,QAAQ,CAAC8J,QAAQ,CAACzJ,CAAD,CAAR,CAAYqM,WAAZ,EAAyB3H,YAAzB,CAAsC,SAAtC,CAAD,EAAmD,EAAnD,CAAR,IAAkE,CAAvE,CADA,MAECwH,OAAO,GAAG,KAAKjJ,SAAL,CAAe,CAACgJ,SAAS,GAAG,KAAKlJ,qBAAL,CAA2B0G,QAAQ,CAACzJ,CAAD,CAAR,CAAYqM,WAAZ,CAA3B,EAAqD5C,QAArD,CAAb,EAA6E,CAA7E,CAAf,EAAgGwC,SAAS,CAAC,CAAD,CAAzG,EAA8GxC,QAA9G,CAFX,CAAJ,EAEyI;QACrI0C,WAAW,GAAGjJ,IAAI,CAACC,GAAL,CAAS8I,SAAS,CAAC,CAAD,CAAlB,EAAuBE,WAAvB,CAAd;QACAC,WAAW,GAAGlJ,IAAI,CAACE,GAAL,CAAS8I,OAAO,CAAC,CAAD,CAAhB,EAAqBE,WAArB,CAAd;QACAC,WAAW,GAAGnJ,IAAI,CAACC,GAAL,CAAS8I,SAAS,CAAC,CAAD,CAAlB,EAAuBI,WAAvB,CAAd;QACAC,WAAW,GAAGpJ,IAAI,CAACE,GAAL,CAAS8I,OAAO,CAAC,CAAD,CAAhB,EAAqBI,WAArB,CAAd;MACH,CAPD,MAQK,IAAI,CAAC,KAAK3M,QAAQ,CAAC8J,QAAQ,CAACzJ,CAAD,CAAR,CAAYsM,WAAZ,EAAyB5H,YAAzB,CAAsC,SAAtC,CAAD,EAAmD,EAAnD,CAAR,IAAkE,CAAvE,KACN,KAAK/E,QAAQ,CAAC8J,QAAQ,CAACzJ,CAAD,CAAR,CAAYsM,WAAZ,EAAyB5H,YAAzB,CAAsC,SAAtC,CAAD,EAAmD,EAAnD,CAAR,IAAkE,CAAvE,CADK,MAEJwH,OAAO,GAAG,KAAKjJ,SAAL,CAAe,CAACgJ,SAAS,GAAG,KAAKlJ,qBAAL,CAA2B0G,QAAQ,CAACzJ,CAAD,CAAR,CAAYsM,WAAZ,CAA3B,EAAqD7C,QAArD,CAAb,EAA6E,CAA7E,CAAf,EAAgGwC,SAAS,CAAC,CAAD,CAAzG,EAA8GxC,QAA9G,CAFN,CAAJ,EAEoI;QACrI0C,WAAW,GAAGjJ,IAAI,CAACC,GAAL,CAAS8I,SAAS,CAAC,CAAD,CAAlB,EAAuBE,WAAvB,CAAd;QACAC,WAAW,GAAGlJ,IAAI,CAACE,GAAL,CAAS8I,OAAO,CAAC,CAAD,CAAhB,EAAqBE,WAArB,CAAd;QACAC,WAAW,GAAGnJ,IAAI,CAACC,GAAL,CAAS8I,SAAS,CAAC,CAAD,CAAlB,EAAuBI,WAAvB,CAAd;QACAC,WAAW,GAAGpJ,IAAI,CAACE,GAAL,CAAS8I,OAAO,CAAC,CAAD,CAAhB,EAAqBI,WAArB,CAAd;MACH;;MACD,KAAKN,CAAC,GAAGK,WAAT,EAAsBL,CAAC,IAAIM,WAA3B,EAAwCN,CAAC,EAAzC,EAA6C;QACzC,IAAI,CAAC,KAAKrM,QAAQ,CAAC8J,QAAQ,CAAC0C,WAAD,CAAR,CAAsBH,CAAtB,EAAyBtH,YAAzB,CAAsC,SAAtC,CAAD,EAAmD,EAAnD,CAAR,IAAkE,CAAvE,KACD,KAAK/E,QAAQ,CAAC8J,QAAQ,CAAC0C,WAAD,CAAR,CAAsBH,CAAtB,EAAyBtH,YAAzB,CAAsC,SAAtC,CAAD,EAAmD,EAAnD,CAAR,IAAkE,CAAvE,CADA,MAECwH,OAAO,GAAG,KAAKjJ,SAAL,CAAe,CAACgJ,SAAS,GAAG,KAAKlJ,qBAAL,CAA2B0G,QAAQ,CAAC0C,WAAD,CAAR,CAAsBH,CAAtB,CAA3B,EAAqDvC,QAArD,CAAb,EAA6E,CAA7E,CAAf,EAAgGwC,SAAS,CAAC,CAAD,CAAzG,EAA8GxC,QAA9G,CAFX,CAAJ,EAEyI;UACrI0C,WAAW,GAAGjJ,IAAI,CAACC,GAAL,CAAS8I,SAAS,CAAC,CAAD,CAAlB,EAAuBE,WAAvB,CAAd;UACAC,WAAW,GAAGlJ,IAAI,CAACE,GAAL,CAAS8I,OAAO,CAAC,CAAD,CAAhB,EAAqBE,WAArB,CAAd;UACAC,WAAW,GAAGnJ,IAAI,CAACC,GAAL,CAAS8I,SAAS,CAAC,CAAD,CAAlB,EAAuBI,WAAvB,CAAd;UACAC,WAAW,GAAGpJ,IAAI,CAACE,GAAL,CAAS8I,OAAO,CAAC,CAAD,CAAhB,EAAqBI,WAArB,CAAd;QACH,CAPD,MAQK,IAAI,CAAC,KAAK3M,QAAQ,CAAC8J,QAAQ,CAAC2C,WAAD,CAAR,CAAsBJ,CAAtB,EAAyBtH,YAAzB,CAAsC,SAAtC,CAAD,EAAmD,EAAnD,CAAR,IAAkE,CAAvE,KACN,KAAK/E,QAAQ,CAAC8J,QAAQ,CAAC2C,WAAD,CAAR,CAAsBJ,CAAtB,EAAyBtH,YAAzB,CAAsC,SAAtC,CAAD,EAAmD,EAAnD,CAAR,IAAkE,CAAvE,CADK,MAEJwH,OAAO,GAAG,KAAKjJ,SAAL,CAAe,CAACgJ,SAAS,GAAG,KAAKlJ,qBAAL,CAA2B0G,QAAQ,CAAC2C,WAAD,CAAR,CAAsBJ,CAAtB,CAA3B,EAAqDvC,QAArD,CAAb,EAA6E,CAA7E,CAAf,EAAgGwC,SAAS,CAAC,CAAD,CAAzG,EAA8GxC,QAA9G,CAFN,CAAJ,EAEoI;UACrI0C,WAAW,GAAGjJ,IAAI,CAACC,GAAL,CAAS8I,SAAS,CAAC,CAAD,CAAlB,EAAuBE,WAAvB,CAAd;UACAC,WAAW,GAAGlJ,IAAI,CAACE,GAAL,CAAS8I,OAAO,CAAC,CAAD,CAAhB,EAAqBE,WAArB,CAAd;UACAC,WAAW,GAAGnJ,IAAI,CAACC,GAAL,CAAS8I,SAAS,CAAC,CAAD,CAAlB,EAAuBI,WAAvB,CAAd;UACAC,WAAW,GAAGpJ,IAAI,CAACE,GAAL,CAAS8I,OAAO,CAAC,CAAD,CAAhB,EAAqBI,WAArB,CAAd;QACH;MACJ;;MACDC,YAAY,GAAGJ,WAAW,KAAKhC,MAAhB,IAA0BiC,WAAW,KAAKhC,MAA1C,IAAoDiC,WAAW,KAAK5F,MAApE,IAA8E6F,WAAW,KAAK5F,MAA9F,GAAuG;QAClHrD,QAAQ,EAAE8G,MADwG;QAElH7G,MAAM,EAAE8G,MAF0G;QAGlH7G,WAAW,EAAEkD,MAHqG;QAIlHjD,SAAS,EAAEkD;MAJuG,CAAvG,GAKX,KAAKqF,cAAL,CAAoBI,WAApB,EAAiCC,WAAjC,EAA8CC,WAA9C,EAA2DC,WAA3D,EAAwE7C,QAAxE,CALJ;IAMH;;IACD,OAAO8C,YAAP;IACA;EACH,CAvDD;;EAwDArP,YAAY,CAACG,SAAb,CAAuB0B,SAAvB,GAAmC,UAAUC,CAAV,EAAa;IAC5C,KAAKuL,UAAL,GAAkBvL,CAAC,CAACyN,UAAF,CAAa,CAAb,CAAlB;IACA,IAAIC,MAAM,GAAG1N,CAAC,CAACoC,KAAF,CAAQsL,MAArB;IACA,IAAIC,aAAa,GAAG,KAAKpC,UAAL,CAAgBlE,OAApC;IACA,IAAIuG,aAAa,GAAGF,MAAM,CAACrG,OAA3B;IACA,KAAK7D,QAAL,GAAgB7F,OAAO,CAAC+P,MAAD,EAAS,OAAT,CAAvB;;IACA,IAAI,KAAKlK,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,EAAiDC,MAAjD,GAA0D,CAA9D,EAAiE;MAC7D,KAAK3E,MAAL,CAAYmE,aAAZ,CAA0BuL,KAA1B,CAAgC,KAAK1P,MAAL,CAAYmD,eAA5C;IACH;;IACD,IAAKoM,MAAM,CAACrG,OAAP,KAAmB,IAAnB,IAA2BqG,MAAM,CAACrG,OAAP,KAAmB,IAA/C,IAAwDsG,aAAa,KAAKC,aAA9E,EAA6F;MACzF;IACH;;IACD,IAAIE,cAAc,GAAG1H,KAAK,CAAC/H,SAAN,CAAgBgI,KAAhB,CAAsBC,IAAtB,CAA4B,KAAKiF,UAAN,CAAkBzG,aAAlB,CAAgCA,aAAhC,CAA8CmD,QAAzE,EAChBtF,OADgB,CACP,KAAK4I,UAAN,CAAkBzG,aADV,CAArB;IAEA,IAAIiJ,iBAAiB,GAAG3H,KAAK,CAAC/H,SAAN,CAAgBgI,KAAhB,CAAsBC,IAAtB,CAA4B,KAAKiF,UAAN,CAAkBzG,aAAlB,CAAgCmD,QAA3D,EAAqEtF,OAArE,CAA6E,KAAK4I,UAAlF,CAAxB;IACA,IAAIyC,cAAc,GAAG5H,KAAK,CAAC/H,SAAN,CAAgBgI,KAAhB,CAAsBC,IAAtB,CAA2BoH,MAAM,CAAC5I,aAAP,CAAqBA,aAArB,CAAmCmD,QAA9D,EAChBtF,OADgB,CACR+K,MAAM,CAAC5I,aADC,CAArB;IAEA,IAAImJ,iBAAiB,GAAG7H,KAAK,CAAC/H,SAAN,CAAgBgI,KAAhB,CAAsBC,IAAtB,CAA2BoH,MAAM,CAAC5I,aAAP,CAAqBmD,QAAhD,EAA0DtF,OAA1D,CAAkE+K,MAAlE,CAAxB;IACA,IAAIQ,cAAc,GAAG,KAAK1K,QAAL,CAAcX,gBAAd,CAA+B,gBAA/B,CAArB;;IACA,KAAK,IAAIhC,CAAC,GAAGqN,cAAc,CAACpL,MAAf,GAAwB,CAArC,EAAwCjC,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;MACjD,IAAI,KAAK0K,UAAL,KAAoB2C,cAAc,CAACrN,CAAD,CAAtC,EAA2C;QACvCqN,cAAc,CAACrN,CAAD,CAAd,CAAkBkB,SAAlB,CAA4BoM,MAA5B,CAAmC,eAAnC;MACH;IACJ;;IACD,IAAIL,cAAc,KAAKE,cAAnB,IAAqCD,iBAAiB,KAAKE,iBAA/D,EAAkF;MAC9E;IACH;;IACD,IAAI/C,kBAAkB,GAAG,KAAK7F,uBAAL,EAAzB;IACA,IAAI+I,aAAa,GAAG,KAAKrK,qBAAL,CAA2B,KAAKwH,UAAhC,EAA4CL,kBAA5C,CAApB;IACA,IAAImD,aAAa,GAAG,KAAKtK,qBAAL,CAA2B2J,MAA3B,EAAmCxC,kBAAnC,CAApB;IACA,IAAItB,aAAa,GAAG,KAAKmD,cAAL,CAAoB7I,IAAI,CAACC,GAAL,CAASiK,aAAa,CAAC,CAAD,CAAtB,EAA2BC,aAAa,CAAC,CAAD,CAAxC,CAApB,EAAkEnK,IAAI,CAACE,GAAL,CAASgK,aAAa,CAAC,CAAD,CAAtB;IACtF;IACAC,aAAa,CAAC,CAAD,CAFyE,CAAlE,EAEDnK,IAAI,CAACC,GAAL,CAASiK,aAAa,CAAC,CAAD,CAAtB,EAA2BC,aAAa,CAAC,CAAD,CAAxC,CAFC,EAE6CnK,IAAI,CAACE,GAAL,CAASgK,aAAa,CAAC,CAAD,CAAtB,EAA2BC,aAAa,CAAC,CAAD,CAAxC,CAF7C,EAE2FnD,kBAF3F,CAApB;;IAGA,KAAK,IAAI5D,QAAQ,GAAGsC,aAAa,CAACvF,QAAlC,EAA4CiD,QAAQ,IAAIsC,aAAa,CAACtF,MAAtE,EAA8EgD,QAAQ,EAAtF,EAA0F;MACtF,KAAK,IAAInB,QAAQ,GAAGyD,aAAa,CAACrF,WAAlC,EAA+C4B,QAAQ,IAAIyD,aAAa,CAACpF,SAAzE,EAAoF2B,QAAQ,EAA5F,EAAgG;QAC5F+E,kBAAkB,CAAC5D,QAAD,CAAlB,CAA6BnB,QAA7B,EAAuCpE,SAAvC,CAAiDC,GAAjD,CAAqD,eAArD;MACH;IACJ;;IACD,IAAI,KAAK7D,MAAL,CAAYmE,aAAZ,CAA0BD,KAA9B,EAAqC;MACjC,KAAKlE,MAAL,CAAYmE,aAAZ,CAA0Bb,gBAA1B,CAA2C,KAAKtD,MAAL,CAAYmD,eAAvD,EAAwE,KAAKnD,MAAL,CAAYmE,aAAZ,CAA0BD,KAA1B,CAAgC+H,YAAxG,EAAsH,KAAKjM,MAAL,CAAYmE,aAAZ,CAA0BD,KAA1B,CAAgC+H,YAAtJ,EAAoK,CAApK,EAAuK,CAAvK;MACA,KAAKjM,MAAL,CAAYmE,aAAZ,CAA0BiG,cAA1B,CAAyC,KAAKpK,MAAL,CAAYmD,eAArD,EAAsE,KAAKnD,MAAL,CAAYmE,aAAZ,CAA0BD,KAA1B,CAAgC+H,YAAtG,EAAoH,CAApH;IACH;EACJ,CA1CD;;EA2CA;EACA,OAAOlM,YAAP;AACH,CA54BiC,EAAlC;;AA64BA,SAASA,YAAT;;AACA,IAAIsP,MAAM;AAAG;AAAe,YAAY;EACpC,SAASA,MAAT,GAAkB,CACjB;;EACD,OAAOA,MAAP;AACH,CAJ2B,EAA5B"},"metadata":{},"sourceType":"module"}