{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { ScrollElements, createScrollSvg } from './scrollbar-elements';\nimport { getElement, minMax, logBase } from '../utils/helper';\nimport { getScrollbarThemeColor } from '../model/theme';\nimport { scrollChanged, scrollEnd, scrollStart } from '../model/constants';\n/**\n * Scrollbar Base\n */\n\nvar ScrollBar =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating scrollbar\n   *\n   * @param component\n   * @param axis\n   */\n  function ScrollBar(component, axis) {\n    /** @private */\n    this.scrollRange = {\n      max: null,\n      min: null,\n      interval: null,\n      delta: null\n    };\n    this.component = component;\n    this.elements = [];\n    this.scrollElements = new ScrollElements(component);\n    this.axis = axis;\n    this.mouseMoveListener = this.scrollMouseMove.bind(this);\n    this.mouseUpListener = this.scrollMouseUp.bind(this);\n    this.animateDuration = 500;\n    this.isPointer = Browser.isPointer;\n    this.browserName = Browser.info.name;\n  }\n  /**\n   * To Mouse x and y position\n   *\n   * @param e\n   */\n\n\n  ScrollBar.prototype.getMouseXY = function (e) {\n    var pageX;\n    var pageY;\n    var touchArg;\n\n    if (e.type.indexOf('touch') > -1) {\n      touchArg = e;\n      pageX = touchArg.changedTouches[0].clientX;\n      pageY = touchArg.changedTouches[0].clientY;\n    } else {\n      pageX = e.clientX;\n      pageY = e.clientY;\n    }\n\n    var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n    this.mouseX = pageX - Math.max(svgRect.left, 0);\n    this.mouseY = pageY - Math.max(svgRect.top, 0);\n  };\n  /**\n   * Method to bind events for scrollbar svg object\n   *\n   * @param element\n   * @returns {void}\n   */\n\n\n  ScrollBar.prototype.wireEvents = function (element) {\n    EventHandler.add(element, Browser.touchStartEvent, this.scrollMouseDown, this);\n    EventHandler.add(element, Browser.touchMoveEvent, this.scrollMouseMove, this);\n    EventHandler.add(element, Browser.touchEndEvent, this.scrollMouseUp, this);\n    EventHandler.add(element, 'mousewheel', this.scrollMouseWheel, this);\n    window.addEventListener('mousemove', this.mouseMoveListener, false);\n    window.addEventListener('mouseup', this.mouseUpListener, false);\n  };\n  /**\n   * Method to remove events for srcollbar svg object\n   *\n   * @param element\n   */\n\n\n  ScrollBar.prototype.unWireEvents = function (element) {\n    EventHandler.remove(element, Browser.touchStartEvent, this.scrollMouseDown);\n    EventHandler.remove(element, Browser.touchMoveEvent, this.scrollMouseMove);\n    EventHandler.remove(element, Browser.touchEndEvent, this.scrollMouseUp);\n    EventHandler.remove(element, 'mousewheel', this.scrollMouseWheel);\n    window.removeEventListener('mousemove', this.mouseMoveListener, false);\n    window.removeEventListener('mouseup', this.mouseUpListener, false);\n  };\n  /**\n   * Handles the mouse down on scrollbar\n   *\n   * @param e\n   */\n\n\n  ScrollBar.prototype.scrollMouseDown = function (e) {\n    var id = e.target.id;\n    var elem = this.scrollElements;\n    var isInverse = this.axis.isAxisInverse;\n    this.getMouseXY(e);\n    this.isResizeLeft = this.isExist(id, '_leftCircle_') || this.isExist(id, '_leftArrow_');\n    this.isResizeRight = this.isExist(id, '_rightCircle_') || this.isExist(id, '_rightArrow_'); //  this.previousXY = this.isVertical ? this.mouseY : this.mouseX;\n\n    this.previousXY = this.isVertical && isInverse ? this.mouseY : this.isVertical ? this.width - this.mouseY : isInverse ? this.width - this.mouseX : this.mouseX;\n    this.previousWidth = elem.thumbRectWidth;\n    this.previousRectX = elem.thumbRectX;\n    this.startZoomPosition = this.axis.zoomPosition;\n    this.startZoomFactor = this.axis.zoomFactor;\n    this.startRange = this.axis.visibleRange;\n    this.scrollStarted = true;\n    this.component.trigger(scrollStart, this.getArgs(scrollStart));\n\n    if (this.isExist(id, 'scrollBarThumb_') || this.isExist(id, 'gripCircle')) {\n      this.isThumbDrag = true;\n      this.svgObject.style.cursor = '-webkit-grabbing';\n    } else if (this.isExist(id, 'scrollBarBackRect_')) {\n      var currentX = this.moveLength(this.previousXY, this.previousRectX);\n      elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n      this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n      this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth, false);\n\n      if (this.isLazyLoad) {\n        var thumbMove = elem.thumbRectX > this.previousRectX ? 'RightMove' : 'LeftMove';\n        var args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n        }\n      }\n    }\n    /**\n     * Customer issue\n     * Task ID - EJ2-28898\n     * Issue: While element's height is smaller than chart'height, html scroll bar presents. On that case while moving chart scrollbar,\n     * html scrollbar goes up due to chart's svg removed from the dom when zoomFactor and zoomPosition chnaged\n     * Fix: Only for scrolling purpose, height for element is set to chart's available height\n     */\n\n\n    if (this.component.element.style.height === '') {\n      this.isCustomHeight = true;\n      this.component.element.style.height = this.component.availableSize.height + 'px';\n    }\n  };\n  /**\n   * To check the matched string\n   *\n   * @param id\n   * @param match\n   */\n\n\n  ScrollBar.prototype.isExist = function (id, match) {\n    return id.indexOf(match) > -1;\n  };\n  /**\n   * To check current poisition is within scrollbar region\n   *\n   * @param currentX\n   */\n\n\n  ScrollBar.prototype.isWithIn = function (currentX) {\n    var circleRadius = 8;\n    return currentX - circleRadius >= 0 && currentX + this.scrollElements.thumbRectWidth + circleRadius <= this.width;\n  };\n  /**\n   * Method to find move length of thumb\n   *\n   * @param mouseXY\n   * @param thumbX\n   * @param circleRadius\n   */\n\n\n  ScrollBar.prototype.moveLength = function (mouseXY, thumbX, circleRadius) {\n    if (circleRadius === void 0) {\n      circleRadius = 8;\n    }\n\n    var moveLength = 10 / 100 * (this.width - circleRadius * 2);\n\n    if (mouseXY < thumbX) {\n      moveLength = thumbX - (thumbX - moveLength > circleRadius ? moveLength : circleRadius);\n    } else {\n      moveLength = thumbX + (thumbX + this.scrollElements.thumbRectWidth + moveLength < this.width - circleRadius ? moveLength : circleRadius);\n    }\n\n    return moveLength;\n  };\n  /**\n   * Method to calculate zoom factor and position\n   *\n   * @param currentX\n   * @param currentWidth\n   */\n\n\n  ScrollBar.prototype.setZoomFactorPosition = function (currentX, currentWidth, isRequire) {\n    if (isRequire === void 0) {\n      isRequire = true;\n    }\n\n    this.isScrollUI = true;\n    var axis = this.axis;\n    var circleRadius = 8;\n    var circleWidth = 1;\n    var currentScrollWidth = currentX + currentWidth + circleRadius + circleWidth;\n    var currentZPWidth = circleRadius + circleWidth / 2;\n    this.zoomPosition = (currentX - (currentX - currentZPWidth <= 0 ? currentZPWidth : 0)) / (this.isVertical ? axis.rect.height : this.width);\n    this.zoomFactor = (currentWidth + (currentScrollWidth >= this.width ? circleRadius + circleWidth : 0)) / (this.isVertical ? axis.rect.height : this.width);\n    axis.zoomPosition = this.zoomPosition < 0 ? 0 : this.zoomPosition > 0.9 ? 1 : this.zoomPosition;\n    axis.zoomFactor = isRequire ? this.zoomFactor : axis.zoomFactor;\n  };\n  /**\n   * Handles the mouse move on scrollbar\n   *\n   * @param e\n   */\n\n\n  ScrollBar.prototype.scrollMouseMove = function (e) {\n    var target = e.target;\n    var elem = this.scrollElements;\n    var isInverse = this.axis.isAxisInverse;\n\n    if (!getElement(this.svgObject.id)) {\n      return null;\n    }\n\n    this.getMouseXY(e);\n    this.setCursor(target);\n    this.setTheme(target); //let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n\n    var mouseXY = this.isVertical && isInverse ? this.width - this.mouseY : this.isVertical ? this.mouseY : this.mouseX;\n    var range = this.axis.visibleRange;\n    var zoomPosition = this.zoomPosition;\n    var zoomFactor = this.zoomFactor;\n    var moveLength = this.previousRectX - elem.thumbRectX;\n    var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n    var args;\n\n    if (this.isLazyLoad && (this.isThumbDrag || this.isResizeLeft || this.isResizeRight)) {\n      args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n    }\n\n    var currentRange = args ? args.currentRange : null;\n\n    if (this.isThumbDrag) {\n      this.component.isScrolling = this.isThumbDrag;\n      mouseXY = this.isVertical || isInverse ? this.width - mouseXY : mouseXY;\n      var currentX = elem.thumbRectX + (mouseXY - this.previousXY);\n\n      if (mouseXY >= currentX + elem.thumbRectWidth) {\n        this.setCursor(target);\n      } else {\n        this.svgObject.style.cursor = '-webkit-grabbing';\n      }\n\n      if (mouseXY >= 0 && mouseXY <= currentX + elem.thumbRectWidth) {\n        elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n        this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n        this.previousXY = mouseXY;\n        this.setZoomFactorPosition(currentX, elem.thumbRectWidth, false);\n      }\n\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n    } else if (this.isResizeLeft || this.isResizeRight) {\n      this.resizeThumb();\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n    }\n  };\n  /**\n   * Handles the mouse wheel on scrollbar\n   *\n   * @param e\n   */\n\n\n  ScrollBar.prototype.scrollMouseWheel = function (e) {\n    var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n    this.mouseX = e.clientX - Math.max(svgRect.left, 0);\n    this.mouseY = e.clientY - Math.max(svgRect.top, 0);\n    var origin = 0.5;\n    var elem = this.scrollElements;\n    var axis = this.axis;\n    var direction = this.browserName === 'mozilla' && !this.isPointer ? -e.detail / 3 > 0 ? 1 : -1 : e['wheelDelta'] / 120 > 0 ? 1 : -1;\n    var cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + 0.25 * direction, 1);\n    var range = this.axis.visibleRange;\n    var zoomPosition = this.zoomPosition;\n    var zoomFactor = this.zoomFactor;\n    var args;\n\n    if (cumulative >= 1) {\n      origin = axis.orientation === 'Horizontal' ? this.mouseX / axis.rect.width : 1 - this.mouseY / axis.rect.height;\n      origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n      this.zoomFactor = cumulative === 1 ? 1 : minMax(1 / cumulative, 0, 1);\n      this.zoomPosition = cumulative === 1 ? 0 : axis.zoomPosition + (axis.zoomFactor - this.zoomFactor) * origin;\n    }\n\n    elem.thumbRectX = this.isWithIn(this.zoomPosition * this.width) ? this.zoomPosition * this.width : elem.thumbRectX;\n    this.isScrollUI = true;\n    this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n\n    if (this.isLazyLoad) {\n      this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth);\n    }\n\n    axis.zoomFactor = this.zoomFactor;\n    axis.zoomPosition = this.zoomPosition;\n\n    if (this.isLazyLoad) {\n      args = this.calculateMouseWheelRange(elem.thumbRectX, elem.thumbRectWidth);\n\n      if (args) {\n        if (args.currentRange.minimum !== args.previousAxisRange.minimum && args.currentRange.maximum !== args.previousAxisRange.maximum) {\n          this.component.trigger(scrollEnd, args);\n          this.isScrollEnd = false;\n        }\n      }\n    }\n\n    if (!this.isLazyLoad) {\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor));\n    }\n  };\n  /**\n   * Handles the mouse up on scrollbar\n   *\n   * @param e\n   */\n\n\n  ScrollBar.prototype.scrollMouseUp = function () {\n    var args;\n    this.startX = this.scrollElements.thumbRectX;\n    var circleRadius = 8;\n    var circleWidth = 1;\n    var currentScrollWidth = this.startX + this.scrollElements.thumbRectWidth + circleRadius + circleWidth;\n    var currentZPWidth = circleRadius + circleWidth / 2;\n\n    if ((this.isResizeLeft || this.isResizeRight) && !this.isLazyLoad) {\n      this.axis.zoomFactor = currentScrollWidth >= this.width - 1 && this.startX - currentZPWidth <= 0 ? 1 : this.zoomFactor;\n    }\n\n    if (this.isLazyLoad) {\n      var moveLength = this.previousRectX - this.startX;\n\n      if ((moveLength > 0 || moveLength < 0) && this.isThumbDrag) {\n        var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n\n        if (thumbMove === 'RightMove') {\n          this.startX = this.startX + Math.abs(moveLength) < this.width - circleRadius ? this.startX : this.width - circleRadius - this.scrollElements.thumbRectWidth;\n        } else {\n          this.startX = this.startX + this.scrollElements.thumbRectWidth - Math.abs(moveLength) > circleRadius ? this.startX : circleRadius;\n        }\n\n        args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth, thumbMove);\n\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n          this.scrollStarted = false;\n        }\n      }\n\n      if (this.isResizeLeft || this.isResizeRight) {\n        args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth);\n\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n          this.scrollStarted = false;\n        }\n      }\n    }\n\n    this.isThumbDrag = false;\n    this.isResizeLeft = false;\n    this.isResizeRight = false;\n    this.isScrollEnd = false;\n    this.component.isScrolling = false;\n\n    if (this.scrollStarted && !this.isLazyLoad) {\n      this.component.trigger(scrollEnd, this.getArgs(scrollChanged, this.startRange, this.startZoomPosition, this.startZoomFactor));\n      this.scrollStarted = false;\n    }\n    /**\n     * Customer issue\n     * Task ID - EJ2-28898\n     * Chart's height setted is removed here.\n     */\n\n\n    if (this.isCustomHeight) {\n      this.component.element.style.height = null;\n    }\n  };\n\n  ScrollBar.prototype.calculateMouseWheelRange = function (scrollThumbX, scrollThumbWidth) {\n    var zoomFactor;\n    var zoomPosition;\n    var args;\n    var range = this.scrollRange;\n    var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n    var circleRadius = 8;\n\n    if (scrollThumbX + scrollThumbWidth + circleRadius <= this.width) {\n      zoomPosition = (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = scrollThumbWidth / this.width;\n    }\n\n    var currentStart = range.min + zoomPosition * range.delta;\n    var currentEnd = currentStart + zoomFactor * range.delta;\n\n    if (currentEnd) {\n      args = {\n        axis: this.axis,\n        currentRange: this.getStartEnd(currentStart, currentEnd, true),\n        previousAxisRange: previousRange\n      };\n    }\n\n    return args;\n  };\n  /**\n   * Range calculation for lazy loading\n   *\n   * @param scrollThumbX\n   * @param scrollThumbWidth\n   * @param thumbMove\n   * @param scrollThumbX\n   * @param scrollThumbWidth\n   * @param thumbMove\n   * @param scrollThumbX\n   * @param scrollThumbWidth\n   * @param thumbMove\n   */\n\n\n  ScrollBar.prototype.calculateLazyRange = function (scrollThumbX, scrollThumbWidth, thumbMove) {\n    var currentScrollWidth = scrollThumbWidth;\n    var zoomFactor;\n    var zoomPosition;\n    var currentStart;\n    var currentEnd;\n    var args;\n    var range = this.scrollRange;\n    var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n    var circleRadius = 8;\n    var circleWidth = 16;\n\n    if (this.isResizeRight || thumbMove === 'RightMove') {\n      currentScrollWidth = this.isResizeRight ? currentScrollWidth + circleWidth : currentScrollWidth;\n      zoomFactor = (currentScrollWidth + circleRadius) / this.width;\n      zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : this.axis.zoomPosition;\n      currentStart = thumbMove === 'RightMove' ? range.min + zoomPosition * range.delta : this.previousStart;\n      currentEnd = currentStart + zoomFactor * range.delta;\n    } else if (this.isResizeLeft || thumbMove === 'LeftMove') {\n      zoomPosition = (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = currentScrollWidth / this.width;\n      currentStart = range.min + zoomPosition * range.delta;\n      currentStart = currentStart >= range.min ? currentStart : range.min;\n      currentEnd = thumbMove === 'LeftMove' ? currentStart + zoomFactor * range.delta : this.previousEnd;\n    } else if (this.isThumbDrag) {\n      zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = this.scrollElements.thumbRectWidth / this.width;\n      currentStart = range.min + zoomPosition * range.delta;\n      currentStart = currentStart >= range.min ? currentStart : range.min;\n      currentEnd = currentStart + zoomFactor * range.delta;\n    }\n\n    if (currentEnd) {\n      args = {\n        axis: this.component.isBlazor ? {} : this.axis,\n        currentRange: this.getStartEnd(currentStart, currentEnd, true),\n        previousAxisRange: previousRange\n      };\n    }\n\n    return args;\n  };\n  /**\n   * Get start and end values\n   *\n   * @param start\n   * @param end\n   * @param isCurrentStartEnd\n   * @param start\n   * @param end\n   * @param isCurrentStartEnd\n   * @param start\n   * @param end\n   * @param isCurrentStartEnd\n   */\n\n\n  ScrollBar.prototype.getStartEnd = function (start, end, isCurrentStartEnd) {\n    var valueType = this.valueType;\n\n    if ((valueType === 'DateTime' || valueType === 'DateTimeCategory') && isCurrentStartEnd) {\n      this.previousStart = start;\n      this.previousEnd = end;\n    } else if (isCurrentStartEnd) {\n      this.previousStart = Math.round(start);\n      this.previousEnd = Math.ceil(end);\n    }\n\n    switch (valueType) {\n      case 'Double':\n      case 'Category':\n      case 'Logarithmic':\n        start = Math.round(start);\n        end = Math.ceil(end);\n        break;\n\n      case 'DateTime':\n      case 'DateTimeCategory':\n        start = new Date(start);\n        end = new Date(end);\n        break;\n    }\n\n    return {\n      minimum: start,\n      maximum: end\n    };\n  };\n  /**\n   * To render scroll bar\n   *\n   * @param isScrollExist\n   * @private\n   */\n\n\n  ScrollBar.prototype.render = function (isScrollExist) {\n    if (this.component.zoomModule || isScrollExist && this.axis.scrollbarSettings.enable) {\n      this.getDefaults();\n    }\n\n    this.getTheme();\n    this.removeScrollSvg();\n    createScrollSvg(this, this.component.svgRenderer);\n    this.wireEvents(this.svgObject);\n    this.svgObject.appendChild(this.scrollElements.renderElements(this, this.component.svgRenderer));\n    return this.svgObject;\n  };\n  /**\n   * Theming for scrollabr\n   *\n   * @returns {void}\n   */\n\n\n  ScrollBar.prototype.getTheme = function () {\n    this.scrollbarThemeStyle = getScrollbarThemeColor(this.component.theme);\n  };\n  /**\n   * Method to remove existing scrollbar\n   *\n   * @returns {void}\n   */\n\n\n  ScrollBar.prototype.removeScrollSvg = function () {\n    if (document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name)) {\n      remove(document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name));\n    }\n  };\n  /**\n   * Method to set cursor fpr scrollbar\n   *\n   * @param target\n   */\n\n\n  ScrollBar.prototype.setCursor = function (target) {\n    var id = target.id;\n    this.svgObject.style.cursor = id.indexOf('scrollBarThumb_') > -1 || id.indexOf('_gripCircle') > -1 ? '-webkit-grab' : id.indexOf('Circle_') > -1 || id.indexOf('Arrow_') > -1 ? this.isVertical ? 'ns-resize' : 'ew-resize' : 'auto';\n  };\n  /**\n   * Method to set theme for sollbar\n   *\n   * @param target\n   */\n\n\n  ScrollBar.prototype.setTheme = function (target) {\n    var id = target.id;\n    var isLeftHover = id.indexOf('_leftCircle_') > -1 || id.indexOf('_leftArrow_') > -1;\n    var isRightHover = id.indexOf('_rightCircle_') > -1 || id.indexOf('_rightArrow_') > -1;\n    var style = this.scrollbarThemeStyle;\n    var leftArrowEle = this.scrollElements.leftArrowEle;\n    var rightArrowEle = this.scrollElements.rightArrowEle;\n    var leftCircleEle = this.scrollElements.leftCircleEle;\n    var rightCircleEle = this.scrollElements.rightCircleEle;\n    var isAxis = this.isCurrentAxis(target, leftArrowEle);\n    leftCircleEle.style.fill = isLeftHover && isAxis ? style.circleHover : style.circle;\n    rightCircleEle.style.fill = isRightHover && isAxis ? style.circleHover : style.circle;\n    leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n    rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n\n    if (this.component.theme === 'HighContrastLight') {\n      leftArrowEle.style.fill = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n      leftArrowEle.style.stroke = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n      rightArrowEle.style.fill = isRightHover && isAxis ? style.arrowHover : style.arrow;\n      rightArrowEle.style.stroke = isRightHover && isAxis ? style.arrowHover : style.arrow;\n      leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n      rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n    }\n  };\n  /**\n   * To check current axis\n   *\n   * @param target\n   * @param ele\n   */\n\n\n  ScrollBar.prototype.isCurrentAxis = function (target, ele) {\n    return target.id.split('_')[2] === ele.id.split('_')[2];\n  };\n  /**\n   * Method to resize thumb\n   *\n   * @param e\n   */\n\n\n  ScrollBar.prototype.resizeThumb = function () {\n    var currentWidth;\n    var circleRadius = 8;\n    var padding = 5;\n    var gripWidth = 14;\n    var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n    var thumbX = this.previousRectX;\n    var isInverse = this.axis.isAxisInverse; // let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n\n    var mouseXY = this.isVertical && isInverse ? this.mouseY : this.isVertical ? this.width - this.mouseY : isInverse ? this.width - this.mouseX : this.mouseX;\n    var diff = Math.abs(this.previousXY - mouseXY);\n\n    if (this.isResizeLeft && mouseXY >= 0) {\n      var currentX = thumbX + (mouseXY > this.previousXY ? diff : -diff);\n      currentWidth = currentX - circleRadius >= 0 ? this.previousWidth + (mouseXY > this.previousXY ? -diff : diff) : this.previousWidth;\n      currentX = currentX - circleRadius >= 0 ? currentX : thumbX;\n\n      if (currentWidth >= minThumbWidth && mouseXY < currentX + currentWidth) {\n        this.scrollElements.thumbRectX = this.previousRectX = currentX;\n        this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n        this.previousXY = mouseXY;\n        this.positionThumb(currentX, currentWidth);\n        this.setZoomFactorPosition(currentX, currentWidth);\n      }\n    } else if (this.isResizeRight) {\n      currentWidth = mouseXY >= minThumbWidth + this.scrollElements.thumbRectX && mouseXY <= this.width - circleRadius ? mouseXY - this.scrollElements.thumbRectX : this.previousWidth;\n      this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n      this.previousXY = mouseXY;\n      this.positionThumb(this.startX, currentWidth);\n      this.setZoomFactorPosition(this.startX, currentWidth);\n\n      if (!this.isLazyLoad) {\n        this.setZoomFactorPosition(this.startX, currentWidth);\n      }\n    }\n  };\n  /**\n   * Method to position the scrollbar thumb\n   *\n   * @param currentX\n   * @param currentWidth\n   */\n\n\n  ScrollBar.prototype.positionThumb = function (currentX, currentWidth) {\n    var elem = this.scrollElements;\n    var gripWidth = 14;\n    var gripCircleDiameter = 2;\n    var padding = gripWidth / 2 - gripCircleDiameter;\n    elem.slider.setAttribute('x', currentX.toString());\n    elem.slider.setAttribute('width', currentWidth.toString());\n    elem.leftCircleEle.setAttribute('cx', currentX.toString());\n    elem.rightCircleEle.setAttribute('cx', (currentX + currentWidth).toString());\n    elem.setArrowDirection(currentX, currentWidth, this.height);\n    elem.gripCircle.setAttribute('transform', 'translate(' + (currentX + currentWidth / 2 + (this.isVertical ? 1 : -1) * padding) + ',' + (this.isVertical ? '10' : '5') + ') rotate(' + (this.isVertical ? '180' : '0') + ')');\n  };\n  /**\n   * Method to get default values\n   *\n   * @returns {void}\n   */\n\n\n  ScrollBar.prototype.getDefaults = function () {\n    var axis = this.axis;\n    var circleRadius = 8;\n    var padding = 5;\n    var gripWidth = 14;\n    var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n\n    if (this.axis.scrollbarSettings.enable) {\n      this.isLazyLoad = true;\n      this.getLazyDefaults(axis);\n    }\n\n    this.isVertical = axis.orientation === 'Vertical';\n    this.zoomFactor = this.isLazyLoad ? this.zoomFactor : axis.zoomFactor;\n    this.zoomPosition = this.isLazyLoad ? this.zoomPosition : axis.zoomPosition;\n    var currentWidth = this.zoomFactor * (this.isVertical ? axis.rect.height : axis.rect.width);\n    currentWidth = currentWidth > minThumbWidth ? currentWidth : minThumbWidth;\n    this.scrollX = axis.rect.x;\n    this.scrollY = axis.rect.y;\n    this.width = this.isVertical ? axis.rect.height : axis.rect.width;\n    this.height = 16;\n    var currentX = this.zoomPosition * (this.isVertical ? axis.rect.height : this.width);\n    var minThumbX = this.width - minThumbWidth - circleRadius;\n    this.scrollElements.thumbRectX = currentX > minThumbX ? minThumbX : currentX < circleRadius ? circleRadius : currentX;\n    this.scrollElements.thumbRectWidth = currentWidth + this.scrollElements.thumbRectX < this.width - circleRadius * 2 ? currentWidth : this.width - this.scrollElements.thumbRectX - circleRadius;\n  };\n  /**\n   * Lazy load default values\n   *\n   * @param axis\n   */\n\n\n  ScrollBar.prototype.getLazyDefaults = function (axis) {\n    var start;\n    var end;\n    var valueType = axis.valueType;\n    var scrollbarSettings = axis.scrollbarSettings;\n    var range = axis.scrollbarSettings.range;\n    var visibleRange = axis.visibleRange;\n    var pointsLength = axis.scrollbarSettings.pointsLength;\n    this.valueType = valueType = (!scrollbarSettings.range.minimum || !scrollbarSettings.range.maximum) && scrollbarSettings.pointsLength ? 'Double' : valueType;\n    var option = {\n      skeleton: 'full',\n      type: 'dateTime'\n    };\n    var dateParser = this.component.intl.getDateParser(option);\n    var dateFormatter = this.component.intl.getDateFormat(option);\n\n    switch (valueType) {\n      case 'Double':\n      case 'Category':\n      case 'Logarithmic':\n        start = range.minimum ? range.minimum : pointsLength ? 0 : visibleRange.min;\n        end = range.maximum ? range.maximum : pointsLength ? pointsLength - 1 : visibleRange.max;\n        break;\n\n      case 'DateTime':\n      case 'DateTimeCategory':\n        start = range.minimum ? Date.parse(dateParser(dateFormatter(range.minimum))) : visibleRange.min;\n        end = range.maximum ? Date.parse(dateParser(dateFormatter(range.maximum))) : visibleRange.max;\n        break;\n    }\n\n    start = Math.min(start, visibleRange.min);\n    end = Math.max(end, visibleRange.max);\n    var zoomFactor = (visibleRange.max - visibleRange.min) / (end - start);\n    var zoomPosition = (visibleRange.min - start) / (end - start);\n    this.zoomFactor = range.minimum || range.maximum ? zoomFactor : this.axis.maxPointLength / axis.scrollbarSettings.pointsLength;\n    this.zoomPosition = range.minimum || range.maximum ? zoomPosition : axis.zoomPosition;\n    this.scrollRange.min = start;\n    this.scrollRange.max = end;\n    this.scrollRange.delta = end - start;\n    this.previousStart = visibleRange.min;\n    this.previousEnd = visibleRange.max;\n  };\n  /**\n   * Method to get log range\n   *\n   * @param axis\n   */\n\n\n  ScrollBar.prototype.getLogRange = function (axis) {\n    var range = axis.scrollbarSettings.range;\n    var start = logBase(range.minimum, axis.logBase);\n    var end = logBase(range.maximum, axis.logBase);\n    start = isFinite(start) ? start : range.minimum;\n    end = isFinite(start) ? end : range.maximum;\n    return {\n      minimum: Math.floor(start / 1),\n      maximum: Math.ceil(end / 1)\n    };\n  };\n  /**\n   * Method for injecting scrollbar module\n   *\n   * @param axis\n   * @param component\n   */\n\n\n  ScrollBar.prototype.injectTo = function (axis, component) {\n    axis.zoomingScrollBar = new ScrollBar(component, axis);\n  };\n  /**\n   * Method to destroy scrollbar\n   *\n   * @returns {void}\n   */\n\n\n  ScrollBar.prototype.destroy = function () {\n    var _this = this;\n\n    if (this.axes) {\n      this.axes.map(function (axis) {\n        axis.zoomingScrollBar.destroy();\n      });\n    } else {\n      this.elements.map(function (element) {\n        _this.unWireEvents(element);\n\n        remove(element.firstChild);\n      });\n      this.elements = [];\n    }\n  };\n  /**\n   * Method to get scrollbar module name\n   *\n   * @returns {string}\n   */\n\n\n  ScrollBar.prototype.getModuleName = function () {\n    return 'ScrollBar';\n  };\n\n  ScrollBar.prototype.getArgs = function (eventName, range, zoomPosition, zoomFactor, currentRanges) {\n    var scrollArgs = {\n      axis: this.component.isBlazor ? {} : this.axis,\n      name: eventName,\n      range: this.axis.visibleRange,\n      zoomFactor: this.axis.zoomFactor,\n      zoomPosition: this.axis.zoomPosition,\n      previousRange: range,\n      previousZoomFactor: zoomFactor,\n      previousZoomPosition: zoomPosition,\n      currentRange: currentRanges\n    };\n    return scrollArgs;\n  };\n\n  return ScrollBar;\n}();\n\nexport { ScrollBar };","map":{"version":3,"names":["EventHandler","Browser","remove","ScrollElements","createScrollSvg","getElement","minMax","logBase","getScrollbarThemeColor","scrollChanged","scrollEnd","scrollStart","ScrollBar","component","axis","scrollRange","max","min","interval","delta","elements","scrollElements","mouseMoveListener","scrollMouseMove","bind","mouseUpListener","scrollMouseUp","animateDuration","isPointer","browserName","info","name","prototype","getMouseXY","e","pageX","pageY","touchArg","type","indexOf","changedTouches","clientX","clientY","svgRect","element","id","getBoundingClientRect","mouseX","Math","left","mouseY","top","wireEvents","add","touchStartEvent","scrollMouseDown","touchMoveEvent","touchEndEvent","scrollMouseWheel","window","addEventListener","unWireEvents","removeEventListener","target","elem","isInverse","isAxisInverse","isResizeLeft","isExist","isResizeRight","previousXY","isVertical","width","previousWidth","thumbRectWidth","previousRectX","thumbRectX","startZoomPosition","zoomPosition","startZoomFactor","zoomFactor","startRange","visibleRange","scrollStarted","trigger","getArgs","isThumbDrag","svgObject","style","cursor","currentX","moveLength","isWithIn","positionThumb","setZoomFactorPosition","isLazyLoad","thumbMove","args","calculateLazyRange","height","isCustomHeight","availableSize","match","circleRadius","mouseXY","thumbX","currentWidth","isRequire","isScrollUI","circleWidth","currentScrollWidth","currentZPWidth","rect","setCursor","setTheme","range","currentRange","isScrolling","resizeThumb","origin","direction","detail","cumulative","orientation","calculateMouseWheelRange","minimum","previousAxisRange","maximum","isScrollEnd","startX","abs","scrollThumbX","scrollThumbWidth","previousRange","getStartEnd","previousStart","previousEnd","currentStart","currentEnd","isBlazor","start","end","isCurrentStartEnd","valueType","round","ceil","Date","render","isScrollExist","zoomModule","scrollbarSettings","enable","getDefaults","getTheme","removeScrollSvg","svgRenderer","appendChild","renderElements","scrollbarThemeStyle","theme","document","getElementById","isLeftHover","isRightHover","leftArrowEle","rightArrowEle","leftCircleEle","rightCircleEle","isAxis","isCurrentAxis","fill","circleHover","circle","stroke","arrowHover","arrow","ele","split","padding","gripWidth","minThumbWidth","diff","gripCircleDiameter","slider","setAttribute","toString","setArrowDirection","gripCircle","getLazyDefaults","scrollX","x","scrollY","y","minThumbX","pointsLength","option","skeleton","dateParser","intl","getDateParser","dateFormatter","getDateFormat","parse","maxPointLength","getLogRange","isFinite","floor","injectTo","zoomingScrollBar","destroy","_this","axes","map","firstChild","getModuleName","eventName","currentRanges","scrollArgs","previousZoomFactor","previousZoomPosition"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin-Dashboard/frontend/node_modules/@syncfusion/ej2-charts/src/common/scrollbar/scrollbar.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { ScrollElements, createScrollSvg } from './scrollbar-elements';\nimport { getElement, minMax, logBase } from '../utils/helper';\nimport { getScrollbarThemeColor } from '../model/theme';\nimport { scrollChanged, scrollEnd, scrollStart } from '../model/constants';\n/**\n * Scrollbar Base\n */\nvar ScrollBar = /** @class */ (function () {\n    /**\n     * Constructor for creating scrollbar\n     *\n     * @param component\n     * @param axis\n     */\n    function ScrollBar(component, axis) {\n        /** @private */\n        this.scrollRange = { max: null, min: null, interval: null, delta: null };\n        this.component = component;\n        this.elements = [];\n        this.scrollElements = new ScrollElements(component);\n        this.axis = axis;\n        this.mouseMoveListener = this.scrollMouseMove.bind(this);\n        this.mouseUpListener = this.scrollMouseUp.bind(this);\n        this.animateDuration = 500;\n        this.isPointer = Browser.isPointer;\n        this.browserName = Browser.info.name;\n    }\n    /**\n     * To Mouse x and y position\n     *\n     * @param e\n     */\n    ScrollBar.prototype.getMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var touchArg;\n        if (e.type.indexOf('touch') > -1) {\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n        this.mouseX = pageX - Math.max(svgRect.left, 0);\n        this.mouseY = pageY - Math.max(svgRect.top, 0);\n    };\n    /**\n     * Method to bind events for scrollbar svg object\n     *\n     * @param element\n     * @returns {void}\n     */\n    ScrollBar.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.scrollMouseDown, this);\n        EventHandler.add(element, Browser.touchMoveEvent, this.scrollMouseMove, this);\n        EventHandler.add(element, Browser.touchEndEvent, this.scrollMouseUp, this);\n        EventHandler.add(element, 'mousewheel', this.scrollMouseWheel, this);\n        window.addEventListener('mousemove', this.mouseMoveListener, false);\n        window.addEventListener('mouseup', this.mouseUpListener, false);\n    };\n    /**\n     * Method to remove events for srcollbar svg object\n     *\n     * @param element\n     */\n    ScrollBar.prototype.unWireEvents = function (element) {\n        EventHandler.remove(element, Browser.touchStartEvent, this.scrollMouseDown);\n        EventHandler.remove(element, Browser.touchMoveEvent, this.scrollMouseMove);\n        EventHandler.remove(element, Browser.touchEndEvent, this.scrollMouseUp);\n        EventHandler.remove(element, 'mousewheel', this.scrollMouseWheel);\n        window.removeEventListener('mousemove', this.mouseMoveListener, false);\n        window.removeEventListener('mouseup', this.mouseUpListener, false);\n    };\n    /**\n     * Handles the mouse down on scrollbar\n     *\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseDown = function (e) {\n        var id = e.target.id;\n        var elem = this.scrollElements;\n        var isInverse = this.axis.isAxisInverse;\n        this.getMouseXY(e);\n        this.isResizeLeft = this.isExist(id, '_leftCircle_') || this.isExist(id, '_leftArrow_');\n        this.isResizeRight = this.isExist(id, '_rightCircle_') || this.isExist(id, '_rightArrow_');\n        //  this.previousXY = this.isVertical ? this.mouseY : this.mouseX;\n        this.previousXY = (this.isVertical && isInverse) ? this.mouseY : this.isVertical ? this.width -\n            this.mouseY : isInverse ? this.width - this.mouseX : this.mouseX;\n        this.previousWidth = elem.thumbRectWidth;\n        this.previousRectX = elem.thumbRectX;\n        this.startZoomPosition = this.axis.zoomPosition;\n        this.startZoomFactor = this.axis.zoomFactor;\n        this.startRange = this.axis.visibleRange;\n        this.scrollStarted = true;\n        this.component.trigger(scrollStart, this.getArgs(scrollStart));\n        if (this.isExist(id, 'scrollBarThumb_') || this.isExist(id, 'gripCircle')) {\n            this.isThumbDrag = true;\n            this.svgObject.style.cursor = '-webkit-grabbing';\n        }\n        else if (this.isExist(id, 'scrollBarBackRect_')) {\n            var currentX = this.moveLength(this.previousXY, this.previousRectX);\n            elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n            this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n            this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth, false);\n            if (this.isLazyLoad) {\n                var thumbMove = elem.thumbRectX > this.previousRectX ? 'RightMove' : 'LeftMove';\n                var args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                }\n            }\n        }\n        /**\n         * Customer issue\n         * Task ID - EJ2-28898\n         * Issue: While element's height is smaller than chart'height, html scroll bar presents. On that case while moving chart scrollbar,\n         * html scrollbar goes up due to chart's svg removed from the dom when zoomFactor and zoomPosition chnaged\n         * Fix: Only for scrolling purpose, height for element is set to chart's available height\n         */\n        if (this.component.element.style.height === '') {\n            this.isCustomHeight = true;\n            this.component.element.style.height = this.component.availableSize.height + 'px';\n        }\n    };\n    /**\n     * To check the matched string\n     *\n     * @param id\n     * @param match\n     */\n    ScrollBar.prototype.isExist = function (id, match) {\n        return id.indexOf(match) > -1;\n    };\n    /**\n     * To check current poisition is within scrollbar region\n     *\n     * @param currentX\n     */\n    ScrollBar.prototype.isWithIn = function (currentX) {\n        var circleRadius = 8;\n        return (currentX - circleRadius >= 0 &&\n            currentX + this.scrollElements.thumbRectWidth + circleRadius <= this.width);\n    };\n    /**\n     * Method to find move length of thumb\n     *\n     * @param mouseXY\n     * @param thumbX\n     * @param circleRadius\n     */\n    ScrollBar.prototype.moveLength = function (mouseXY, thumbX, circleRadius) {\n        if (circleRadius === void 0) { circleRadius = 8; }\n        var moveLength = (10 / 100) * (this.width - circleRadius * 2);\n        if (mouseXY < thumbX) {\n            moveLength = thumbX - (thumbX - moveLength > circleRadius ? moveLength : circleRadius);\n        }\n        else {\n            moveLength = thumbX + (thumbX + this.scrollElements.thumbRectWidth + moveLength < this.width - circleRadius ?\n                moveLength : circleRadius);\n        }\n        return moveLength;\n    };\n    /**\n     * Method to calculate zoom factor and position\n     *\n     * @param currentX\n     * @param currentWidth\n     */\n    ScrollBar.prototype.setZoomFactorPosition = function (currentX, currentWidth, isRequire) {\n        if (isRequire === void 0) { isRequire = true; }\n        this.isScrollUI = true;\n        var axis = this.axis;\n        var circleRadius = 8;\n        var circleWidth = 1;\n        var currentScrollWidth = currentX + currentWidth + circleRadius + circleWidth;\n        var currentZPWidth = circleRadius + (circleWidth / 2);\n        this.zoomPosition = (currentX - (currentX - currentZPWidth <= 0 ? currentZPWidth : 0)) / (this.isVertical\n            ? axis.rect.height : this.width);\n        this.zoomFactor = (currentWidth + (currentScrollWidth >= this.width ? circleRadius + circleWidth : 0)) / (this.isVertical\n            ? axis.rect.height : this.width);\n        axis.zoomPosition = this.zoomPosition < 0 ? 0 : this.zoomPosition > 0.9 ? 1 : this.zoomPosition;\n        axis.zoomFactor = isRequire ? this.zoomFactor : axis.zoomFactor;\n    };\n    /**\n     * Handles the mouse move on scrollbar\n     *\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseMove = function (e) {\n        var target = e.target;\n        var elem = this.scrollElements;\n        var isInverse = this.axis.isAxisInverse;\n        if (!getElement(this.svgObject.id)) {\n            return null;\n        }\n        this.getMouseXY(e);\n        this.setCursor(target);\n        this.setTheme(target);\n        //let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n        var mouseXY = (this.isVertical && isInverse) ? this.width - this.mouseY : this.isVertical ?\n            this.mouseY : this.mouseX;\n        var range = this.axis.visibleRange;\n        var zoomPosition = this.zoomPosition;\n        var zoomFactor = this.zoomFactor;\n        var moveLength = this.previousRectX - elem.thumbRectX;\n        var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n        var args;\n        if (this.isLazyLoad && (this.isThumbDrag || this.isResizeLeft || this.isResizeRight)) {\n            args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n        }\n        var currentRange = args ? args.currentRange : null;\n        if (this.isThumbDrag) {\n            this.component.isScrolling = this.isThumbDrag;\n            mouseXY = (this.isVertical || isInverse) ? this.width - mouseXY : mouseXY;\n            var currentX = elem.thumbRectX + (mouseXY - this.previousXY);\n            if (mouseXY >= currentX + elem.thumbRectWidth) {\n                this.setCursor(target);\n            }\n            else {\n                this.svgObject.style.cursor = '-webkit-grabbing';\n            }\n            if (mouseXY >= 0 && mouseXY <= currentX + elem.thumbRectWidth) {\n                elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n                this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n                this.previousXY = mouseXY;\n                this.setZoomFactorPosition(currentX, elem.thumbRectWidth, false);\n            }\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n        }\n        else if (this.isResizeLeft || this.isResizeRight) {\n            this.resizeThumb();\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n        }\n    };\n    /**\n     * Handles the mouse wheel on scrollbar\n     *\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseWheel = function (e) {\n        var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n        this.mouseX = e.clientX - Math.max(svgRect.left, 0);\n        this.mouseY = e.clientY - Math.max(svgRect.top, 0);\n        var origin = 0.5;\n        var elem = this.scrollElements;\n        var axis = this.axis;\n        var direction = (this.browserName === 'mozilla' && !this.isPointer) ?\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e['wheelDelta'] / 120) > 0 ? 1 : -1;\n        var cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\n        var range = this.axis.visibleRange;\n        var zoomPosition = this.zoomPosition;\n        var zoomFactor = this.zoomFactor;\n        var args;\n        if (cumulative >= 1) {\n            origin = axis.orientation === 'Horizontal' ? this.mouseX / axis.rect.width : 1 - (this.mouseY / axis.rect.height);\n            origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n            this.zoomFactor = (cumulative === 1) ? 1 : minMax(1 / cumulative, 0, 1);\n            this.zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - this.zoomFactor) * origin);\n        }\n        elem.thumbRectX = this.isWithIn(this.zoomPosition * this.width) ? this.zoomPosition * this.width : elem.thumbRectX;\n        this.isScrollUI = true;\n        this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n        if (this.isLazyLoad) {\n            this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth);\n        }\n        axis.zoomFactor = this.zoomFactor;\n        axis.zoomPosition = this.zoomPosition;\n        if (this.isLazyLoad) {\n            args = this.calculateMouseWheelRange(elem.thumbRectX, elem.thumbRectWidth);\n            if (args) {\n                if ((args.currentRange.minimum !== args.previousAxisRange.minimum) && (args.currentRange.maximum !==\n                    args.previousAxisRange.maximum)) {\n                    this.component.trigger(scrollEnd, args);\n                    this.isScrollEnd = false;\n                }\n            }\n        }\n        if (!this.isLazyLoad) {\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor));\n        }\n    };\n    /**\n     * Handles the mouse up on scrollbar\n     *\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseUp = function () {\n        var args;\n        this.startX = this.scrollElements.thumbRectX;\n        var circleRadius = 8;\n        var circleWidth = 1;\n        var currentScrollWidth = this.startX + this.scrollElements.thumbRectWidth + circleRadius + circleWidth;\n        var currentZPWidth = circleRadius + (circleWidth / 2);\n        if ((this.isResizeLeft || this.isResizeRight) && !this.isLazyLoad) {\n            this.axis.zoomFactor = (currentScrollWidth >= this.width - 1 && (this.startX - currentZPWidth) <= 0) ? 1 : this.zoomFactor;\n        }\n        if (this.isLazyLoad) {\n            var moveLength = this.previousRectX - this.startX;\n            if ((moveLength > 0 || moveLength < 0) && this.isThumbDrag) {\n                var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n                if (thumbMove === 'RightMove') {\n                    this.startX = (this.startX + Math.abs(moveLength)) < this.width - circleRadius ? this.startX :\n                        this.width - circleRadius - this.scrollElements.thumbRectWidth;\n                }\n                else {\n                    this.startX = (this.startX + this.scrollElements.thumbRectWidth - Math.abs(moveLength)) > circleRadius ?\n                        this.startX : circleRadius;\n                }\n                args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth, thumbMove);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                    this.scrollStarted = false;\n                }\n            }\n            if (this.isResizeLeft || this.isResizeRight) {\n                args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                    this.scrollStarted = false;\n                }\n            }\n        }\n        this.isThumbDrag = false;\n        this.isResizeLeft = false;\n        this.isResizeRight = false;\n        this.isScrollEnd = false;\n        this.component.isScrolling = false;\n        if (this.scrollStarted && !this.isLazyLoad) {\n            this.component.trigger(scrollEnd, this.getArgs(scrollChanged, this.startRange, this.startZoomPosition, this.startZoomFactor));\n            this.scrollStarted = false;\n        }\n        /**\n         * Customer issue\n         * Task ID - EJ2-28898\n         * Chart's height setted is removed here.\n         */\n        if (this.isCustomHeight) {\n            this.component.element.style.height = null;\n        }\n    };\n    ScrollBar.prototype.calculateMouseWheelRange = function (scrollThumbX, scrollThumbWidth) {\n        var zoomFactor;\n        var zoomPosition;\n        var args;\n        var range = this.scrollRange;\n        var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n        var circleRadius = 8;\n        if ((scrollThumbX + scrollThumbWidth + circleRadius) <= this.width) {\n            zoomPosition = (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = scrollThumbWidth / (this.width);\n        }\n        var currentStart = range.min + zoomPosition * range.delta;\n        var currentEnd = currentStart + zoomFactor * range.delta;\n        if (currentEnd) {\n            args = { axis: this.axis, currentRange: this.getStartEnd(currentStart, currentEnd, true), previousAxisRange: previousRange };\n        }\n        return args;\n    };\n    /**\n     * Range calculation for lazy loading\n     *\n     * @param scrollThumbX\n     * @param scrollThumbWidth\n     * @param thumbMove\n     * @param scrollThumbX\n     * @param scrollThumbWidth\n     * @param thumbMove\n     * @param scrollThumbX\n     * @param scrollThumbWidth\n     * @param thumbMove\n     */\n    ScrollBar.prototype.calculateLazyRange = function (scrollThumbX, scrollThumbWidth, thumbMove) {\n        var currentScrollWidth = scrollThumbWidth;\n        var zoomFactor;\n        var zoomPosition;\n        var currentStart;\n        var currentEnd;\n        var args;\n        var range = this.scrollRange;\n        var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n        var circleRadius = 8;\n        var circleWidth = 16;\n        if (this.isResizeRight || thumbMove === 'RightMove') {\n            currentScrollWidth = this.isResizeRight ? currentScrollWidth + circleWidth : currentScrollWidth;\n            zoomFactor = (currentScrollWidth + circleRadius) / this.width;\n            zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : this.axis.zoomPosition;\n            currentStart = thumbMove === 'RightMove' ? (range.min + zoomPosition * range.delta) : this.previousStart;\n            currentEnd = currentStart + zoomFactor * range.delta;\n        }\n        else if (this.isResizeLeft || thumbMove === 'LeftMove') {\n            zoomPosition = (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = currentScrollWidth / this.width;\n            currentStart = range.min + zoomPosition * range.delta;\n            currentStart = currentStart >= range.min ? currentStart : range.min;\n            currentEnd = thumbMove === 'LeftMove' ? (currentStart + zoomFactor * range.delta) : this.previousEnd;\n        }\n        else if (this.isThumbDrag) {\n            zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = (this.scrollElements.thumbRectWidth) / this.width;\n            currentStart = range.min + zoomPosition * range.delta;\n            currentStart = currentStart >= range.min ? currentStart : range.min;\n            currentEnd = currentStart + zoomFactor * range.delta;\n        }\n        if (currentEnd) {\n            args = { axis: (this.component.isBlazor ? {} : this.axis), currentRange: this.getStartEnd(currentStart, currentEnd, true),\n                previousAxisRange: previousRange };\n        }\n        return args;\n    };\n    /**\n     * Get start and end values\n     *\n     * @param start\n     * @param end\n     * @param isCurrentStartEnd\n     * @param start\n     * @param end\n     * @param isCurrentStartEnd\n     * @param start\n     * @param end\n     * @param isCurrentStartEnd\n     */\n    ScrollBar.prototype.getStartEnd = function (start, end, isCurrentStartEnd) {\n        var valueType = this.valueType;\n        if ((valueType === 'DateTime' || valueType === 'DateTimeCategory') && isCurrentStartEnd) {\n            this.previousStart = start;\n            this.previousEnd = end;\n        }\n        else if (isCurrentStartEnd) {\n            this.previousStart = Math.round(start);\n            this.previousEnd = Math.ceil(end);\n        }\n        switch (valueType) {\n            case 'Double':\n            case 'Category':\n            case 'Logarithmic':\n                start = Math.round(start);\n                end = Math.ceil(end);\n                break;\n            case 'DateTime':\n            case 'DateTimeCategory':\n                start = new Date(start);\n                end = new Date(end);\n                break;\n        }\n        return { minimum: start, maximum: end };\n    };\n    /**\n     * To render scroll bar\n     *\n     * @param isScrollExist\n     * @private\n     */\n    ScrollBar.prototype.render = function (isScrollExist) {\n        if (this.component.zoomModule || (isScrollExist && this.axis.scrollbarSettings.enable)) {\n            this.getDefaults();\n        }\n        this.getTheme();\n        this.removeScrollSvg();\n        createScrollSvg(this, this.component.svgRenderer);\n        this.wireEvents(this.svgObject);\n        this.svgObject.appendChild(this.scrollElements.renderElements(this, this.component.svgRenderer));\n        return this.svgObject;\n    };\n    /**\n     * Theming for scrollabr\n     *\n     * @returns {void}\n     */\n    ScrollBar.prototype.getTheme = function () {\n        this.scrollbarThemeStyle = getScrollbarThemeColor(this.component.theme);\n    };\n    /**\n     * Method to remove existing scrollbar\n     *\n     * @returns {void}\n     */\n    ScrollBar.prototype.removeScrollSvg = function () {\n        if (document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name)) {\n            remove(document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name));\n        }\n    };\n    /**\n     * Method to set cursor fpr scrollbar\n     *\n     * @param target\n     */\n    ScrollBar.prototype.setCursor = function (target) {\n        var id = target.id;\n        this.svgObject.style.cursor = id.indexOf('scrollBarThumb_') > -1 || id.indexOf('_gripCircle') > -1 ?\n            '-webkit-grab' : (id.indexOf('Circle_') > -1 || id.indexOf('Arrow_') > -1) ? this.isVertical ? 'ns-resize' :\n            'ew-resize' : 'auto';\n    };\n    /**\n     * Method to set theme for sollbar\n     *\n     * @param target\n     */\n    ScrollBar.prototype.setTheme = function (target) {\n        var id = target.id;\n        var isLeftHover = id.indexOf('_leftCircle_') > -1 || id.indexOf('_leftArrow_') > -1;\n        var isRightHover = id.indexOf('_rightCircle_') > -1 || id.indexOf('_rightArrow_') > -1;\n        var style = this.scrollbarThemeStyle;\n        var leftArrowEle = this.scrollElements.leftArrowEle;\n        var rightArrowEle = this.scrollElements.rightArrowEle;\n        var leftCircleEle = this.scrollElements.leftCircleEle;\n        var rightCircleEle = this.scrollElements.rightCircleEle;\n        var isAxis = this.isCurrentAxis(target, leftArrowEle);\n        leftCircleEle.style.fill = isLeftHover && isAxis ? style.circleHover : style.circle;\n        rightCircleEle.style.fill = isRightHover && isAxis ? style.circleHover : style.circle;\n        leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n        rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n        if (this.component.theme === 'HighContrastLight') {\n            leftArrowEle.style.fill = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n            leftArrowEle.style.stroke = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n            rightArrowEle.style.fill = isRightHover && isAxis ? style.arrowHover : style.arrow;\n            rightArrowEle.style.stroke = isRightHover && isAxis ? style.arrowHover : style.arrow;\n            leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n            rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n        }\n    };\n    /**\n     * To check current axis\n     *\n     * @param target\n     * @param ele\n     */\n    ScrollBar.prototype.isCurrentAxis = function (target, ele) {\n        return (target.id.split('_')[2] === ele.id.split('_')[2]);\n    };\n    /**\n     * Method to resize thumb\n     *\n     * @param e\n     */\n    ScrollBar.prototype.resizeThumb = function () {\n        var currentWidth;\n        var circleRadius = 8;\n        var padding = 5;\n        var gripWidth = 14;\n        var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n        var thumbX = this.previousRectX;\n        var isInverse = this.axis.isAxisInverse;\n        // let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n        var mouseXY = (this.isVertical && isInverse) ? this.mouseY : this.isVertical ? this.width -\n            this.mouseY : isInverse ? this.width - this.mouseX : this.mouseX;\n        var diff = Math.abs(this.previousXY - mouseXY);\n        if (this.isResizeLeft && mouseXY >= 0) {\n            var currentX = thumbX + (mouseXY > this.previousXY ? diff : -diff);\n            currentWidth = currentX - circleRadius >= 0 ? this.previousWidth + (mouseXY > this.previousXY ? -diff : diff) :\n                this.previousWidth;\n            currentX = currentX - circleRadius >= 0 ? currentX : thumbX;\n            if (currentWidth >= minThumbWidth && mouseXY < currentX + currentWidth) {\n                this.scrollElements.thumbRectX = this.previousRectX = currentX;\n                this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n                this.previousXY = mouseXY;\n                this.positionThumb(currentX, currentWidth);\n                this.setZoomFactorPosition(currentX, currentWidth);\n            }\n        }\n        else if (this.isResizeRight) {\n            currentWidth = mouseXY >= minThumbWidth + this.scrollElements.thumbRectX && mouseXY <= this.width - circleRadius ?\n                mouseXY - this.scrollElements.thumbRectX : this.previousWidth;\n            this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n            this.previousXY = mouseXY;\n            this.positionThumb(this.startX, currentWidth);\n            this.setZoomFactorPosition(this.startX, currentWidth);\n            if (!this.isLazyLoad) {\n                this.setZoomFactorPosition(this.startX, currentWidth);\n            }\n        }\n    };\n    /**\n     * Method to position the scrollbar thumb\n     *\n     * @param currentX\n     * @param currentWidth\n     */\n    ScrollBar.prototype.positionThumb = function (currentX, currentWidth) {\n        var elem = this.scrollElements;\n        var gripWidth = 14;\n        var gripCircleDiameter = 2;\n        var padding = gripWidth / 2 - gripCircleDiameter;\n        elem.slider.setAttribute('x', currentX.toString());\n        elem.slider.setAttribute('width', currentWidth.toString());\n        elem.leftCircleEle.setAttribute('cx', currentX.toString());\n        elem.rightCircleEle.setAttribute('cx', (currentX + currentWidth).toString());\n        elem.setArrowDirection(currentX, currentWidth, this.height);\n        elem.gripCircle.setAttribute('transform', 'translate(' + (currentX + currentWidth / 2 + ((this.isVertical ? 1 : -1) * padding)) +\n            ',' + (this.isVertical ? '10' : '5') + ') rotate(' + (this.isVertical ? '180' : '0') + ')');\n    };\n    /**\n     * Method to get default values\n     *\n     * @returns {void}\n     */\n    ScrollBar.prototype.getDefaults = function () {\n        var axis = this.axis;\n        var circleRadius = 8;\n        var padding = 5;\n        var gripWidth = 14;\n        var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n        if (this.axis.scrollbarSettings.enable) {\n            this.isLazyLoad = true;\n            this.getLazyDefaults(axis);\n        }\n        this.isVertical = axis.orientation === 'Vertical';\n        this.zoomFactor = this.isLazyLoad ? this.zoomFactor : axis.zoomFactor;\n        this.zoomPosition = this.isLazyLoad ? this.zoomPosition : axis.zoomPosition;\n        var currentWidth = this.zoomFactor * (this.isVertical ? axis.rect.height : axis.rect.width);\n        currentWidth = currentWidth > minThumbWidth ? currentWidth : minThumbWidth;\n        this.scrollX = axis.rect.x;\n        this.scrollY = axis.rect.y;\n        this.width = this.isVertical ? axis.rect.height : axis.rect.width;\n        this.height = 16;\n        var currentX = this.zoomPosition * (this.isVertical ? axis.rect.height : this.width);\n        var minThumbX = (this.width - minThumbWidth - circleRadius);\n        this.scrollElements.thumbRectX = currentX > minThumbX ? minThumbX : currentX < circleRadius ? circleRadius : currentX;\n        this.scrollElements.thumbRectWidth = ((currentWidth + this.scrollElements.thumbRectX) < this.width - (circleRadius * 2))\n            ? currentWidth : this.width - this.scrollElements.thumbRectX - circleRadius;\n    };\n    /**\n     * Lazy load default values\n     *\n     * @param axis\n     */\n    ScrollBar.prototype.getLazyDefaults = function (axis) {\n        var start;\n        var end;\n        var valueType = axis.valueType;\n        var scrollbarSettings = axis.scrollbarSettings;\n        var range = axis.scrollbarSettings.range;\n        var visibleRange = axis.visibleRange;\n        var pointsLength = axis.scrollbarSettings.pointsLength;\n        this.valueType = valueType = (!scrollbarSettings.range.minimum || !scrollbarSettings.range.maximum) &&\n            scrollbarSettings.pointsLength ? 'Double' : valueType;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.component.intl.getDateParser(option);\n        var dateFormatter = this.component.intl.getDateFormat(option);\n        switch (valueType) {\n            case 'Double':\n            case 'Category':\n            case 'Logarithmic':\n                start = range.minimum ? range.minimum : pointsLength ? 0 : visibleRange.min;\n                end = range.maximum ? range.maximum : pointsLength ? (pointsLength - 1) : visibleRange.max;\n                break;\n            case 'DateTime':\n            case 'DateTimeCategory':\n                start = range.minimum ? Date.parse(dateParser(dateFormatter(range.minimum))) : visibleRange.min;\n                end = range.maximum ? Date.parse(dateParser(dateFormatter(range.maximum))) : visibleRange.max;\n                break;\n        }\n        start = Math.min(start, visibleRange.min);\n        end = Math.max(end, visibleRange.max);\n        var zoomFactor = (visibleRange.max - visibleRange.min) / (end - start);\n        var zoomPosition = (visibleRange.min - start) / (end - start);\n        this.zoomFactor = range.minimum || range.maximum ? zoomFactor : (this.axis.maxPointLength / axis.scrollbarSettings.pointsLength);\n        this.zoomPosition = range.minimum || range.maximum ? zoomPosition : axis.zoomPosition;\n        this.scrollRange.min = start;\n        this.scrollRange.max = end;\n        this.scrollRange.delta = end - start;\n        this.previousStart = visibleRange.min;\n        this.previousEnd = visibleRange.max;\n    };\n    /**\n     * Method to get log range\n     *\n     * @param axis\n     */\n    ScrollBar.prototype.getLogRange = function (axis) {\n        var range = axis.scrollbarSettings.range;\n        var start = logBase(range.minimum, axis.logBase);\n        var end = logBase(range.maximum, axis.logBase);\n        start = isFinite(start) ? start : range.minimum;\n        end = isFinite(start) ? end : range.maximum;\n        return { minimum: Math.floor(start / 1), maximum: Math.ceil(end / 1) };\n    };\n    /**\n     * Method for injecting scrollbar module\n     *\n     * @param axis\n     * @param component\n     */\n    ScrollBar.prototype.injectTo = function (axis, component) {\n        axis.zoomingScrollBar = new ScrollBar(component, axis);\n    };\n    /**\n     * Method to destroy scrollbar\n     *\n     * @returns {void}\n     */\n    ScrollBar.prototype.destroy = function () {\n        var _this = this;\n        if (this.axes) {\n            this.axes.map(function (axis) {\n                axis.zoomingScrollBar.destroy();\n            });\n        }\n        else {\n            this.elements.map(function (element) {\n                _this.unWireEvents(element);\n                remove(element.firstChild);\n            });\n            this.elements = [];\n        }\n    };\n    /**\n     * Method to get scrollbar module name\n     *\n     * @returns {string}\n     */\n    ScrollBar.prototype.getModuleName = function () {\n        return 'ScrollBar';\n    };\n    ScrollBar.prototype.getArgs = function (eventName, range, zoomPosition, zoomFactor, currentRanges) {\n        var scrollArgs = {\n            axis: (this.component.isBlazor ? {} : this.axis),\n            name: eventName,\n            range: this.axis.visibleRange,\n            zoomFactor: this.axis.zoomFactor,\n            zoomPosition: this.axis.zoomPosition,\n            previousRange: range,\n            previousZoomFactor: zoomFactor,\n            previousZoomPosition: zoomPosition,\n            currentRange: currentRanges\n        };\n        return scrollArgs;\n    };\n    return ScrollBar;\n}());\nexport { ScrollBar };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}