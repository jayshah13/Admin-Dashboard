{"ast":null,"code":"import { isNullOrUndefined as isNOU, detach, Browser } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\n/**\n * `EnterKey` module is used to handle enter key press actions.\n */\n\nvar EnterKeyAction =\n/** @class */\nfunction () {\n  function EnterKeyAction(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n\n  EnterKeyAction.prototype.addEventListener = function () {\n    this.parent.on(events.enterHandler, this.enterHandler, this);\n    this.parent.on(events.destroy, this.destroy, this);\n  };\n\n  EnterKeyAction.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  EnterKeyAction.prototype.removeEventListener = function () {\n    this.parent.off(events.enterHandler, this.enterHandler);\n    this.parent.off(events.destroy, this.destroy);\n  };\n\n  EnterKeyAction.prototype.getRangeNode = function () {\n    this.range = this.parent.getRange();\n    this.startNode = this.range.startContainer.nodeName === '#text' ? this.range.startContainer.parentElement : this.range.startContainer;\n    this.endNode = this.range.endContainer.nodeName === '#text' ? this.range.endContainer.parentElement : this.range.endContainer;\n  };\n\n  EnterKeyAction.prototype.enterHandler = function (e) {\n    var _this = this;\n\n    this.getRangeNode();\n    var isTableEnter = true;\n\n    if (!isNOU(this.startNode.closest('TABLE')) && !isNOU(this.endNode.closest('TABLE'))) {\n      isTableEnter = false;\n      var curElement = this.startNode;\n      var blockElement = curElement;\n\n      while (!this.parent.formatter.editorManager.domNode.isBlockNode(curElement)) {\n        blockElement = curElement;\n        curElement = curElement.parentElement;\n      }\n\n      isTableEnter = blockElement.tagName === 'TD' ? false : true;\n    }\n\n    if (e.args.which === 13 && e.args.code === 'Enter') {\n      if (isNOU(this.startNode.closest('LI')) && isNOU(this.endNode.closest('LI')) && isTableEnter && isNOU(this.startNode.closest('PRE')) && isNOU(this.endNode.closest('PRE'))) {\n        var shiftKey_1 = e.args.shiftKey;\n        var actionBeginArgs = {\n          cancel: false,\n          name: events.actionBegin,\n          requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n          originalEvent: e.args\n        };\n        this.parent.trigger(events.actionBegin, actionBeginArgs, function (actionBeginArgs) {\n          if (!actionBeginArgs.cancel) {\n            if (!(_this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.range.endContainer)) {\n              _this.range.deleteContents();\n\n              if (_this.range.startContainer.nodeName === '#text' && _this.range.startContainer.textContent.length === 0 && _this.range.startContainer.parentElement !== _this.parent.inputElement) {\n                if (_this.parent.enterKey === 'BR') {\n                  _this.range.startContainer.parentElement.innerHTML = '&#8203;';\n                } else {\n                  _this.range.startContainer.parentElement.innerHTML = '<br>';\n                }\n              } else if (_this.range.startContainer === _this.parent.inputElement && _this.range.startContainer.innerHTML === '') {\n                _this.range.startContainer.innerHTML = '<br>';\n                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, 0);\n              } else if (_this.parent.inputElement === _this.range.startContainer) {\n                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n\n                if (focusElem.nodeName === '#text' && focusElem.textContent.length === 0) {\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.previousSibling.textContent.length);\n                } else {\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.textContent.length >= 0 ? 0 : 1);\n\n                  if (focusElem.previousSibling.textContent.length === 0) {\n                    detach(focusElem.previousSibling);\n                  } else if (focusElem.textContent.length === 0) {\n                    var currentFocusElem = focusElem.previousSibling.lastChild;\n\n                    while (currentFocusElem.nodeName !== '#text') {\n                      currentFocusElem = currentFocusElem.lastChild;\n                    }\n\n                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, currentFocusElem.textContent.length);\n\n                    detach(focusElem);\n                  } else if (_this.parent.enterKey !== 'BR' && focusElem.previousSibling.textContent.length !== 0 && focusElem.textContent.length !== 0) {\n                    e.args.preventDefault();\n                    return;\n                  }\n                }\n\n                _this.getRangeNode();\n              }\n            }\n\n            if (_this.range.startContainer === _this.range.endContainer && _this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.parent.inputElement) {\n              _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.range.startContainer.childNodes[_this.range.startOffset], 0);\n\n              _this.getRangeNode();\n            }\n\n            if (_this.parent.enterKey === 'P' && !shiftKey_1 || _this.parent.enterKey === 'DIV' && !shiftKey_1 || _this.parent.shiftEnterKey === 'P' && shiftKey_1 || _this.parent.shiftEnterKey === 'DIV' && shiftKey_1) {\n              var nearBlockNode = void 0;\n\n              if (isTableEnter && _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                nearBlockNode = _this.startNode;\n              } else {\n                nearBlockNode = _this.parent.formatter.editorManager.domNode.blockParentNode(_this.startNode);\n              }\n\n              var isImageNode = false;\n              var isFocusedFirst = false;\n\n              if (_this.range.startOffset != 0 && _this.range.endOffset != 0 && _this.range.startContainer === _this.range.endContainer && !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                var startNodeText = _this.range.startContainer.textContent;\n                var splitFirstText = startNodeText.substring(0, _this.range.startOffset);\n\n                if (splitFirstText.charCodeAt(_this.range.startOffset - 1) != 160 && splitFirstText.trim().length === 0) {\n                  isFocusedFirst = true;\n                }\n              } else if (_this.range.startOffset === 0 && _this.range.endOffset === 0) {\n                isFocusedFirst = true;\n              }\n\n              _this.removeBRElement(nearBlockNode);\n\n              if ((_this.range.startOffset === 0 && _this.range.endOffset === 0 || isFocusedFirst) && !(!isNOU(_this.range.startContainer.previousSibling) && (_this.range.startContainer.previousSibling.nodeName === 'IMG' || _this.range.startContainer.previousSibling.nodeName === 'BR'))) {\n                var isNearBlockLengthZero = void 0;\n                var newElem = void 0;\n\n                if (_this.range.startContainer.nodeName === 'IMG') {\n                  newElem = _this.createInsertElement(shiftKey_1);\n                  isImageNode = true;\n                  isNearBlockLengthZero = false;\n                } else {\n                  if (nearBlockNode.textContent.trim().length !== 0) {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                    isNearBlockLengthZero = false;\n                  } else {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true).cloneNode(true);\n                    isNearBlockLengthZero = true;\n                  }\n                }\n\n                var insertElem = _this.createInsertElement(shiftKey_1);\n\n                while (newElem.firstChild) {\n                  insertElem.appendChild(newElem.firstChild);\n                }\n\n                nearBlockNode.parentElement.insertBefore(insertElem, nearBlockNode);\n\n                if (!isNearBlockLengthZero) {\n                  var currentFocusElem = insertElem;\n                  var finalFocusElem = void 0;\n\n                  while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                    finalFocusElem = currentFocusElem;\n                    currentFocusElem = currentFocusElem.lastChild;\n                  }\n\n                  finalFocusElem.innerHTML = '<br>';\n\n                  if (!isImageNode) {\n                    detach(nearBlockNode);\n                  }\n                }\n\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem.nextElementSibling, 0);\n              } else if (nearBlockNode.textContent.length === 0 && !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                if (!isNOU(nearBlockNode.children[0]) && nearBlockNode.children[0].tagName !== 'BR') {\n                  var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(newElem, nearBlockNode);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, newElem.textContent.length >= 0 ? 0 : 1);\n                } else {\n                  var insertElem = _this.createInsertElement(shiftKey_1);\n\n                  insertElem.innerHTML = '<br>';\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(insertElem, nearBlockNode);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem, 0);\n                }\n              } else {\n                var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true);\n\n                if (!isNOU(newElem.childNodes[0]) && newElem.childNodes[0].nodeName === '#text' && newElem.childNodes[0].textContent.length === 0) {\n                  detach(newElem.childNodes[0]);\n                }\n\n                if (newElem.textContent.trim().length === 0) {\n                  var brElm = _this.parent.createElement('br');\n\n                  if (_this.startNode.nodeName === 'A') {\n                    var startParentElem = _this.startNode.parentElement;\n\n                    _this.startNode.parentElement.insertBefore(brElm, _this.startNode);\n\n                    detach(_this.startNode);\n                    _this.startNode = startParentElem;\n                  } else {\n                    _this.startNode.appendChild(brElm);\n                  }\n\n                  if (newElem.childNodes[0].textContent === '\\n') {\n                    detach(newElem.childNodes[0]);\n                  }\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.startNode, 0);\n                }\n\n                if ((_this.parent.enterKey === 'P' || _this.parent.enterKey === 'DIV') && !shiftKey_1 || (_this.parent.shiftEnterKey === 'DIV' || _this.parent.shiftEnterKey === 'P') && shiftKey_1) {\n                  var insertElm = _this.createInsertElement(shiftKey_1);\n\n                  while (newElem.firstChild) {\n                    insertElm.appendChild(newElem.firstChild);\n                  }\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(insertElm, newElem);\n\n                  detach(newElem);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode) ? insertElm : _this.startNode, 0);\n                }\n              }\n\n              e.args.preventDefault();\n            }\n\n            if (_this.parent.enterKey === 'BR' && !shiftKey_1 || _this.parent.shiftEnterKey === 'BR' && shiftKey_1) {\n              var currentParent = void 0;\n\n              if (!_this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                var currentNode = _this.startNode;\n                var previousNode = currentNode;\n\n                while (!_this.parent.formatter.editorManager.domNode.isBlockNode(currentNode)) {\n                  previousNode = currentNode;\n                  currentNode = currentNode.parentElement;\n                }\n\n                currentParent = currentNode === _this.parent.inputElement ? previousNode : currentNode;\n              } else {\n                currentParent = _this.startNode;\n              }\n\n              _this.removeBRElement(currentParent);\n\n              var isEmptyBrInserted = false;\n              var currentParentLastChild = currentParent.lastChild;\n\n              while (!isNOU(currentParentLastChild) && !(currentParentLastChild.nodeName === '#text' || currentParentLastChild.nodeName === 'BR')) {\n                currentParentLastChild = currentParentLastChild.lastChild;\n              }\n\n              var isLastNodeLength = _this.range.startContainer === currentParentLastChild ? _this.range.startContainer.textContent.length : currentParent.textContent.length;\n\n              if (currentParent !== _this.parent.inputElement && _this.parent.formatter.editorManager.domNode.isBlockNode(currentParent) && _this.range.startOffset === _this.range.endOffset && _this.range.startOffset === isLastNodeLength) {\n                var focusBRElem = _this.parent.createElement('br');\n\n                if (currentParentLastChild.nodeName === 'BR' && currentParent.textContent.length === 0) {\n                  _this.parent.formatter.editorManager.domNode.insertAfter(focusBRElem, currentParentLastChild);\n                } else {\n                  var lineBreakBRElem = _this.parent.createElement('br');\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(focusBRElem, _this.range.startContainer);\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(lineBreakBRElem, _this.range.startContainer);\n                }\n\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusBRElem, 0);\n              } else if (!isNOU(currentParent) && currentParent !== _this.parent.inputElement && currentParent.nodeName !== 'BR') {\n                if (currentParent.textContent.trim().length === 0 || currentParent.textContent.trim().length === 1 && currentParent.textContent.charCodeAt(0) === 8203) {\n                  var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, true).cloneNode(true);\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(newElem, currentParent);\n\n                  var outerBRElem = _this.parent.createElement('br');\n\n                  newElem.parentElement.insertBefore(outerBRElem, newElem);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, 0);\n                } else {\n                  var newElem = void 0;\n\n                  var outerBRElem = _this.parent.createElement('br');\n\n                  if (_this.range.startOffset === 0 && _this.range.endOffset === 0 && !isNOU(currentParent.previousSibling) && currentParent.previousSibling.nodeName === 'BR') {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, false).cloneNode(true);\n\n                    _this.parent.formatter.editorManager.domNode.insertAfter(outerBRElem, currentParent);\n\n                    _this.insertFocusContent();\n\n                    var currentFocusElem = outerBRElem.nextSibling;\n\n                    while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                      currentFocusElem = currentFocusElem.lastChild;\n                    }\n\n                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, 0);\n\n                    isEmptyBrInserted = true;\n                  } else {\n                    _this.insertBRElement();\n                  }\n                }\n              } else {\n                _this.insertBRElement();\n              }\n\n              e.args.preventDefault();\n            }\n\n            _this.parent.trigger(events.actionComplete, {\n              requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n              args: e.args\n            });\n          }\n        });\n      }\n    }\n  };\n\n  EnterKeyAction.prototype.removeBRElement = function (currentElement) {\n    if (Browser.userAgent.indexOf('Firefox') != -1 && this.range.endOffset === currentElement.textContent.length && currentElement.lastChild.nodeName === 'BR') {\n      detach(currentElement.lastChild);\n    }\n  };\n\n  EnterKeyAction.prototype.insertBRElement = function () {\n    var isEmptyBrInserted = false;\n    var brElm = this.parent.createElement('br');\n\n    if (this.startNode.nodeName === 'BR' && this.endNode.nodeName === 'BR' && this.range.startOffset === 0 && this.range.startOffset === this.range.endOffset) {\n      this.parent.formatter.editorManager.domNode.insertAfter(brElm, this.startNode);\n      isEmptyBrInserted = true;\n    } else {\n      if (this.startNode === this.parent.inputElement && !isNOU(this.range.startContainer.previousSibling) && this.range.startContainer.previousSibling.nodeName === 'BR' && this.range.startContainer.textContent.length === 0) {\n        isEmptyBrInserted = true;\n      }\n\n      this.range.insertNode(brElm);\n    }\n\n    if (isEmptyBrInserted || !isNOU(brElm.nextElementSibling) && brElm.nextElementSibling.tagName === 'BR' || !isNOU(brElm.nextSibling) && brElm.nextSibling.textContent.length > 0) {\n      this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), !isNOU(brElm.nextSibling) ? brElm.nextSibling : brElm, 0);\n      isEmptyBrInserted = false;\n    } else {\n      var brElm2 = this.parent.createElement('br');\n      this.range.insertNode(brElm2);\n      this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), brElm, 0);\n    }\n  };\n\n  EnterKeyAction.prototype.insertFocusContent = function () {\n    if (this.range.startContainer.textContent.length === 0) {\n      if (this.range.startContainer.nodeName === '#text') {\n        this.range.startContainer.parentElement.innerHTML = '&#8203;';\n      } else {\n        this.range.startContainer.innerHTML = '&#8203;';\n      }\n    }\n  };\n\n  EnterKeyAction.prototype.createInsertElement = function (shiftKey) {\n    var insertElem;\n\n    if (this.parent.enterKey === 'DIV' && !shiftKey || this.parent.shiftEnterKey === 'DIV' && shiftKey) {\n      insertElem = this.parent.createElement('div');\n    } else if (this.parent.enterKey === 'P' && !shiftKey || this.parent.shiftEnterKey === 'P' && shiftKey) {\n      insertElem = this.parent.createElement('p');\n    }\n\n    return insertElem;\n  };\n\n  return EnterKeyAction;\n}();\n\nexport { EnterKeyAction };","map":{"version":3,"names":["isNullOrUndefined","isNOU","detach","Browser","events","EnterKeyAction","parent","addEventListener","prototype","on","enterHandler","destroy","removeEventListener","off","getRangeNode","range","getRange","startNode","startContainer","nodeName","parentElement","endNode","endContainer","e","_this","isTableEnter","closest","curElement","blockElement","formatter","editorManager","domNode","isBlockNode","tagName","args","which","code","shiftKey_1","shiftKey","actionBeginArgs","cancel","name","actionBegin","requestType","originalEvent","trigger","startOffset","endOffset","deleteContents","textContent","length","inputElement","enterKey","innerHTML","focusElem","childNodes","nodeSelection","setCursorPoint","contentModule","getDocument","previousSibling","currentFocusElem","lastChild","preventDefault","shiftEnterKey","nearBlockNode","blockParentNode","isImageNode","isFocusedFirst","startNodeText","splitFirstText","substring","charCodeAt","trim","removeBRElement","isNearBlockLengthZero","newElem","createInsertElement","nodeCutter","SplitNode","cloneNode","insertElem","firstChild","appendChild","insertBefore","finalFocusElem","nextElementSibling","children","insertAfter","brElm","createElement","startParentElem","insertElm","currentParent","currentNode","previousNode","isEmptyBrInserted","currentParentLastChild","isLastNodeLength","focusBRElem","lineBreakBRElem","outerBRElem","insertFocusContent","nextSibling","insertBRElement","actionComplete","currentElement","userAgent","indexOf","insertNode","brElm2"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/enter-key.js"],"sourcesContent":["import { isNullOrUndefined as isNOU, detach, Browser } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\n/**\n * `EnterKey` module is used to handle enter key press actions.\n */\nvar EnterKeyAction = /** @class */ (function () {\n    function EnterKeyAction(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    EnterKeyAction.prototype.addEventListener = function () {\n        this.parent.on(events.enterHandler, this.enterHandler, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    EnterKeyAction.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    EnterKeyAction.prototype.removeEventListener = function () {\n        this.parent.off(events.enterHandler, this.enterHandler);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    EnterKeyAction.prototype.getRangeNode = function () {\n        this.range = this.parent.getRange();\n        this.startNode = this.range.startContainer.nodeName === '#text' ? this.range.startContainer.parentElement :\n            this.range.startContainer;\n        this.endNode = this.range.endContainer.nodeName === '#text' ? this.range.endContainer.parentElement :\n            this.range.endContainer;\n    };\n    EnterKeyAction.prototype.enterHandler = function (e) {\n        var _this = this;\n        this.getRangeNode();\n        var isTableEnter = true;\n        if (!isNOU(this.startNode.closest('TABLE')) && !isNOU(this.endNode.closest('TABLE'))) {\n            isTableEnter = false;\n            var curElement = this.startNode;\n            var blockElement = curElement;\n            while (!this.parent.formatter.editorManager.domNode.isBlockNode(curElement)) {\n                blockElement = curElement;\n                curElement = curElement.parentElement;\n            }\n            isTableEnter = blockElement.tagName === 'TD' ? false : true;\n        }\n        if (e.args.which === 13 && e.args.code === 'Enter') {\n            if (isNOU(this.startNode.closest('LI')) && isNOU(this.endNode.closest('LI')) && isTableEnter &&\n                isNOU(this.startNode.closest('PRE')) && isNOU(this.endNode.closest('PRE'))) {\n                var shiftKey_1 = e.args.shiftKey;\n                var actionBeginArgs = {\n                    cancel: false,\n                    name: events.actionBegin,\n                    requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n                    originalEvent: e.args\n                };\n                this.parent.trigger(events.actionBegin, actionBeginArgs, function (actionBeginArgs) {\n                    if (!actionBeginArgs.cancel) {\n                        if (!(_this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.range.endContainer)) {\n                            _this.range.deleteContents();\n                            if (_this.range.startContainer.nodeName === '#text' && _this.range.startContainer.textContent.length === 0 &&\n                                _this.range.startContainer.parentElement !== _this.parent.inputElement) {\n                                if (_this.parent.enterKey === 'BR') {\n                                    _this.range.startContainer.parentElement.innerHTML = '&#8203;';\n                                }\n                                else {\n                                    _this.range.startContainer.parentElement.innerHTML = '<br>';\n                                }\n                            }\n                            else if (_this.range.startContainer === _this.parent.inputElement && _this.range.startContainer.innerHTML === '') {\n                                _this.range.startContainer.innerHTML = '<br>';\n                                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, 0);\n                            }\n                            else if (_this.parent.inputElement === _this.range.startContainer) {\n                                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n                                if (focusElem.nodeName === '#text' && focusElem.textContent.length === 0) {\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.previousSibling.textContent.length);\n                                }\n                                else {\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.textContent.length >= 0 ? 0 : 1);\n                                    if (focusElem.previousSibling.textContent.length === 0) {\n                                        detach(focusElem.previousSibling);\n                                    }\n                                    else if (focusElem.textContent.length === 0) {\n                                        var currentFocusElem = focusElem.previousSibling.lastChild;\n                                        while (currentFocusElem.nodeName !== '#text') {\n                                            currentFocusElem = currentFocusElem.lastChild;\n                                        }\n                                        _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, currentFocusElem.textContent.length);\n                                        detach(focusElem);\n                                    }\n                                    else if (_this.parent.enterKey !== 'BR' &&\n                                        focusElem.previousSibling.textContent.length !== 0 && focusElem.textContent.length !== 0) {\n                                        e.args.preventDefault();\n                                        return;\n                                    }\n                                }\n                                _this.getRangeNode();\n                            }\n                        }\n                        if (_this.range.startContainer === _this.range.endContainer &&\n                            _this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.parent.inputElement) {\n                            _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.range.startContainer.childNodes[_this.range.startOffset], 0);\n                            _this.getRangeNode();\n                        }\n                        if ((_this.parent.enterKey === 'P' && !shiftKey_1) || (_this.parent.enterKey === 'DIV' && !shiftKey_1) ||\n                            (_this.parent.shiftEnterKey === 'P' && shiftKey_1) ||\n                            (_this.parent.shiftEnterKey === 'DIV' && shiftKey_1)) {\n                            var nearBlockNode = void 0;\n                            if (isTableEnter && _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                                nearBlockNode = _this.startNode;\n                            }\n                            else {\n                                nearBlockNode = _this.parent.formatter.editorManager.domNode.blockParentNode(_this.startNode);\n                            }\n                            var isImageNode = false;\n                            var isFocusedFirst = false;\n                            if (_this.range.startOffset != 0 && _this.range.endOffset != 0 && _this.range.startContainer === _this.range.endContainer &&\n                                !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                                var startNodeText = _this.range.startContainer.textContent;\n                                var splitFirstText = startNodeText.substring(0, _this.range.startOffset);\n                                if (splitFirstText.charCodeAt(_this.range.startOffset - 1) != 160 && splitFirstText.trim().length === 0) {\n                                    isFocusedFirst = true;\n                                }\n                            }\n                            else if (_this.range.startOffset === 0 && _this.range.endOffset === 0) {\n                                isFocusedFirst = true;\n                            }\n                            _this.removeBRElement(nearBlockNode);\n                            if (((_this.range.startOffset === 0 && _this.range.endOffset === 0) || isFocusedFirst) &&\n                                !(!isNOU(_this.range.startContainer.previousSibling) &&\n                                    (_this.range.startContainer.previousSibling.nodeName === 'IMG' || _this.range.startContainer.previousSibling.nodeName === 'BR'))) {\n                                var isNearBlockLengthZero = void 0;\n                                var newElem = void 0;\n                                if (_this.range.startContainer.nodeName === 'IMG') {\n                                    newElem = _this.createInsertElement(shiftKey_1);\n                                    isImageNode = true;\n                                    isNearBlockLengthZero = false;\n                                }\n                                else {\n                                    if (nearBlockNode.textContent.trim().length !== 0) {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                                        isNearBlockLengthZero = false;\n                                    }\n                                    else {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true).cloneNode(true);\n                                        isNearBlockLengthZero = true;\n                                    }\n                                }\n                                var insertElem = _this.createInsertElement(shiftKey_1);\n                                while (newElem.firstChild) {\n                                    insertElem.appendChild(newElem.firstChild);\n                                }\n                                nearBlockNode.parentElement.insertBefore(insertElem, nearBlockNode);\n                                if (!isNearBlockLengthZero) {\n                                    var currentFocusElem = insertElem;\n                                    var finalFocusElem = void 0;\n                                    while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                                        finalFocusElem = currentFocusElem;\n                                        currentFocusElem = currentFocusElem.lastChild;\n                                    }\n                                    finalFocusElem.innerHTML = '<br>';\n                                    if (!isImageNode) {\n                                        detach(nearBlockNode);\n                                    }\n                                }\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem.nextElementSibling, 0);\n                            }\n                            else if (nearBlockNode.textContent.length === 0 && !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                                if (!isNOU(nearBlockNode.children[0]) && nearBlockNode.children[0].tagName !== 'BR') {\n                                    var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(newElem, nearBlockNode);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, newElem.textContent.length >= 0 ? 0 : 1);\n                                }\n                                else {\n                                    var insertElem = _this.createInsertElement(shiftKey_1);\n                                    insertElem.innerHTML = '<br>';\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(insertElem, nearBlockNode);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem, 0);\n                                }\n                            }\n                            else {\n                                var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true);\n                                if (!isNOU(newElem.childNodes[0]) && newElem.childNodes[0].nodeName === '#text' &&\n                                    newElem.childNodes[0].textContent.length === 0) {\n                                    detach(newElem.childNodes[0]);\n                                }\n                                if (newElem.textContent.trim().length === 0) {\n                                    var brElm = _this.parent.createElement('br');\n                                    if (_this.startNode.nodeName === 'A') {\n                                        var startParentElem = _this.startNode.parentElement;\n                                        _this.startNode.parentElement.insertBefore(brElm, _this.startNode);\n                                        detach(_this.startNode);\n                                        _this.startNode = startParentElem;\n                                    }\n                                    else {\n                                        _this.startNode.appendChild(brElm);\n                                    }\n                                    if (newElem.childNodes[0].textContent === '\\n') {\n                                        detach(newElem.childNodes[0]);\n                                    }\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.startNode, 0);\n                                }\n                                if (((_this.parent.enterKey === 'P' || _this.parent.enterKey === 'DIV') && !shiftKey_1) || ((_this.parent.shiftEnterKey === 'DIV' ||\n                                    _this.parent.shiftEnterKey === 'P') && shiftKey_1)) {\n                                    var insertElm = _this.createInsertElement(shiftKey_1);\n                                    while (newElem.firstChild) {\n                                        insertElm.appendChild(newElem.firstChild);\n                                    }\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(insertElm, newElem);\n                                    detach(newElem);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode) ?\n                                        insertElm : _this.startNode, 0);\n                                }\n                            }\n                            e.args.preventDefault();\n                        }\n                        if ((_this.parent.enterKey === 'BR' && !shiftKey_1) || (_this.parent.shiftEnterKey === 'BR' && shiftKey_1)) {\n                            var currentParent = void 0;\n                            if (!_this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                                var currentNode = _this.startNode;\n                                var previousNode = currentNode;\n                                while (!_this.parent.formatter.editorManager.domNode.isBlockNode(currentNode)) {\n                                    previousNode = currentNode;\n                                    currentNode = currentNode.parentElement;\n                                }\n                                currentParent = currentNode === _this.parent.inputElement ?\n                                    previousNode : currentNode;\n                            }\n                            else {\n                                currentParent = _this.startNode;\n                            }\n                            _this.removeBRElement(currentParent);\n                            var isEmptyBrInserted = false;\n                            var currentParentLastChild = currentParent.lastChild;\n                            while (!isNOU(currentParentLastChild) && !(currentParentLastChild.nodeName === '#text' || currentParentLastChild.nodeName === 'BR')) {\n                                currentParentLastChild = currentParentLastChild.lastChild;\n                            }\n                            var isLastNodeLength = _this.range.startContainer === currentParentLastChild ?\n                                _this.range.startContainer.textContent.length : currentParent.textContent.length;\n                            if (currentParent !== _this.parent.inputElement &&\n                                _this.parent.formatter.editorManager.domNode.isBlockNode(currentParent) &&\n                                _this.range.startOffset === _this.range.endOffset &&\n                                _this.range.startOffset === isLastNodeLength) {\n                                var focusBRElem = _this.parent.createElement('br');\n                                if (currentParentLastChild.nodeName === 'BR' && currentParent.textContent.length === 0) {\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(focusBRElem, currentParentLastChild);\n                                }\n                                else {\n                                    var lineBreakBRElem = _this.parent.createElement('br');\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(focusBRElem, _this.range.startContainer);\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(lineBreakBRElem, _this.range.startContainer);\n                                }\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusBRElem, 0);\n                            }\n                            else if (!isNOU(currentParent) && currentParent !== _this.parent.inputElement && currentParent.nodeName !== 'BR') {\n                                if (currentParent.textContent.trim().length === 0 || (currentParent.textContent.trim().length === 1 &&\n                                    currentParent.textContent.charCodeAt(0) === 8203)) {\n                                    var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, true).cloneNode(true);\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(newElem, currentParent);\n                                    var outerBRElem = _this.parent.createElement('br');\n                                    newElem.parentElement.insertBefore(outerBRElem, newElem);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, 0);\n                                }\n                                else {\n                                    var newElem = void 0;\n                                    var outerBRElem = _this.parent.createElement('br');\n                                    if (_this.range.startOffset === 0 && _this.range.endOffset === 0 &&\n                                        !isNOU(currentParent.previousSibling) && currentParent.previousSibling.nodeName === 'BR') {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, false).cloneNode(true);\n                                        _this.parent.formatter.editorManager.domNode.insertAfter(outerBRElem, currentParent);\n                                        _this.insertFocusContent();\n                                        var currentFocusElem = outerBRElem.nextSibling;\n                                        while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                                            currentFocusElem = currentFocusElem.lastChild;\n                                        }\n                                        _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, 0);\n                                        isEmptyBrInserted = true;\n                                    }\n                                    else {\n                                        _this.insertBRElement();\n                                    }\n                                }\n                            }\n                            else {\n                                _this.insertBRElement();\n                            }\n                            e.args.preventDefault();\n                        }\n                        _this.parent.trigger(events.actionComplete, { requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction', args: e.args });\n                    }\n                });\n            }\n        }\n    };\n    EnterKeyAction.prototype.removeBRElement = function (currentElement) {\n        if (Browser.userAgent.indexOf('Firefox') != -1 &&\n            this.range.endOffset === currentElement.textContent.length &&\n            currentElement.lastChild.nodeName === 'BR') {\n            detach(currentElement.lastChild);\n        }\n    };\n    EnterKeyAction.prototype.insertBRElement = function () {\n        var isEmptyBrInserted = false;\n        var brElm = this.parent.createElement('br');\n        if (this.startNode.nodeName === 'BR' && this.endNode.nodeName === 'BR' && this.range.startOffset === 0 && this.range.startOffset === this.range.endOffset) {\n            this.parent.formatter.editorManager.domNode.insertAfter(brElm, this.startNode);\n            isEmptyBrInserted = true;\n        }\n        else {\n            if (this.startNode === this.parent.inputElement && !isNOU(this.range.startContainer.previousSibling) &&\n                this.range.startContainer.previousSibling.nodeName === 'BR' && this.range.startContainer.textContent.length === 0) {\n                isEmptyBrInserted = true;\n            }\n            this.range.insertNode(brElm);\n        }\n        if (isEmptyBrInserted || (!isNOU(brElm.nextElementSibling) && brElm.nextElementSibling.tagName === 'BR') || (!isNOU(brElm.nextSibling) && brElm.nextSibling.textContent.length > 0)) {\n            this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), !isNOU(brElm.nextSibling) ? brElm.nextSibling : brElm, 0);\n            isEmptyBrInserted = false;\n        }\n        else {\n            var brElm2 = this.parent.createElement('br');\n            this.range.insertNode(brElm2);\n            this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), brElm, 0);\n        }\n    };\n    EnterKeyAction.prototype.insertFocusContent = function () {\n        if (this.range.startContainer.textContent.length === 0) {\n            if (this.range.startContainer.nodeName === '#text') {\n                this.range.startContainer.parentElement.innerHTML = '&#8203;';\n            }\n            else {\n                this.range.startContainer.innerHTML = '&#8203;';\n            }\n        }\n    };\n    EnterKeyAction.prototype.createInsertElement = function (shiftKey) {\n        var insertElem;\n        if ((this.parent.enterKey === 'DIV' && !shiftKey) || (this.parent.shiftEnterKey === 'DIV' && shiftKey)) {\n            insertElem = this.parent.createElement('div');\n        }\n        else if ((this.parent.enterKey === 'P' && !shiftKey) || (this.parent.shiftEnterKey === 'P' && shiftKey)) {\n            insertElem = this.parent.createElement('p');\n        }\n        return insertElem;\n    };\n    return EnterKeyAction;\n}());\nexport { EnterKeyAction };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}