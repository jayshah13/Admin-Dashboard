{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable jsdoc/require-param */\n\n/* eslint-disable valid-jsdoc */\n\n\nimport { Component, Complex, NotifyPropertyChanges, Property } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { createElement, remove, Event, EventHandler } from '@syncfusion/ej2-base';\nimport { createSvg, RectOption, measureText, TextOption, renderTextElement } from '../smithchart/utils/helper';\nimport { removeElement, textTrim } from '../smithchart/utils/helper';\nimport { SmithchartRect } from '../smithchart/utils/utils';\nimport { SmithchartMargin, SmithchartBorder, SmithchartFont } from '../smithchart/utils/utils';\nimport { getThemeColor } from '../smithchart/model/theme';\nimport { SmithchartLegendSettings } from '../smithchart/legend/legend';\nimport { SmithchartAxis } from '../smithchart/axis/axis';\nimport { Title } from '../smithchart/title/title';\nimport { SmithchartSeries } from '../smithchart/series/series';\nimport { AreaBounds } from '../smithchart/utils/area';\nimport { AxisRender } from '../smithchart/axis/axisrender';\nimport { SeriesRender } from '../smithchart/series/seriesrender';\nimport { Collection } from '@syncfusion/ej2-base';\nimport { getSeriesColor } from '../smithchart/model/theme';\nimport { ExportUtils } from '../smithchart/utils/export';\nimport { titleRender, subtitleRender, load, loaded } from '../smithchart/model/constant';\n/**\n * Represents the Smithchart control.\n * ```html\n * <div id=\"smithchart\"/>\n * <script>\n *   var chartObj = new Smithchart({ isResponsive : true });\n *   chartObj.appendTo(\"#smithchart\");\n * </script>\n * ```\n */\n\nvar Smithchart =\n/** @class */\nfunction (_super) {\n  __extends(Smithchart, _super);\n  /**\n   * Constructor for creating the Smithchart widget\n   */\n\n\n  function Smithchart(options, element) {\n    return _super.call(this, options, element) || this;\n  }\n  /**\n   * Get component name\n   */\n\n\n  Smithchart.prototype.getModuleName = function () {\n    return 'smithchart';\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @private\n   */\n\n\n  Smithchart.prototype.getPersistData = function () {\n    return '';\n  };\n  /**\n   * Method to create SVG element.\n   */\n\n\n  Smithchart.prototype.createChartSvg = function () {\n    this.removeSvg();\n    createSvg(this);\n  };\n\n  Smithchart.prototype.renderTitle = function (title, type, groupEle) {\n    var _this = this;\n\n    var font = title.font ? title.font : title.textStyle;\n    var textSize = measureText(title.text, font);\n    var x;\n    var textAlignment = title.textAlignment;\n    var titleText = title.text;\n    var maxTitleWidth = isNullOrUndefined(title.maximumWidth) ? Math.abs(this.margin.left + this.margin.right - this.availableSize.width) : title.maximumWidth;\n    var titleWidthEnable = textSize.width > maxTitleWidth ? true : false;\n\n    if (textSize.width > this.availableSize.width) {\n      x = this.margin.left + this.border.width;\n    } else {\n      x = textAlignment === 'Center' ? this.availableSize.width / 2 - textSize['width'] / 2 : textAlignment === 'Near' ? this.margin.left + this.elementSpacing + this.border.width : this.availableSize.width - textSize['width'] - (this.margin.right + this.elementSpacing + this.border.width);\n    }\n\n    var y = this.margin.top + textSize['height'] / 2 + this.elementSpacing;\n\n    if (title.enableTrim && titleWidthEnable) {\n      titleText = textTrim(maxTitleWidth, title.text, font);\n      textSize = measureText(titleText, font);\n    }\n\n    groupEle = this.renderer.createGroup({\n      id: this.element.id + '_Title_Group'\n    });\n    var titleEventArgs = {\n      text: titleText,\n      x: x,\n      y: y,\n      name: titleRender,\n      cancel: false\n    };\n    var options;\n\n    var titleRenderSuccess = function (args) {\n      if (!args.cancel) {\n        options = new TextOption(_this.element.id + '_Smithchart_' + type, args.x, args.y, 'start', args.text);\n        font.fontFamily = _this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        font.size = _this.themeStyle.fontSize || title.textStyle.size;\n        var element = renderTextElement(options, font, _this.themeStyle.chartTitle, groupEle);\n        element.setAttribute('aria-label', title.description || args.text);\n        var titleLocation = {\n          x: args.x,\n          y: args.y,\n          textSize: textSize\n        };\n\n        _this.svgObject.appendChild(groupEle);\n\n        if (title.subtitle.text !== '' && title.subtitle.visible) {\n          _this.renderSubtitle(title, type, textSize, _this.availableSize, titleLocation, groupEle);\n        }\n      }\n    };\n\n    titleRenderSuccess.bind(this);\n    this.trigger(titleRender, titleEventArgs, titleRenderSuccess);\n  };\n\n  Smithchart.prototype.renderSubtitle = function (title, type, textSize, size, titleLocation, groupEle) {\n    var _this = this;\n\n    var font = title.subtitle.textStyle;\n    var subTitle = title.subtitle;\n    var subTitleSize = measureText(subTitle.text, font);\n    var subTitleText = subTitle.text;\n    var maxSubTitleWidth = isNullOrUndefined(subTitle.maximumWidth) ? this.bounds.width * 0.75 : subTitle.maximumWidth;\n\n    if (subTitle.enableTrim && subTitleSize.width > maxSubTitleWidth) {\n      subTitleText = textTrim(maxSubTitleWidth, subTitle.text, font);\n    }\n\n    var x = title['subtitle'].textAlignment === 'Far' ? titleLocation.x + titleLocation.textSize.width : title['subtitle'].textAlignment === 'Near' ? titleLocation.x : titleLocation.x + titleLocation.textSize.width / 2;\n    var y = titleLocation.y + 2 * this.elementSpacing;\n    var textAnchor = title['subtitle'].textAlignment === 'Far' ? 'end' : title['subtitle'].textAlignment === 'Near' ? 'start' : 'middle';\n    var subtitleEventArgs = {\n      text: subTitleText,\n      x: x,\n      y: y,\n      name: subtitleRender,\n      cancel: false\n    };\n\n    var subtitleRenderSuccess = function (args) {\n      if (!args.cancel) {\n        var options = new TextOption(_this.element.id + '_Smithchart_' + type, args.x, args.y, textAnchor, args.text);\n        var element = renderTextElement(options, font, _this.themeStyle.chartTitle, groupEle);\n        element.setAttribute('aria-label', subTitle.description || args.text);\n        groupEle.appendChild(element);\n      }\n    };\n\n    subtitleRenderSuccess.bind(this);\n    this.trigger(subtitleRender, subtitleEventArgs, subtitleRenderSuccess);\n  };\n  /**\n   * Render the smithchart border\n   *\n   * @private\n   */\n\n\n  Smithchart.prototype.renderBorder = function () {\n    var border = this.border;\n    this.background = this.background ? this.background : this.themeStyle.background;\n    var borderRect = new RectOption(this.element.id + '_SmithchartBorder', this.background, border, 1, new SmithchartRect(border.width / 2, border.width / 2, this.availableSize.width - border.width, this.availableSize.height - border.width));\n    this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @private\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Smithchart.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var renderer = false;\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'background':\n        case 'border':\n        case 'series':\n        case 'legendSettings':\n        case 'radius':\n          renderer = true;\n          break;\n\n        case 'size':\n          this.createChartSvg();\n          renderer = true;\n          break;\n\n        case 'theme':\n        case 'renderType':\n          this.animateSeries = true;\n          renderer = true;\n          break;\n      }\n    }\n\n    if (renderer) {\n      this.render();\n    }\n  };\n  /**\n   * Initialize the event handler.\n   */\n\n\n  Smithchart.prototype.preRender = function () {\n    this.allowServerDataBinding = false;\n    this.trigger(load, {\n      smithchart: this\n    });\n    this.unWireEVents();\n    this.initPrivateVariable();\n    this.wireEVents();\n  };\n\n  Smithchart.prototype.initPrivateVariable = function () {\n    this.animateSeries = true;\n  };\n  /**\n   * To Initialize the control rendering.\n   */\n\n\n  Smithchart.prototype.setTheme = function () {\n    /*! Set theme */\n    this.themeStyle = getThemeColor(this.theme);\n    this.seriesColors = getSeriesColor(this.theme); // let count: number = colors.length;\n    // for (let i: number = 0; i < this.series.length; i++) {\n    //     this.series[i].fill = this.series[i].fill ? this.series[i].fill : colors[i % count];\n    // }\n  };\n\n  Smithchart.prototype.render = function () {\n    this.createChartSvg();\n    this.element.appendChild(this.svgObject);\n    this.setTheme();\n    this.createSecondaryElement();\n    this.renderBorder();\n\n    if (this.smithchartLegendModule && this.legendSettings.visible) {\n      this.legendBounds = this.smithchartLegendModule.renderLegend(this);\n    }\n\n    this.legendBounds = this.legendBounds ? this.legendBounds : {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    var areaBounds = new AreaBounds();\n    this.bounds = areaBounds.calculateAreaBounds(this, this.title, this.legendBounds);\n\n    if (this.title.text !== '' && this.title.visible) {\n      this.renderTitle(this.title, 'title', null);\n    }\n\n    var axisRender = new AxisRender();\n    axisRender.renderArea(this, this.bounds);\n    this.seriesrender = new SeriesRender();\n    this.seriesrender.draw(this, axisRender, this.bounds);\n    this.renderComplete();\n    this.allowServerDataBinding = true;\n    this.trigger(loaded, {\n      smithchart: this\n    });\n  };\n\n  Smithchart.prototype.createSecondaryElement = function () {\n    if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n      var secondaryElement = createElement('div', {\n        id: this.element.id + '_Secondary_Element',\n        styles: 'z-index:1;'\n      });\n      this.element.appendChild(secondaryElement);\n      var rect = this.element.getBoundingClientRect();\n      var svgRect = document.getElementById(this.element.id + '_svg');\n\n      if (svgRect) {\n        var svgClientRect = svgRect.getBoundingClientRect();\n        secondaryElement.style.left = Math.max(svgClientRect.left - rect.left, 0) + 'px';\n        secondaryElement.style.top = Math.max(svgClientRect.top - rect.top, 0) + 'px';\n      }\n    } else {\n      removeElement(this.element.id + '_Secondary_Element');\n    }\n  };\n  /**\n   * To destroy the widget\n   *\n   * @returns {void}.\n   */\n\n\n  Smithchart.prototype.destroy = function () {\n    if (this.element) {\n      this.unWireEVents();\n\n      _super.prototype.destroy.call(this);\n\n      this.element.classList.remove('e-smithchart');\n      this.removeSvg();\n      this.svgObject = null;\n    }\n  };\n  /**\n   * To bind event handlers for smithchart.\n   */\n\n\n  Smithchart.prototype.wireEVents = function () {\n    EventHandler.add(this.element, 'click', this.smithchartOnClick, this);\n    EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n    EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n    window.addEventListener(Browser.isTouch && 'orientation' in window && 'onorientationchange' in window ? 'orientationchange' : 'resize', this.smithchartOnResize.bind(this));\n  };\n\n  Smithchart.prototype.mouseMove = function (e) {\n    if (e.type === 'touchmove') {\n      this.isTouch = true;\n    } else {\n      this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || this.isTouch;\n    }\n\n    if (this.tooltipRenderModule && !this.isTouch) {\n      this.tooltipRenderModule.smithchartMouseMove(this, e);\n    }\n  };\n\n  Smithchart.prototype.mouseEnd = function (e) {\n    if (e.type === 'touchend') {\n      this.isTouch = true;\n    } else {\n      this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n    }\n\n    if (this.tooltipRenderModule && this.isTouch) {\n      var tooltipElement_1 = this.tooltipRenderModule.smithchartMouseMove(this, e);\n\n      if (tooltipElement_1) {\n        this.fadeoutTo = +setTimeout(function () {\n          tooltipElement_1.fadeOut();\n        }, 2000);\n      }\n    }\n  };\n  /**\n   * To handle the click event for the smithchart.\n   */\n\n\n  Smithchart.prototype.smithchartOnClick = function (e) {\n    var targetEle = e.target;\n    var targetId = targetEle.id;\n    var parentElement = document.getElementById(targetId).parentElement;\n    var grpElement = document.getElementById(parentElement.id).parentElement;\n\n    if (grpElement.id === 'containerlegendItem_Group' && this.legendSettings.toggleVisibility) {\n      var childElement = parentElement.childNodes[1];\n      var circleElement = parentElement.childNodes[0];\n      var legendText = childElement.textContent;\n      var seriesIndex = void 0;\n      var fill = void 0;\n\n      for (var i = 0; i < this.smithchartLegendModule.legendSeries.length; i++) {\n        if (legendText === this.smithchartLegendModule.legendSeries[i]['text']) {\n          seriesIndex = this.smithchartLegendModule.legendSeries[i].seriesIndex;\n          fill = this.smithchartLegendModule.legendSeries[i].fill;\n        }\n      }\n\n      var seriesElement = document.getElementById(this.element.id + '_svg' + '_seriesCollection' + seriesIndex);\n\n      if (seriesElement.getAttribute('visibility') === 'visible') {\n        circleElement.setAttribute('fill', 'gray');\n        seriesElement.setAttribute('visibility', 'hidden');\n        this.series[seriesIndex].visibility = 'hidden';\n      } else {\n        circleElement.setAttribute('fill', fill);\n        seriesElement.setAttribute('visibility', 'visible');\n        this.series[seriesIndex].visibility = 'visible';\n      }\n    }\n  };\n  /**\n   * To unbind event handlers from smithchart.\n   */\n\n\n  Smithchart.prototype.unWireEVents = function () {\n    EventHandler.remove(this.element, 'click', this.smithchartOnClick);\n    EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n    EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n    window.removeEventListener(Browser.isTouch && 'orientation' in window && 'onorientationchange' in window ? 'orientationchange' : 'resize', this.smithchartOnResize);\n  };\n\n  Smithchart.prototype.print = function (id) {\n    var exportChart = new ExportUtils(this);\n    exportChart.print(id);\n  };\n  /**\n   * Handles the export method for chart control.\n   */\n\n\n  Smithchart.prototype.export = function (type, fileName, orientation) {\n    var exportMap = new ExportUtils(this);\n    exportMap.export(type, fileName, orientation);\n  };\n  /**\n   * To handle the window resize event on smithchart.\n   */\n\n\n  Smithchart.prototype.smithchartOnResize = function () {\n    var _this = this;\n\n    this.animateSeries = false;\n\n    if (this.resizeTo) {\n      clearTimeout(this.resizeTo);\n    }\n\n    this.resizeTo = +setTimeout(function () {\n      _this.render();\n    }, 500);\n    return false;\n  };\n  /**\n   * To provide the array of modules needed for smithchart rendering\n   *\n   * @private\n   */\n\n\n  Smithchart.prototype.requiredModules = function () {\n    var modules = [];\n\n    if (this.legendSettings.visible) {\n      modules.push({\n        member: 'SmithchartLegend',\n        args: [this]\n      });\n    }\n\n    for (var i = 0; i < this.series.length; i++) {\n      if (this.series[i].tooltip.visible) {\n        modules.push({\n          member: 'TooltipRender',\n          args: [this]\n        });\n        break;\n      }\n    }\n\n    return modules;\n  };\n  /**\n   * To Remove the SVG.\n   *\n   * @private\n   */\n\n\n  Smithchart.prototype.removeSvg = function () {\n    removeElement(this.element.id + '_Secondary_Element');\n    var removeLength = 0;\n\n    if (this.svgObject) {\n      while (this.svgObject.childNodes.length > removeLength) {\n        this.svgObject.removeChild(this.svgObject.firstChild);\n      }\n\n      if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n        remove(this.svgObject);\n      }\n    }\n  };\n\n  __decorate([Property('Impedance')], Smithchart.prototype, \"renderType\", void 0);\n\n  __decorate([Property('')], Smithchart.prototype, \"width\", void 0);\n\n  __decorate([Property('')], Smithchart.prototype, \"height\", void 0);\n\n  __decorate([Property('Material')], Smithchart.prototype, \"theme\", void 0);\n\n  __decorate([Complex({}, SmithchartMargin)], Smithchart.prototype, \"margin\", void 0);\n\n  __decorate([Complex({}, SmithchartFont)], Smithchart.prototype, \"font\", void 0);\n\n  __decorate([Complex({}, SmithchartBorder)], Smithchart.prototype, \"border\", void 0);\n\n  __decorate([Complex({}, Title)], Smithchart.prototype, \"title\", void 0);\n\n  __decorate([Collection([{}], SmithchartSeries)], Smithchart.prototype, \"series\", void 0);\n\n  __decorate([Complex({}, SmithchartLegendSettings)], Smithchart.prototype, \"legendSettings\", void 0);\n\n  __decorate([Complex({}, SmithchartAxis)], Smithchart.prototype, \"horizontalAxis\", void 0);\n\n  __decorate([Complex({}, SmithchartAxis)], Smithchart.prototype, \"radialAxis\", void 0);\n\n  __decorate([Property(null)], Smithchart.prototype, \"background\", void 0);\n\n  __decorate([Property(10)], Smithchart.prototype, \"elementSpacing\", void 0);\n\n  __decorate([Property(1)], Smithchart.prototype, \"radius\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"beforePrint\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"animationComplete\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"load\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"loaded\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"legendRender\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"titleRender\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"subtitleRender\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"textRender\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"axisLabelRender\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"seriesRender\", void 0);\n\n  __decorate([Event()], Smithchart.prototype, \"tooltipRender\", void 0);\n\n  Smithchart = __decorate([NotifyPropertyChanges], Smithchart);\n  return Smithchart;\n}(Component);\n\nexport { Smithchart };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Complex","NotifyPropertyChanges","Property","isNullOrUndefined","Browser","createElement","remove","Event","EventHandler","createSvg","RectOption","measureText","TextOption","renderTextElement","removeElement","textTrim","SmithchartRect","SmithchartMargin","SmithchartBorder","SmithchartFont","getThemeColor","SmithchartLegendSettings","SmithchartAxis","Title","SmithchartSeries","AreaBounds","AxisRender","SeriesRender","Collection","getSeriesColor","ExportUtils","titleRender","subtitleRender","load","loaded","Smithchart","_super","options","element","call","getModuleName","getPersistData","createChartSvg","removeSvg","renderTitle","title","type","groupEle","_this","font","textStyle","textSize","text","x","textAlignment","titleText","maxTitleWidth","maximumWidth","Math","abs","margin","left","right","availableSize","width","titleWidthEnable","border","elementSpacing","y","top","enableTrim","renderer","createGroup","id","titleEventArgs","name","cancel","titleRenderSuccess","args","fontFamily","themeStyle","size","fontSize","chartTitle","setAttribute","description","titleLocation","svgObject","appendChild","subtitle","visible","renderSubtitle","bind","trigger","subTitle","subTitleSize","subTitleText","maxSubTitleWidth","bounds","textAnchor","subtitleEventArgs","subtitleRenderSuccess","renderBorder","background","borderRect","height","drawRectangle","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","animateSeries","render","preRender","allowServerDataBinding","smithchart","unWireEVents","initPrivateVariable","wireEVents","setTheme","theme","seriesColors","createSecondaryElement","smithchartLegendModule","legendSettings","legendBounds","renderLegend","areaBounds","calculateAreaBounds","axisRender","renderArea","seriesrender","draw","renderComplete","document","getElementById","secondaryElement","styles","rect","getBoundingClientRect","svgRect","svgClientRect","style","max","destroy","classList","add","smithchartOnClick","touchMoveEvent","mouseMove","touchEndEvent","mouseEnd","window","addEventListener","isTouch","smithchartOnResize","e","pointerType","tooltipRenderModule","smithchartMouseMove","tooltipElement_1","fadeoutTo","setTimeout","fadeOut","targetEle","targetId","parentElement","grpElement","toggleVisibility","childElement","childNodes","circleElement","legendText","textContent","seriesIndex","fill","legendSeries","seriesElement","getAttribute","series","visibility","removeEventListener","print","exportChart","export","fileName","orientation","exportMap","resizeTo","clearTimeout","requiredModules","modules","push","member","tooltip","removeLength","removeChild","firstChild","hasChildNodes","parentNode"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Admin-Dashboard/frontend/node_modules/@syncfusion/ej2-charts/src/smithchart/smithchart.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\nimport { Component, Complex, NotifyPropertyChanges, Property } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { createElement, remove, Event, EventHandler } from '@syncfusion/ej2-base';\nimport { createSvg, RectOption, measureText, TextOption, renderTextElement } from '../smithchart/utils/helper';\nimport { removeElement, textTrim } from '../smithchart/utils/helper';\nimport { SmithchartRect } from '../smithchart/utils/utils';\nimport { SmithchartMargin, SmithchartBorder, SmithchartFont } from '../smithchart/utils/utils';\nimport { getThemeColor } from '../smithchart/model/theme';\nimport { SmithchartLegendSettings } from '../smithchart/legend/legend';\nimport { SmithchartAxis } from '../smithchart/axis/axis';\nimport { Title } from '../smithchart/title/title';\nimport { SmithchartSeries } from '../smithchart/series/series';\nimport { AreaBounds } from '../smithchart/utils/area';\nimport { AxisRender } from '../smithchart/axis/axisrender';\nimport { SeriesRender } from '../smithchart/series/seriesrender';\nimport { Collection } from '@syncfusion/ej2-base';\nimport { getSeriesColor } from '../smithchart/model/theme';\nimport { ExportUtils } from '../smithchart/utils/export';\nimport { titleRender, subtitleRender, load, loaded } from '../smithchart/model/constant';\n/**\n * Represents the Smithchart control.\n * ```html\n * <div id=\"smithchart\"/>\n * <script>\n *   var chartObj = new Smithchart({ isResponsive : true });\n *   chartObj.appendTo(\"#smithchart\");\n * </script>\n * ```\n */\nvar Smithchart = /** @class */ (function (_super) {\n    __extends(Smithchart, _super);\n    /**\n     * Constructor for creating the Smithchart widget\n     */\n    function Smithchart(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Get component name\n     */\n    Smithchart.prototype.getModuleName = function () {\n        return 'smithchart';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @private\n     */\n    Smithchart.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * Method to create SVG element.\n     */\n    Smithchart.prototype.createChartSvg = function () {\n        this.removeSvg();\n        createSvg(this);\n    };\n    Smithchart.prototype.renderTitle = function (title, type, groupEle) {\n        var _this = this;\n        var font = title.font ? title.font : title.textStyle;\n        var textSize = measureText(title.text, font);\n        var x;\n        var textAlignment = title.textAlignment;\n        var titleText = title.text;\n        var maxTitleWidth = (isNullOrUndefined(title.maximumWidth)) ?\n            Math.abs(this.margin.left + this.margin.right - (this.availableSize.width)) :\n            title.maximumWidth;\n        var titleWidthEnable = textSize.width > maxTitleWidth ? true : false;\n        if (textSize.width > this.availableSize.width) {\n            x = this.margin.left + this.border.width;\n        }\n        else {\n            x = textAlignment === 'Center' ? (this.availableSize.width / 2 - textSize['width'] / 2) :\n                (textAlignment === 'Near' ? (this.margin.left + this.elementSpacing + this.border.width) : (this.availableSize.width\n                    - textSize['width'] - (this.margin.right + this.elementSpacing + this.border.width)));\n        }\n        var y = this.margin.top + textSize['height'] / 2 + this.elementSpacing;\n        if (title.enableTrim && titleWidthEnable) {\n            titleText = textTrim(maxTitleWidth, title.text, font);\n            textSize = measureText(titleText, font);\n        }\n        groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n        var titleEventArgs = {\n            text: titleText,\n            x: x,\n            y: y,\n            name: titleRender,\n            cancel: false\n        };\n        var options;\n        var titleRenderSuccess = function (args) {\n            if (!args.cancel) {\n                options = new TextOption(_this.element.id + '_Smithchart_' + type, args.x, args.y, 'start', args.text);\n                font.fontFamily = _this.themeStyle.fontFamily || title.textStyle.fontFamily;\n                font.size = _this.themeStyle.fontSize || title.textStyle.size;\n                var element = renderTextElement(options, font, _this.themeStyle.chartTitle, groupEle);\n                element.setAttribute('aria-label', title.description || args.text);\n                var titleLocation = { x: args.x, y: args.y, textSize: textSize };\n                _this.svgObject.appendChild(groupEle);\n                if (title.subtitle.text !== '' && title.subtitle.visible) {\n                    _this.renderSubtitle(title, type, textSize, _this.availableSize, titleLocation, groupEle);\n                }\n            }\n        };\n        titleRenderSuccess.bind(this);\n        this.trigger(titleRender, titleEventArgs, titleRenderSuccess);\n    };\n    Smithchart.prototype.renderSubtitle = function (title, type, textSize, size, titleLocation, groupEle) {\n        var _this = this;\n        var font = title.subtitle.textStyle;\n        var subTitle = title.subtitle;\n        var subTitleSize = measureText(subTitle.text, font);\n        var subTitleText = subTitle.text;\n        var maxSubTitleWidth = isNullOrUndefined(subTitle.maximumWidth) ?\n            (this.bounds.width * 0.75) : subTitle.maximumWidth;\n        if (subTitle.enableTrim && subTitleSize.width > maxSubTitleWidth) {\n            subTitleText = textTrim(maxSubTitleWidth, subTitle.text, font);\n        }\n        var x = title['subtitle'].textAlignment === 'Far' ? (titleLocation.x + (titleLocation.textSize.width)) :\n            (title['subtitle'].textAlignment === 'Near') ? titleLocation.x :\n                (titleLocation.x + (titleLocation.textSize.width / 2));\n        var y = titleLocation.y + (2 * this.elementSpacing);\n        var textAnchor = title['subtitle'].textAlignment === 'Far' ? 'end' :\n            (title['subtitle'].textAlignment === 'Near') ? 'start' : 'middle';\n        var subtitleEventArgs = {\n            text: subTitleText,\n            x: x,\n            y: y,\n            name: subtitleRender,\n            cancel: false\n        };\n        var subtitleRenderSuccess = function (args) {\n            if (!args.cancel) {\n                var options = new TextOption(_this.element.id + '_Smithchart_' + type, args.x, args.y, textAnchor, args.text);\n                var element = renderTextElement(options, font, _this.themeStyle.chartTitle, groupEle);\n                element.setAttribute('aria-label', subTitle.description || args.text);\n                groupEle.appendChild(element);\n            }\n        };\n        subtitleRenderSuccess.bind(this);\n        this.trigger(subtitleRender, subtitleEventArgs, subtitleRenderSuccess);\n    };\n    /**\n     * Render the smithchart border\n     *\n     * @private\n     */\n    Smithchart.prototype.renderBorder = function () {\n        var border = this.border;\n        this.background = this.background ? this.background : this.themeStyle.background;\n        var borderRect = new RectOption(this.element.id + '_SmithchartBorder', this.background, border, 1, new SmithchartRect(border.width / 2, border.width / 2, this.availableSize.width - border.width, this.availableSize.height - border.width));\n        this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Smithchart.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                case 'border':\n                case 'series':\n                case 'legendSettings':\n                case 'radius':\n                    renderer = true;\n                    break;\n                case 'size':\n                    this.createChartSvg();\n                    renderer = true;\n                    break;\n                case 'theme':\n                case 'renderType':\n                    this.animateSeries = true;\n                    renderer = true;\n                    break;\n            }\n        }\n        if (renderer) {\n            this.render();\n        }\n    };\n    /**\n     * Initialize the event handler.\n     */\n    Smithchart.prototype.preRender = function () {\n        this.allowServerDataBinding = false;\n        this.trigger(load, { smithchart: this });\n        this.unWireEVents();\n        this.initPrivateVariable();\n        this.wireEVents();\n    };\n    Smithchart.prototype.initPrivateVariable = function () {\n        this.animateSeries = true;\n    };\n    /**\n     * To Initialize the control rendering.\n     */\n    Smithchart.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n        this.seriesColors = getSeriesColor(this.theme);\n        // let count: number = colors.length;\n        // for (let i: number = 0; i < this.series.length; i++) {\n        //     this.series[i].fill = this.series[i].fill ? this.series[i].fill : colors[i % count];\n        // }\n    };\n    Smithchart.prototype.render = function () {\n        this.createChartSvg();\n        this.element.appendChild(this.svgObject);\n        this.setTheme();\n        this.createSecondaryElement();\n        this.renderBorder();\n        if (this.smithchartLegendModule && this.legendSettings.visible) {\n            this.legendBounds = this.smithchartLegendModule.renderLegend(this);\n        }\n        this.legendBounds = this.legendBounds ? this.legendBounds : { x: 0, y: 0, width: 0, height: 0 };\n        var areaBounds = new AreaBounds();\n        this.bounds = areaBounds.calculateAreaBounds(this, this.title, this.legendBounds);\n        if (this.title.text !== '' && this.title.visible) {\n            this.renderTitle(this.title, 'title', null);\n        }\n        var axisRender = new AxisRender();\n        axisRender.renderArea(this, this.bounds);\n        this.seriesrender = new SeriesRender();\n        this.seriesrender.draw(this, axisRender, this.bounds);\n        this.renderComplete();\n        this.allowServerDataBinding = true;\n        this.trigger(loaded, { smithchart: this });\n    };\n    Smithchart.prototype.createSecondaryElement = function () {\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n            var rect = this.element.getBoundingClientRect();\n            var svgRect = document.getElementById(this.element.id + '_svg');\n            if (svgRect) {\n                var svgClientRect = svgRect.getBoundingClientRect();\n                secondaryElement.style.left = Math.max(svgClientRect.left - rect.left, 0) + 'px';\n                secondaryElement.style.top = Math.max(svgClientRect.top - rect.top, 0) + 'px';\n            }\n        }\n        else {\n            removeElement(this.element.id + '_Secondary_Element');\n        }\n    };\n    /**\n     * To destroy the widget\n     *\n     * @returns {void}.\n     */\n    Smithchart.prototype.destroy = function () {\n        if (this.element) {\n            this.unWireEVents();\n            _super.prototype.destroy.call(this);\n            this.element.classList.remove('e-smithchart');\n            this.removeSvg();\n            this.svgObject = null;\n        }\n    };\n    /**\n     * To bind event handlers for smithchart.\n     */\n    Smithchart.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.smithchartOnClick, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.smithchartOnResize.bind(this));\n    };\n    Smithchart.prototype.mouseMove = function (e) {\n        if (e.type === 'touchmove') {\n            this.isTouch = true;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || this.isTouch;\n        }\n        if (this.tooltipRenderModule && !this.isTouch) {\n            this.tooltipRenderModule.smithchartMouseMove(this, e);\n        }\n    };\n    Smithchart.prototype.mouseEnd = function (e) {\n        if (e.type === 'touchend') {\n            this.isTouch = true;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n        }\n        if (this.tooltipRenderModule && this.isTouch) {\n            var tooltipElement_1 = this.tooltipRenderModule.smithchartMouseMove(this, e);\n            if (tooltipElement_1) {\n                this.fadeoutTo = +setTimeout(function () {\n                    tooltipElement_1.fadeOut();\n                }, 2000);\n            }\n        }\n    };\n    /**\n     * To handle the click event for the smithchart.\n     */\n    Smithchart.prototype.smithchartOnClick = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var parentElement = document.getElementById(targetId).parentElement;\n        var grpElement = document.getElementById(parentElement.id).parentElement;\n        if (grpElement.id === 'containerlegendItem_Group' && this.legendSettings.toggleVisibility) {\n            var childElement = parentElement.childNodes[1];\n            var circleElement = parentElement.childNodes[0];\n            var legendText = childElement.textContent;\n            var seriesIndex = void 0;\n            var fill = void 0;\n            for (var i = 0; i < this.smithchartLegendModule.legendSeries.length; i++) {\n                if (legendText === this.smithchartLegendModule.legendSeries[i]['text']) {\n                    seriesIndex = this.smithchartLegendModule.legendSeries[i].seriesIndex;\n                    fill = this.smithchartLegendModule.legendSeries[i].fill;\n                }\n            }\n            var seriesElement = document.getElementById(this.element.id + '_svg' + '_seriesCollection' + seriesIndex);\n            if (seriesElement.getAttribute('visibility') === 'visible') {\n                circleElement.setAttribute('fill', 'gray');\n                seriesElement.setAttribute('visibility', 'hidden');\n                this.series[seriesIndex].visibility = 'hidden';\n            }\n            else {\n                circleElement.setAttribute('fill', fill);\n                seriesElement.setAttribute('visibility', 'visible');\n                this.series[seriesIndex].visibility = 'visible';\n            }\n        }\n    };\n    /**\n     * To unbind event handlers from smithchart.\n     */\n    Smithchart.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.smithchartOnClick);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.smithchartOnResize);\n    };\n    Smithchart.prototype.print = function (id) {\n        var exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Handles the export method for chart control.\n     */\n    Smithchart.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    /**\n     * To handle the window resize event on smithchart.\n     */\n    Smithchart.prototype.smithchartOnResize = function () {\n        var _this = this;\n        this.animateSeries = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = +setTimeout(function () {\n            _this.render();\n        }, 500);\n        return false;\n    };\n    /**\n     * To provide the array of modules needed for smithchart rendering\n     *\n     * @private\n     */\n    Smithchart.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'SmithchartLegend',\n                args: [this]\n            });\n        }\n        for (var i = 0; i < this.series.length; i++) {\n            if (this.series[i].tooltip.visible) {\n                modules.push({\n                    member: 'TooltipRender',\n                    args: [this]\n                });\n                break;\n            }\n        }\n        return modules;\n    };\n    /**\n     * To Remove the SVG.\n     *\n     * @private\n     */\n    Smithchart.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        var removeLength = 0;\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > removeLength) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    __decorate([\n        Property('Impedance')\n    ], Smithchart.prototype, \"renderType\", void 0);\n    __decorate([\n        Property('')\n    ], Smithchart.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Smithchart.prototype, \"height\", void 0);\n    __decorate([\n        Property('Material')\n    ], Smithchart.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, SmithchartMargin)\n    ], Smithchart.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, SmithchartFont)\n    ], Smithchart.prototype, \"font\", void 0);\n    __decorate([\n        Complex({}, SmithchartBorder)\n    ], Smithchart.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Title)\n    ], Smithchart.prototype, \"title\", void 0);\n    __decorate([\n        Collection([{}], SmithchartSeries)\n    ], Smithchart.prototype, \"series\", void 0);\n    __decorate([\n        Complex({}, SmithchartLegendSettings)\n    ], Smithchart.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, SmithchartAxis)\n    ], Smithchart.prototype, \"horizontalAxis\", void 0);\n    __decorate([\n        Complex({}, SmithchartAxis)\n    ], Smithchart.prototype, \"radialAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], Smithchart.prototype, \"background\", void 0);\n    __decorate([\n        Property(10)\n    ], Smithchart.prototype, \"elementSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], Smithchart.prototype, \"radius\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"titleRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"subtitleRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], Smithchart.prototype, \"tooltipRender\", void 0);\n    Smithchart = __decorate([\n        NotifyPropertyChanges\n    ], Smithchart);\n    return Smithchart;\n}(Component));\nexport { Smithchart };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}