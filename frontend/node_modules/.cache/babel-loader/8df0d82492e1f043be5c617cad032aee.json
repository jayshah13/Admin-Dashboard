{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\n\nvar PaneProperties =\n/** @class */\nfunction (_super) {\n  __extends(PaneProperties, _super);\n\n  function PaneProperties() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], PaneProperties.prototype, \"size\", void 0);\n\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsible\", void 0);\n\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsed\", void 0);\n\n  __decorate([Property(true)], PaneProperties.prototype, \"resizable\", void 0);\n\n  __decorate([Property(null)], PaneProperties.prototype, \"min\", void 0);\n\n  __decorate([Property(null)], PaneProperties.prototype, \"max\", void 0);\n\n  __decorate([Property()], PaneProperties.prototype, \"content\", void 0);\n\n  __decorate([Property('')], PaneProperties.prototype, \"cssClass\", void 0);\n\n  return PaneProperties;\n}(ChildProperty);\n\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\n\nvar Splitter =\n/** @class */\nfunction (_super) {\n  __extends(Splitter, _super);\n  /**\n   * Initializes a new instance of the Splitter class.\n   *\n   * @param options  - Specifies Splitter model properties as options.\n   * @param element  - Specifies the element that is rendered as an Splitter.\n   */\n\n\n  function Splitter(options, element) {\n    return _super.call(this, options, element) || this;\n  }\n  /**\n   * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n   *\n   * @param  {SplitterModel} newProp - specifies the new property\n   * @param  {SplitterModel} oldProp - specifies the old property\n   * @returns {void}\n   * @private\n   */\n\n\n  Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n    if (!this.element.classList.contains(ROOT)) {\n      return;\n    }\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'height':\n          this.setSplitterSize(this.element, newProp.height, 'height');\n          break;\n\n        case 'width':\n          this.setSplitterSize(this.element, newProp.width, 'width');\n          break;\n\n        case 'cssClass':\n          this.setCssClass(this.element, newProp.cssClass);\n          break;\n\n        case 'enabled':\n          this.isEnabled(this.enabled);\n          break;\n\n        case 'enableReversePanes':\n          this.setReversePane();\n          break;\n\n        case 'separatorSize':\n          this.setSeparatorSize(newProp.separatorSize);\n          break;\n\n        case 'orientation':\n          this.changeOrientation(newProp.orientation);\n          break;\n\n        case 'paneSettings':\n          {\n            if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n              var paneCounts = Object.keys(newProp.paneSettings);\n\n              for (var i = 0; i < paneCounts.length; i++) {\n                var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n\n                for (var j = 0; j < changedPropsCount; j++) {\n                  var property = Object.keys(newProp.paneSettings[index])[j];\n\n                  switch (property) {\n                    case 'content':\n                      {\n                        var newValue = Object(newProp.paneSettings[index])[property];\n\n                        if (!isNullOrUndefined(newValue)) {\n                          this.allPanes[index].innerHTML = '';\n                          this.setTemplate(newValue, this.allPanes[index]);\n                        }\n\n                        break;\n                      }\n\n                    case 'resizable':\n                      {\n                        var newVal = Object(newProp.paneSettings[index])[property];\n                        this.resizableModel(index, newVal);\n                        break;\n                      }\n\n                    case 'collapsible':\n                      this.collapsibleModelUpdate(index);\n                      break;\n\n                    case 'collapsed':\n                      // eslint-disable-next-line\n                      newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                      break;\n\n                    case 'cssClass':\n                      this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                      break;\n\n                    case 'size':\n                      {\n                        var newValSize = Object(newProp.paneSettings[index])[property];\n\n                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                          this.updatePaneSize(newValSize, index);\n                        }\n\n                        break;\n                      }\n                  }\n                }\n              }\n            } else {\n              this.destroyPaneSettings();\n              this.allBars = [];\n              this.allPanes = [];\n              this.createSplitPane(this.element);\n              this.addSeparator(this.element);\n              this.getPanesDimensions();\n              this.setRTL(this.enableRtl);\n              this.isCollapsed();\n            }\n\n            break;\n          }\n\n        case 'enableRtl':\n          this.setRTL(newProp.enableRtl);\n          break;\n      }\n    }\n  };\n\n  Splitter.prototype.updatePaneSize = function (newValSize, index) {\n    this.allPanes[index].style.flexBasis = newValSize;\n    var flexPaneIndexes = [];\n    var staticPaneWidth;\n    var flexCount = 0;\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      } else if (this.paneSettings[i].size) {\n        staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n      }\n    }\n\n    staticPaneWidth = this.orientation === 'Horizontal' ? this.allBars[0].offsetWidth * this.allBars.length + staticPaneWidth : this.allBars[0].offsetHeight * this.allBars.length + staticPaneWidth;\n    var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight) - staticPaneWidth - this.border * 2;\n    var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n    }\n\n    this.allPanes[index].classList.add(STATIC_PANE);\n  };\n\n  Splitter.prototype.initializeValues = function () {\n    this.allPanes = [];\n    this.paneOrder = [];\n    this.separatorOrder = [];\n    this.allBars = [];\n    this.previousCoordinates = {};\n    this.currentCoordinates = {};\n    this.updatePrePaneInPercentage = false;\n    this.updateNextPaneInPercentage = false;\n    this.panesDimensions = [];\n    this.border = 0;\n    this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n    this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n    this.iconsDelay = 300;\n    this.templateElement = [];\n    this.collapseFlag = false;\n    this.expandFlag = true;\n  };\n\n  Splitter.prototype.preRender = function () {\n    this.initializeValues();\n    this.onReportWindowSize = this.reportWindowSize.bind(this);\n    this.onMouseMoveHandler = this.onMouseMove.bind(this);\n    this.onMouseUpHandler = this.onMouseUp.bind(this);\n    this.onTouchMoveHandler = this.onMouseMove.bind(this);\n    this.onTouchEndHandler = this.onMouseUp.bind(this);\n    this.wrapper = this.element.cloneNode(true);\n    this.wrapperParent = this.element.parentElement;\n    removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n    var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n    addClass([this.element], orientation);\n    var name = Browser.info.name;\n    var css = name === 'msie' ? 'e-ie' : '';\n    this.setCssClass(this.element, css);\n\n    if (Browser.isDevice) {\n      addClass([this.element], SPLIT_TOUCH);\n    }\n  };\n\n  Splitter.prototype.getPersistData = function () {\n    return this.addOnPersist(['paneSettings']);\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns {string} - returns the string value\n   * @private\n   */\n\n\n  Splitter.prototype.getModuleName = function () {\n    return 'splitter';\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Splitter.prototype.render = function () {\n    this.checkDataAttributes();\n    this.setCssClass(this.element, this.cssClass);\n    this.isEnabled(this.enabled);\n    this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n    this.createSplitPane(this.element);\n    this.addSeparator(this.element);\n    this.getPanesDimensions();\n    this.setPaneSettings();\n    this.setRTL(this.enableRtl);\n\n    if (this.enableReversePanes) {\n      this.setReversePane();\n    }\n\n    this.collapseFlag = true;\n    this.isCollapsed();\n    this.collapseFlag = false;\n    EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    this.renderComplete();\n    this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n    EventHandler.add(this.element, 'keydown', this.onMove, this);\n  };\n\n  Splitter.prototype.onDocumentClick = function (e) {\n    if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n      this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n      this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n    }\n  };\n\n  Splitter.prototype.checkPaneSize = function (e) {\n    var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n    var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n    var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n\n    if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n      var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n      var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n      this.totalPercent = previousFlexBasis + nextFlexBasis;\n      this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < this.convertPercentageToPixel(nextFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis + 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis - 1 + '%';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < this.convertPercentageToPixel(previousFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis - 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis + 1 + '%';\n        }\n      }\n    } else {\n      this.totalWidth = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth + this.nextPane.offsetWidth : this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < nextPaneSize + splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize + splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize < splitBarSize ? '0px' : nextPaneSize - splitBarSize + 'px';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < prePaneSize - splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize < splitBarSize ? '0px' : prePaneSize - splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize + splitBarSize + 'px';\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.onMove = function (event) {\n    if (this.allPanes.length > 1) {\n      var index = this.getSeparatorIndex(this.currentSeparator);\n      var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n      var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n      var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n\n      if ((this.orientation !== 'Horizontal' && event.keyCode === 38 || this.orientation === 'Horizontal' && event.keyCode === 39 || this.orientation === 'Horizontal' && event.keyCode === 37 || this.orientation !== 'Horizontal' && event.keyCode === 40) && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || isPrevpaneExpanded && !isNextpaneCollapsed) && document.activeElement.classList.contains(SPLIT_BAR) && this.paneSettings[index].resizable && this.paneSettings[index + 1].resizable) {\n        event.preventDefault();\n        this.checkPaneSize(event);\n        this.triggerResizing(event);\n      } else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n          this.collapse(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        } else {\n          this.expand(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.getMinInPixel = function (minValue) {\n    var min;\n\n    if (isNullOrUndefined(minValue)) {\n      return 0;\n    }\n\n    var paneMinRange = this.convertPixelToNumber(minValue.toString());\n\n    if (minValue.indexOf('%') > 0) {\n      paneMinRange = this.convertPercentageToPixel(minValue);\n    }\n\n    min = this.convertPixelToNumber(paneMinRange.toString());\n    return min;\n  };\n  /**\n   * @param {string} value - specifies the string value\n   * @returns {string} returns the string\n   * @hidden\n   */\n\n\n  Splitter.prototype.sanitizeHelper = function (value) {\n    if (this.enableHtmlSanitizer) {\n      var item = SanitizeHtmlHelper.beforeSanitize();\n      var beforeEvent = {\n        cancel: false,\n        helper: null\n      };\n      extend(item, item, beforeEvent);\n      this.trigger('beforeSanitizeHtml', item);\n\n      if (item.cancel && !isNullOrUndefined(item.helper)) {\n        value = item.helper(value);\n      } else if (!item.cancel) {\n        value = SanitizeHtmlHelper.serializeValue(item, value);\n      }\n    }\n\n    return value;\n  };\n\n  Splitter.prototype.checkDataAttributes = function () {\n    var api;\n    var value; // Element values\n\n    for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n      value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n\n      if (!isNullOrUndefined(value)) {\n        api = this.removeDataPrefix(this.validElementAttributes[dataIndex]); // eslint-disable-next-line\n\n        this[api] = value;\n      }\n    } // Pane values\n\n\n    for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n      for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n        value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n\n        if (!isNullOrUndefined(value)) {\n          api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n          value = api === 'collapsible' || api === 'resizable' ? value === 'true' : value;\n\n          if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n            this.paneSettings[paneIndex] = {\n              size: '',\n              min: null,\n              max: null,\n              content: '',\n              resizable: true,\n              collapsible: false,\n              collapsed: false\n            };\n          } // eslint-disable-next-line\n\n\n          var paneAPI = this.paneSettings[paneIndex][api];\n\n          if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n\n          if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.destroyPaneSettings = function () {\n    [].slice.call(this.element.children).forEach(function (el) {\n      detach(el);\n    });\n    this.restoreElem();\n  };\n\n  Splitter.prototype.setPaneSettings = function () {\n    var childCount = this.allPanes.length;\n    var paneCollection = [];\n    var paneValue = {\n      size: '',\n      min: null,\n      max: null,\n      content: '',\n      resizable: true,\n      collapsed: false,\n      collapsible: false,\n      cssClass: ''\n    };\n\n    for (var i = 0; i < childCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i])) {\n        paneCollection[i] = paneValue;\n      } else {\n        paneCollection[i] = this.paneSettings[i];\n      }\n    }\n\n    this.setProperties({\n      'paneSettings': paneCollection\n    }, true);\n  };\n\n  Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n    return this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow);\n  };\n\n  Splitter.prototype.removeDataPrefix = function (attribute) {\n    return attribute.slice(attribute.lastIndexOf('-') + 1);\n  };\n\n  Splitter.prototype.setRTL = function (rtl) {\n    // eslint-disable-next-line\n    rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n  };\n\n  Splitter.prototype.setReversePane = function () {\n    this.allPanes = this.allPanes.reverse();\n    this.allBars = this.allBars.reverse();\n    addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n    removeClass([this.allBars[0]], LAST_BAR);\n    this.setProperties({\n      'paneSettings': this.paneSettings.reverse()\n    }, true);\n\n    if (this.enableReversePanes) {\n      this.element.setAttribute('dir', 'rtl');\n    } else {\n      this.element.removeAttribute('dir');\n    }\n  };\n\n  Splitter.prototype.setSplitterSize = function (element, size, property) {\n    var style = property === 'width' ? {\n      'width': formatUnit(size)\n    } : {\n      'height': formatUnit(size)\n    };\n    setStyleAttribute(element, style);\n  };\n\n  Splitter.prototype.getPanesDimensions = function () {\n    for (var index = 0; index < this.allPanes.length; index++) {\n      // eslint-disable-next-line\n      this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) : this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n    }\n  };\n\n  Splitter.prototype.setCssClass = function (element, className) {\n    if (className) {\n      addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n    }\n  };\n\n  Splitter.prototype.hideResizer = function (target) {\n    addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n  };\n\n  Splitter.prototype.showResizer = function (target) {\n    if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) && !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n      removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    }\n  };\n\n  Splitter.prototype.resizableModel = function (index, newVal) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var i = index;\n    EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n\n    if (newVal) {\n      EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n\n      if (this.isResizable()) {\n        this.showResizer(this.allBars[paneIndex]);\n        removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n        this.allBars[paneIndex].classList.add(RESIZABLE_BAR); // eslint-disable-next-line\n\n        index === this.allBars.length ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n        this.updateResizablePanes(i);\n      }\n    } else {\n      this.updateResizablePanes(i);\n      this.hideResizer(this.allBars[paneIndex]);\n      this.allBars[paneIndex].classList.remove(RESIZABLE_BAR); // eslint-disable-next-line\n\n      index === this.allBars.length ? this.allPanes[index].classList.remove(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n    }\n  };\n\n  Splitter.prototype.collapsibleModelUpdate = function (index) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var arrow2 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n    var arrow1 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n    this.paneCollapsible(this.allPanes[index], index);\n    this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n  };\n\n  Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n    return selectAll('.' + arrow, this.allBars[barIndex])[0];\n  };\n\n  Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n    if (!isNullOrUndefined(index)) {\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n      }\n\n      targetEle.click();\n    }\n  };\n\n  Splitter.prototype.isCollapsed = function (index) {\n    var _this = this;\n\n    if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n      return;\n    }\n\n    this.expandFlag = false;\n\n    if (!isNullOrUndefined(index)) {\n      this.collapseFlag = true;\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) : this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n      }\n\n      var event_1 = {\n        target: targetEle\n      };\n      var eventArgs = this.beforeAction(event_1);\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          var collapsedindex = [];\n          collapsedindex[0] = index;\n          var j = 1;\n\n          for (var i = 0; i < _this.allPanes.length; i++) {\n            if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n              collapsedindex[j] = i;\n              j++;\n            }\n          }\n\n          collapsedindex = collapsedindex.sort();\n\n          _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n\n          for (var i = 0; i < collapsedindex.length; i++) {\n            if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n              _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n            }\n          }\n\n          for (var i = collapsedindex.length; i > 0; i--) {\n            if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n              var targetArrow = _this.targetArrows();\n\n              _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n            }\n          }\n\n          var collapseEventArgs = _this.afterAction(event_1);\n\n          _this.trigger('collapsed', collapseEventArgs);\n\n          _this.collapseFlag = false;\n        }\n      });\n    } else {\n      for (var m = 0; m < this.allPanes.length; m++) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n          this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n      }\n\n      for (var m = this.allPanes.length - 1; m >= 0; m--) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed && !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n          var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n\n          if (m !== 0) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n\n          if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n        }\n      }\n    }\n\n    this.expandFlag = true;\n  };\n\n  Splitter.prototype.targetArrows = function () {\n    this.splitterProperty();\n    return {\n      collapseArrow: this.orientation === 'Horizontal' ? ARROW_LEFT : ARROW_UP,\n      lastBarArrow: this.orientation === 'Vertical' ? ARROW_DOWN : ARROW_RIGHT\n    };\n  };\n\n  Splitter.prototype.collapsedOnchange = function (index) {\n    if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed) && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n      this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n    }\n  };\n\n  Splitter.prototype.isEnabled = function (enabled) {\n    // eslint-disable-next-line\n    enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n  };\n\n  Splitter.prototype.setSeparatorSize = function (size) {\n    var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n    var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n\n    for (var index = 0; index < this.allBars.length; index++) {\n      var splitBar = selectAll('.' + separator, this.element)[index];\n      var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n\n      if (this.orientation === 'Horizontal') {\n        splitBar.style.width = sizeValue;\n\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.width = sizeValue;\n        }\n      } else {\n        splitBar.style.height = sizeValue;\n\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.height = sizeValue;\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.changeOrientation = function (orientation) {\n    var isVertical = orientation === 'Vertical';\n    this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n    this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n\n    for (var index = 0; index < this.allPanes.length; index++) {\n      this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n      this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n    }\n\n    for (var index = 0; index < this.allBars.length; index++) {\n      detach(this.allBars[index]);\n    }\n\n    this.allBars = [];\n    this.addSeparator(this.element);\n  };\n\n  Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n    var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n    return paneEle;\n  };\n\n  Splitter.prototype.collectPanes = function (childNodes) {\n    var elements = [];\n\n    for (var i = 0; i < childNodes.length; i++) {\n      if (childNodes[i].classList.contains(PANE)) {\n        elements.push(childNodes[i]);\n      }\n    }\n\n    return elements;\n  };\n\n  Splitter.prototype.getPrevPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n  };\n\n  Splitter.prototype.getNextPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n  };\n\n  Splitter.prototype.getOrderPane = function (order) {\n    var pane;\n\n    for (var i = 0; i < this.element.children.length; i++) {\n      if (parseInt(this.element.children[i].style.order, 10) === order) {\n        pane = this.element.children[i];\n      }\n    }\n\n    return pane;\n  };\n\n  Splitter.prototype.getOrderIndex = function (order, type) {\n    var index;\n    var panes;\n\n    if (type === 'pane') {\n      panes = this.allPanes;\n    } else {\n      panes = this.allBars;\n    }\n\n    for (var i = 0; i < panes.length; i++) {\n      if (parseInt(panes[i].style.order, 10) === order) {\n        index = i;\n      }\n    }\n\n    return index;\n  };\n\n  Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n    var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px'; // eslint-disable-next-line\n\n    this.orientation === 'Horizontal' ? resizeHanlder.style.width = sizeValue : resizeHanlder.style.height = sizeValue;\n  };\n\n  Splitter.prototype.addResizeHandler = function (currentBar) {\n    var resizeHanlder = this.createElement('div');\n    addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n    this.updateSeparatorSize(resizeHanlder);\n    currentBar.appendChild(resizeHanlder);\n  };\n\n  Splitter.prototype.getHeight = function (target) {\n    var height = this.height;\n    height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n    return height;\n  };\n\n  Splitter.prototype.getWidth = function (target) {\n    var width = this.width;\n    width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n    return width;\n  };\n\n  Splitter.prototype.setDimension = function (height, width) {\n    setStyleAttribute(this.element, {\n      'height': height,\n      'width': width\n    });\n  };\n\n  Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          // eslint-disable-next-line\n          this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n        }\n\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          if (this.paneSettings[index + 1].collapsible) {\n            // eslint-disable-next-line\n            this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.updateIconClass = function () {\n    if (this.orientation === 'Horizontal') {\n      this.leftArrow = ARROW_LEFT;\n      this.rightArrow = ARROW_RIGHT;\n    } else {\n      this.leftArrow = ARROW_UP;\n      this.rightArrow = ARROW_DOWN;\n    }\n  };\n\n  Splitter.prototype.createSeparator = function (i) {\n    var separator = this.createElement('div');\n    this.allBars.push(separator);\n    var arrow1 = this.createElement('button');\n    var arrow2 = this.createElement('button');\n    arrow1.setAttribute('tabindex', '-1');\n    arrow2.setAttribute('tabindex', '-1');\n    arrow1.setAttribute('aria-label', 'Toggle navigation');\n    arrow2.setAttribute('aria-label', 'Toggle navigation');\n    arrow1.setAttribute('type', 'button');\n    arrow2.setAttribute('type', 'button');\n    var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px'; // eslint-disable-next-line\n\n    var proxy = this;\n\n    if (this.orientation === 'Horizontal') {\n      this.updateIconClass();\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n      separator.style.width = size;\n    } else {\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n      this.updateIconClass();\n      separator.style.height = size;\n    }\n\n    this.addMouseActions(separator);\n    separator.appendChild(arrow2);\n    this.addResizeHandler(separator);\n    separator.appendChild(arrow1);\n    this.updateCollapseIcons(i, arrow1, arrow2);\n    separator.setAttribute('tabindex', '0');\n\n    if (this.enableReversePanes) {\n      separator.setAttribute('dir', 'ltr');\n    } else {\n      separator.removeAttribute('dir');\n    }\n\n    separator.addEventListener('focus', function () {\n      separator.classList.add(SPLIT_BAR_ACTIVE);\n      proxy.currentSeparator = separator;\n      proxy.getPaneDetails();\n    });\n    separator.addEventListener('blur', function () {\n      separator.classList.remove(SPLIT_BAR_ACTIVE);\n    });\n    return separator;\n  };\n\n  Splitter.prototype.updateResizablePanes = function (index) {\n    this.getPaneDetails(); // eslint-disable-next-line\n\n    this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n  };\n\n  Splitter.prototype.addSeparator = function (target) {\n    var childCount = this.allPanes.length;\n    var clonedEle = target.children;\n    var separator;\n    var proxy;\n\n    for (var i = 0; i < childCount; i++) {\n      if (i < childCount - 1) {\n        separator = this.createSeparator(i);\n        setStyleAttribute(separator, {\n          'order': i * 2 + 1\n        });\n        this.separatorOrder.push(i * 2 + 1);\n        clonedEle[i].parentNode.appendChild(separator);\n        this.currentSeparator = separator;\n        separator.setAttribute('role', 'separator');\n        separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n        this.wireClickEvents();\n\n        if (!isNullOrUndefined(separator)) {\n          if (this.isResizable()) {\n            EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n            var eventName = Browser.info.name === 'msie' ? 'pointerdown' : 'touchstart';\n            EventHandler.add(separator, eventName, this.onMouseDown, this);\n            separator.classList.add(RESIZABLE_BAR);\n            this.updateResizablePanes(i);\n          } else {\n            addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n          }\n        }\n      } else {\n        if (separator) {\n          addClass([separator], LAST_BAR);\n        }\n\n        if (childCount > 1) {\n          this.updateResizablePanes(i);\n        }\n      }\n    }\n\n    if (Browser.info.name === 'msie') {\n      var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n\n      for (var i = 0; i < allBar.length; i++) {\n        var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n        allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n        allBar[i].style.paddingRight = sepSize / 2 + 'px';\n      }\n    }\n  };\n\n  Splitter.prototype.isResizable = function () {\n    var resizable = false;\n\n    if (!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) && this.paneSettings[this.getPreviousPaneIndex()].resizable && !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) && this.paneSettings[this.getNextPaneIndex()].resizable || isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n      resizable = true;\n    }\n\n    return resizable;\n  };\n\n  Splitter.prototype.addMouseActions = function (separator) {\n    var _this = this;\n\n    var sTout;\n    var hoverTimeOut;\n    separator.addEventListener('mouseenter', function () {\n      /* istanbul ignore next */\n      sTout = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n    separator.addEventListener('mouseleave', function () {\n      clearTimeout(sTout);\n      removeClass([separator], [SPLIT_BAR_HOVER]);\n    });\n    separator.addEventListener('mouseout', function () {\n      clearTimeout(hoverTimeOut);\n    });\n    separator.addEventListener('mouseover', function () {\n      /* istanbul ignore next */\n      hoverTimeOut = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n  };\n\n  Splitter.prototype.getEventType = function (e) {\n    return e.indexOf('mouse') > -1 ? 'mouse' : 'touch';\n  };\n\n  Splitter.prototype.updateCurrentSeparator = function (target) {\n    this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n  };\n\n  Splitter.prototype.isSeparator = function (target) {\n    return target.classList.contains(SPLIT_BAR) ? false : true;\n  };\n\n  Splitter.prototype.isMouseEvent = function (e) {\n    var isMouse = false;\n\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      isMouse = true;\n    }\n\n    return isMouse;\n  };\n\n  Splitter.prototype.updateCursorPosition = function (e, type) {\n    if (this.isMouseEvent(e)) {\n      this.changeCoordinates({\n        x: e.pageX,\n        y: e.pageY\n      }, type);\n    } else {\n      var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n      this.changeCoordinates({\n        x: eventType.pageX,\n        y: eventType.pageY\n      }, type);\n    }\n  };\n\n  Splitter.prototype.changeCoordinates = function (coordinates, type) {\n    if (type === 'previous') {\n      this.previousCoordinates = coordinates;\n    } else {\n      this.currentCoordinates = coordinates;\n    }\n  };\n\n  Splitter.prototype.reportWindowSize = function () {\n    var _this = this;\n\n    var paneCount = this.allPanes.length;\n\n    if (!document.body.contains(this.element)) {\n      document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n      return;\n    }\n\n    for (var i = 0; i < paneCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n\n      if (paneCount - 1 === i) {\n        var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n\n        if (staticPaneCount === paneCount) {\n          removeClass([this.allPanes[i]], STATIC_PANE);\n        }\n      }\n    }\n\n    if (paneCount > 0) {\n      setTimeout(function () {\n        _this.updateSplitterSize(true);\n      }, 200);\n    }\n  };\n\n  Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n    var totalWidth = 0;\n    var flexPaneIndexes = [];\n    var flexCount = 0;\n    var children = this.element.children;\n\n    for (var i = 0; i < children.length; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n\n    for (var j = 0; j < this.allBars.length; j++) {\n      totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) + parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) + parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n    }\n\n    var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth - (this.border * 2 + totalWidth) : this.element.offsetHeight - (this.border * 2 + totalWidth);\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      }\n    }\n\n    var avgDiffWidth = diff / flexPaneIndexes.length;\n\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ? this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth + 'px' : this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth + 'px';\n    }\n\n    if (this.allPanes.length === 2 && iswindowResize) {\n      var paneCount = this.allPanes.length;\n      var minValue = void 0;\n      var paneMinRange = void 0;\n      var paneIndex = 0;\n      var updatePane = void 0;\n      var flexPane = void 0;\n\n      for (var i = 0; i < paneCount; i++) {\n        if (!isNullOrUndefined(this.paneSettings[i].min)) {\n          paneMinRange = this.convertPixelToNumber(this.paneSettings[i].min.toString());\n\n          if (this.paneSettings[i].min.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n          }\n\n          minValue = this.convertPixelToNumber(paneMinRange.toString());\n\n          if (this.allPanes[i].offsetWidth < minValue) {\n            if (i === paneIndex) {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i + 1];\n            } else {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i - 1];\n            }\n\n            var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n            var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n            updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%' : updatePane.offsetWidth + sizeDiff + 'px';\n            flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ? this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : flexPane.offsetWidth - sizeDiff + 'px';\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.wireResizeEvents = function () {\n    document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.addEventListener('mouseup', this.onMouseUpHandler, true);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n\n  Splitter.prototype.unwireResizeEvents = function () {\n    this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n    document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n\n  Splitter.prototype.wireClickEvents = function () {\n    EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n  };\n\n  Splitter.prototype.clickHandler = function (e) {\n    if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n      var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n\n      if (hoverBars.length > 0) {\n        removeClass(hoverBars, SPLIT_BAR_HOVER);\n      }\n\n      e.target.classList.add(SPLIT_BAR_HOVER);\n    }\n\n    var icon = e.target;\n\n    if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n      this.collapseAction(e);\n    }\n\n    if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n      this.expandAction(e);\n    }\n\n    var totalWidth = 0;\n    var children = this.element.children;\n\n    for (var i = 0; i < children.length; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n\n    if (totalWidth > this.element.offsetWidth) {\n      this.updateSplitterSize();\n    }\n  };\n\n  Splitter.prototype.expandAction = function (e) {\n    var _this = this;\n\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n\n    if (this.expandFlag) {\n      this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n        if (!beforeExpandArgs.cancel) {\n          _this.expandPane(e);\n        }\n\n        var expandEventArgs = _this.afterAction(e);\n\n        _this.trigger('expanded', expandEventArgs);\n      });\n    } else {\n      this.expandPane(e);\n    }\n  };\n\n  Splitter.prototype.expandPane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = !this.previousPane.classList.contains(COLLAPSE_PANE) && this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n\n    if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.nextPane], EXPAND_PANE);\n      removeClass([this.previousPane], collapseClass);\n      addClass([this.previousPane], EXPAND_PANE);\n      addClass([this.nextPane], collapseClass);\n\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, true);\n      }\n    } else {\n      removeClass([this.previousPane], collapseClass);\n      removeClass([this.nextPane], EXPAND_PANE);\n\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, false);\n      }\n    }\n\n    this.updateIconsOnExpand(e);\n    this.previousPane.setAttribute('aria-expanded', 'true');\n    this.nextPane.setAttribute('aria-expanded', 'false');\n    this.updateFlexGrow(this.checkStaticPanes());\n\n    if (flexStatus) {\n      this.previousPane.classList.remove(EXPAND_PANE);\n      this.previousPane.style.flexGrow = '';\n    }\n  };\n\n  Splitter.prototype.checkStaticPanes = function () {\n    var staticPane = true;\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n        if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n          staticPane = true;\n        } else {\n          staticPane = false;\n        }\n      }\n    }\n\n    return staticPane;\n  };\n\n  Splitter.prototype.updateFlexGrow = function (status) {\n    var collapseCount = 0;\n\n    for (var j = 0; j < this.element.children.length; j++) {\n      if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n        collapseCount = collapseCount + 1;\n      }\n    }\n\n    var visiblePane = collapseCount === this.allPanes.length - 2;\n    var panes = this.allPanes;\n\n    for (var i = 0; i < panes.length; i++) {\n      if (panes[i].classList.contains(EXPAND_PANE)) {\n        panes[i].style.flexGrow = '1';\n      } else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n        panes[i].style.flexGrow = '0';\n      } else {\n        panes[i].style.flexGrow = '';\n      }\n\n      if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n        this.nextPane.style.flexGrow = '1';\n      }\n\n      if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size && i !== this.allPanes.length - 1) {\n        panes[i].style.flexGrow = '';\n      }\n    }\n  };\n\n  Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n    addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n\n  Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n    removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n\n  Splitter.prototype.updateIconsOnCollapse = function (e) {\n    this.splitterProperty();\n\n    if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      addClass([e.target], HIDE_ICON);\n\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      this.resizableModel(this.currentBarIndex, false);\n\n      if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n      }\n\n      if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.leftArrow);\n        } else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n        }\n      }\n\n      if (!isNullOrUndefined(this.prevBar)) {\n        this.resizableModel(this.currentBarIndex - 1, false);\n        this.hideTargetBarIcon(this.prevBar, this.arrow);\n      }\n\n      if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n    } else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n\n      if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.currentBarIndex + 1].resizable) {\n        this.resizableModel(this.currentBarIndex + 1, true);\n      }\n\n      if (!this.paneSettings[this.currentBarIndex].collapsible) {\n        addClass([e.target], HIDE_ICON);\n      }\n\n      if (this.previousPane && this.prevPaneIndex === 0 && this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n      }\n\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n      }\n\n      if (!this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n\n      if (!isNullOrUndefined(this.nextBar)) {\n        if (this.nextPane.nextElementSibling && this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex + 1].collapsible || !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.nextBar, this.leftArrow);\n        } else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible && this.paneSettings[this.currentBarIndex]) {\n          this.hideTargetBarIcon(this.nextBar, this.arrow);\n        }\n      }\n\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n        this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n\n  Splitter.prototype.collapseAction = function (e) {\n    var _this = this;\n\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n\n    if (this.collapseFlag) {\n      this.collapsePane(e);\n    } else {\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          _this.collapsePane(e);\n\n          var collapseEventArgs = _this.afterAction(e);\n\n          _this.trigger('collapsed', collapseEventArgs);\n        }\n      });\n    }\n  };\n\n  Splitter.prototype.collapsePane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = this.previousPane.classList.contains(STATIC_PANE) && !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !(collapseCount === this.allPanes.length - 2) || this.nextPane.classList.contains(COLLAPSE_PANE) && !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n\n    if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, false);\n      }\n    } else {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n      addClass([this.nextPane], EXPAND_PANE);\n      addClass([this.previousPane], collapseClass);\n\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, true);\n      }\n    }\n\n    this.updateIconsOnCollapse(e);\n    this.previousPane.setAttribute('aria-expanded', 'false');\n    this.nextPane.setAttribute('aria-expanded', 'true');\n    this.updateFlexGrow(this.checkStaticPanes());\n\n    if (flexStatus) {\n      this.nextPane.classList.remove(EXPAND_PANE);\n      this.nextPane.style.flexGrow = '';\n    }\n  };\n\n  Splitter.prototype.removeStaticPanes = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n    }\n  };\n\n  Splitter.prototype.beforeAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n    return eventArgs;\n  };\n\n  Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n    var paneValues = this.paneSettings;\n    paneValues[index].collapsed = collapsed;\n    this.setProperties({\n      'paneSettings': paneValues\n    }, true);\n  };\n\n  Splitter.prototype.splitterProperty = function () {\n    this.splitInstance = {\n      currentBarIndex: this.currentBarIndex,\n      nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n      prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n      prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n      nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n      nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n      prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n      nextPaneIndex: this.getNextPaneIndex(),\n      prevPaneIndex: this.getPreviousPaneIndex(),\n      nextPaneNextEle: this.nextPane.nextElementSibling,\n      prevPanePreEle: this.previousPane.previousElementSibling\n    };\n  };\n\n  Splitter.prototype.showCurrentBarIcon = function () {\n    removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n  };\n\n  Splitter.prototype.updateIconsOnExpand = function (e) {\n    this.splitterProperty();\n    addClass([e.target], HIDE_ICON);\n\n    if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        removeClass([e.target], HIDE_ICON);\n      }\n\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n\n      if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n        if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n          this.resizableModel(this.currentBarIndex - 1, true);\n        }\n\n        if (this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n\n        if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.arrow);\n\n          if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n            this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n          }\n        } else if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      } else {\n        if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible && this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex - 1].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n\n        if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      }\n    } else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n      this.resizableModel(this.currentBarIndex, false);\n      this.resizableModel(this.currentBarIndex + 1, false);\n\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      if (!isNullOrUndefined(this.nextBar)) {\n        this.hideTargetBarIcon(this.nextBar, this.arrow);\n      }\n\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && !this.paneSettings[this.nextPaneIndex].collapsible && this.splitInstance.nextPaneCollapsed) {\n        this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n      }\n\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n\n  Splitter.prototype.afterAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator\n    };\n    return eventArgs;\n  };\n\n  Splitter.prototype.currentIndex = function (e) {\n    this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n  };\n\n  Splitter.prototype.getSeparatorIndex = function (target) {\n    var array = [].slice.call(this.allBars);\n    array = this.enableReversePanes ? array.reverse() : array;\n    return array.indexOf(target);\n  };\n\n  Splitter.prototype.getPrevBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar - 1];\n    return prevbar;\n  };\n\n  Splitter.prototype.getNextBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar + 1];\n    return prevbar;\n  };\n\n  Splitter.prototype.updateBars = function (index) {\n    this.prevBar = this.getPrevBar(index);\n    this.nextBar = this.getNextBar(index);\n  };\n\n  Splitter.prototype.splitterDetails = function (e) {\n    if (this.orientation === 'Horizontal') {\n      this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n    } else {\n      this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n    }\n\n    this.updateCurrentSeparator(e.target);\n    this.currentIndex(e);\n    this.updateBars(this.currentBarIndex);\n    this.getPaneDetails();\n  };\n\n  Splitter.prototype.triggerResizing = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n      separator: this.currentSeparator\n    };\n    this.trigger('resizing', eventArgs);\n  };\n\n  Splitter.prototype.onMouseDown = function (e) {\n    var _this = this;\n\n    e.preventDefault();\n    var target = e.target;\n\n    if (target.classList.contains(NAVIGATE_ARROW)) {\n      return;\n    }\n\n    this.updateCurrentSeparator(target);\n    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.updateCursorPosition(e, 'previous');\n    this.getPaneDetails();\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n    }\n\n    this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n      if (!resizeStartArgs.cancel) {\n        _this.wireResizeEvents();\n\n        _this.checkPaneSize(e);\n      }\n    });\n  };\n\n  Splitter.prototype.updatePaneFlexBasis = function (pane) {\n    var previous;\n\n    if (pane.style.flexBasis.indexOf('%') > 0) {\n      previous = this.removePercentageUnit(pane.style.flexBasis);\n    } else {\n      if (pane.style.flexBasis !== '') {\n        previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n      } else {\n        var offset = this.orientation === 'Horizontal' ? pane.offsetWidth : pane.offsetHeight;\n        previous = this.convertPixelToPercentage(offset);\n      }\n    }\n\n    return previous;\n  };\n\n  Splitter.prototype.removePercentageUnit = function (value) {\n    return parseFloat(value.slice(0, value.indexOf('%')));\n  };\n\n  Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n    var percentage = value.toString();\n    var convertedValue;\n\n    if (percentage.indexOf('%') > -1) {\n      convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n      var offsetValue = void 0;\n\n      if (!isNullOrUndefined(targetElement)) {\n        offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n      } else {\n        offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n      }\n\n      convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n    } else {\n      convertedValue = parseInt(percentage, 10);\n    }\n\n    return convertedValue;\n  };\n\n  Splitter.prototype.convertPixelToPercentage = function (value) {\n    var offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return value / offsetValue * 100;\n  };\n\n  Splitter.prototype.convertPixelToNumber = function (value) {\n    if (value.indexOf('p') > -1) {\n      return parseFloat(value.slice(0, value.indexOf('p')));\n    } else {\n      return parseFloat(value);\n    }\n  };\n\n  Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n    var separatorPosition = this.orientation === 'Horizontal' ? this.currentCoordinates.x - rectValue : this.currentCoordinates.y - rectValue;\n    var separator;\n    separator = separatorPosition / offsetValue;\n    separator = separator > 1 ? 1 : separator < 0 ? 0 : separator;\n    return separator * offsetValue;\n  };\n\n  Splitter.prototype.getSeparatorPosition = function (e) {\n    this.updateCursorPosition(e, 'current');\n    var rectBound = this.orientation === 'Horizontal' ? this.element.getBoundingClientRect().left + window.scrollX : this.element.getBoundingClientRect().top + window.scrollY;\n    var offSet = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return this.calcDragPosition(rectBound, offSet);\n  };\n\n  Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n    var defaultVal = selection === 'min' ? 0 : null; // eslint-disable-next-line\n\n    var paneValue = null;\n\n    if (selection === 'min') {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n        paneValue = this.paneSettings[paneIndex].min;\n      }\n    } else {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n        paneValue = this.paneSettings[paneIndex].max;\n      }\n    }\n\n    if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(paneValue)) {\n      if (paneValue.indexOf('%') > 0) {\n        paneValue = this.convertPercentageToPixel(paneValue).toString();\n      }\n\n      return this.convertPixelToNumber(paneValue);\n    } else {\n      return defaultVal;\n    }\n  };\n\n  Splitter.prototype.getPreviousPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 : parseInt(this.currentSeparator.style.order, 10) - 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n\n  Splitter.prototype.getNextPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 : parseInt(this.currentSeparator.style.order, 10) + 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n\n  Splitter.prototype.getPaneDetails = function () {\n    var prevPane = null;\n    var nextPane = null;\n    this.order = parseInt(this.currentSeparator.style.order, 10);\n\n    if (this.allPanes.length > 1) {\n      prevPane = this.getPrevPane(this.order);\n      nextPane = this.getNextPane(this.order);\n    }\n\n    if (prevPane && nextPane) {\n      this.previousPane = prevPane;\n      this.nextPane = nextPane;\n      this.prevPaneIndex = this.getPreviousPaneIndex();\n      this.nextPaneIndex = this.getNextPaneIndex();\n    } else {\n      return;\n    }\n  };\n\n  Splitter.prototype.getPaneHeight = function (pane) {\n    return this.orientation === 'Horizontal' ? pane.offsetWidth.toString() : pane.offsetHeight.toString();\n  };\n\n  Splitter.prototype.isValidSize = function (paneIndex) {\n    var isValid = false;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].size) && this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n      isValid = true;\n    }\n\n    return isValid;\n  };\n\n  Splitter.prototype.getPaneDimensions = function () {\n    this.previousPaneHeightWidth = this.previousPane.style.flexBasis === '' ? this.getPaneHeight(this.previousPane) : this.previousPane.style.flexBasis;\n    this.nextPaneHeightWidth = this.nextPane.style.flexBasis === '' ? this.getPaneHeight(this.nextPane) : this.nextPane.style.flexBasis;\n\n    if (this.isValidSize(this.prevPaneIndex)) {\n      this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n      this.updatePrePaneInPercentage = true;\n    }\n\n    if (this.isValidSize(this.nextPaneIndex)) {\n      this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n      this.updateNextPaneInPercentage = true;\n    }\n\n    this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n    this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n  };\n\n  Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n    var coordinatesChanged = true;\n\n    if (pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y) {\n      coordinatesChanged = false;\n    }\n\n    return coordinatesChanged;\n  };\n\n  Splitter.prototype.isCursorMoved = function (e) {\n    var cursorMoved = true;\n\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n    } else {\n      cursorMoved = Browser.info.name !== 'msie' ? this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) : this.checkCoordinates(e.pageX, e.pageY);\n    }\n\n    return cursorMoved;\n  };\n\n  Splitter.prototype.getBorder = function () {\n    this.border = 0;\n    var border = this.orientation === 'Horizontal' ? (this.element.offsetWidth - this.element.clientWidth) / 2 : (this.element.offsetHeight - this.element.clientHeight) / 2;\n    this.border = Browser.info.name !== 'chrome' ? this.border : border;\n  };\n\n  Splitter.prototype.onMouseMove = function (e) {\n    if (!this.isCursorMoved(e)) {\n      return;\n    }\n\n    this.getPaneDetails();\n    this.getPaneDimensions();\n    this.triggerResizing(e);\n    var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n    var separatorNewPosition;\n    this.getBorder();\n\n    if (this.orientation === 'Horizontal') {\n      separatorNewPosition = this.element.getBoundingClientRect().left + left - this.currentSeparator.getBoundingClientRect().left + this.border;\n    } else {\n      separatorNewPosition = this.element.getBoundingClientRect().top + left - this.currentSeparator.getBoundingClientRect().top + this.border;\n    }\n\n    this.nextPaneHeightWidth = typeof this.nextPaneHeightWidth === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1 ? this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n    this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n    this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n    this.validateMinMaxValues();\n\n    if (this.nextPaneCurrentWidth < 0) {\n      this.nextPaneCurrentWidth = 0;\n    }\n    /* istanbul ignore next */\n\n\n    if (this.prevPaneCurrentWidth < 0) {\n      this.prevPaneCurrentWidth = 0;\n    }\n\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth > this.totalWidth) {\n      if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      } else {\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      }\n    }\n    /* istanbul ignore next */\n\n\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth < this.totalWidth) {\n      var difference = this.totalWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth);\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n    }\n\n    this.calculateCurrentDimensions();\n    this.addStaticPaneClass();\n    this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n    this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n\n    if (!(this.allPanes.length > 2)) {\n      this.updateSplitterSize();\n    }\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMinRange = null;\n    var paneMinDimensions;\n    var difference = 0;\n    var validatedVal;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n      paneMinRange = this.paneSettings[paneIndex].min.toString();\n    }\n\n    if (!isNullOrUndefined(paneMinRange)) {\n      if (paneMinRange.indexOf('%') > 0) {\n        paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n      }\n\n      paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n\n      if (paneCurrentWidth < paneMinDimensions) {\n        difference = paneCurrentWidth - paneMinDimensions <= 0 ? 0 : paneCurrentWidth - paneMinDimensions;\n        this.totalWidth = this.totalWidth - difference;\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMinDimensions;\n      }\n    }\n\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMaxRange = null;\n    var paneMaxDimensions;\n    var validatedVal;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n      paneMaxRange = this.paneSettings[paneIndex].max.toString();\n    }\n\n    if (!isNullOrUndefined(paneMaxRange)) {\n      if (paneMaxRange.indexOf('%') > 0) {\n        paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n      }\n\n      paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n\n      if (paneCurrentWidth > paneMaxDimensions) {\n        this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMaxDimensions;\n      }\n    }\n\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  };\n\n  Splitter.prototype.validateMinMaxValues = function () {\n    //validate previous pane minimum range\n    this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane); // Validate next pane minimum range\n\n    this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane); // validate previous pane maximum range\n\n    this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane); // validate next pane maximum range\n\n    this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n  };\n\n  Splitter.prototype.equatePaneWidths = function () {\n    var difference;\n\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth > this.totalPercent) {\n      difference = this.prevPaneCurrentWidth + this.nextPaneCurrentWidth - this.totalPercent;\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - difference / 2 + '%';\n    }\n\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth < this.totalPercent) {\n      difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference / 2 + '%';\n    }\n  };\n\n  Splitter.prototype.calculateCurrentDimensions = function () {\n    if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n      this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth) * 10) / 10));\n      this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth) * 10) / 10));\n\n      if (this.prevPaneCurrentWidth === 0) {\n        this.nextPaneCurrentWidth = this.totalPercent;\n      }\n\n      if (this.nextPaneCurrentWidth === 0) {\n        this.prevPaneCurrentWidth = this.totalPercent;\n      }\n\n      if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n        this.equatePaneWidths();\n      } else {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n      }\n\n      this.prevPaneCurrentWidth = this.updatePrePaneInPercentage ? this.prevPaneCurrentWidth : this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n      this.nextPaneCurrentWidth = this.updateNextPaneInPercentage ? this.nextPaneCurrentWidth : this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n      this.updatePrePaneInPercentage = false;\n      this.updateNextPaneInPercentage = false;\n    } else {\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n    }\n  };\n\n  Splitter.prototype.addStaticPaneClass = function () {\n    if (!this.previousPane.classList.contains(STATIC_PANE)) {\n      this.previousPane.classList.add(STATIC_PANE);\n    }\n\n    if (!this.nextPane.classList.contains(STATIC_PANE)) {\n      this.nextPane.classList.add(STATIC_PANE);\n    }\n  };\n\n  Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n    var separatorTopLeft = this.orientation === 'Horizontal' ? this.currentSeparator.offsetLeft + window.scrollX : this.currentSeparator.offsetTop;\n    var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n    var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n    var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n    var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n    var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n    var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n    var validatedSize = draggedPos;\n\n    if (draggedPos > nextPaneRange - pane2MinSize) {\n      validatedSize = nextPaneRange - pane2MinSize;\n    } else if (draggedPos < prePaneRange + pane1MinSize) {\n      validatedSize = prePaneRange + pane1MinSize;\n    }\n\n    if (!isNullOrUndefined(pane1MaxSize)) {\n      if (draggedPos > prePaneRange + pane1MaxSize) {\n        validatedSize = prePaneRange + pane1MaxSize;\n      }\n    } else if (!isNullOrUndefined(pane2MaxSize)) {\n      if (draggedPos < nextPaneRange - pane2MaxSize) {\n        validatedSize = nextPaneRange - pane2MaxSize;\n      }\n    }\n\n    return validatedSize;\n  };\n\n  Splitter.prototype.onMouseUp = function (e) {\n    removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.unwireResizeEvents();\n    var eventArgs = {\n      event: e,\n      element: this.element,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n    };\n\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n    }\n\n    this.trigger('resizeStop', eventArgs);\n\n    if (this.enablePersistence) {\n      var paneValues = this.paneSettings;\n      paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n      paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n      this.setProperties({\n        'paneSettings': paneValues\n      }, true);\n    }\n  };\n\n  Splitter.prototype.panesDimension = function (index, child) {\n    var childCount = child.length;\n    var size;\n    parseInt(this.getHeight(this.element), 10);\n\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].size)) {\n        size = this.paneSettings[index].size;\n\n        if (index < childCount) {\n          setStyleAttribute(child[index], {\n            'flex-basis': size,\n            'order': index * 2\n          });\n\n          if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          } else if (!this.sizeFlag) {\n            child[index].style.flexBasis = null;\n          }\n\n          if (index === childCount - 1 && this.sizeFlag && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          }\n        }\n      } else {\n        this.sizeFlag = true;\n        setStyleAttribute(child[index], {\n          'order': index * 2\n        });\n      }\n    } else {\n      setStyleAttribute(child[index], {\n        'order': index * 2\n      });\n    }\n\n    this.paneOrder.push(index * 2);\n  };\n\n  Splitter.prototype.setTemplate = function (template, toElement) {\n    toElement.innerHTML = '';\n    template = typeof template === 'string' ? this.sanitizeHelper(template) : template;\n    this.templateCompile(toElement, template); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.templateCompile = function (ele, cnt) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n    var tempEle = this.createElement('div');\n    this.compileElement(tempEle, cnt, 'content');\n\n    if (tempEle.childNodes.length !== 0) {\n      [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n        ele.appendChild(childEle);\n      });\n    }\n  };\n\n  Splitter.prototype.compileElement = function (ele, val, prop) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n\n    if (typeof val === 'string') {\n      if (val[0] === '.' || val[0] === '#') {\n        var eleVal = document.querySelector(val);\n\n        if (!isNullOrUndefined(eleVal)) {\n          this.templateElement.push(eleVal);\n\n          if (eleVal.style.display === 'none') {\n            eleVal.style.removeProperty('display');\n          }\n\n          if (eleVal.getAttribute('style') === '') {\n            eleVal.removeAttribute('style');\n          }\n\n          ele.appendChild(eleVal);\n          return;\n        } else {\n          val = val.trim();\n        }\n      } else {\n        val = val.trim();\n      }\n    }\n\n    var templateFn;\n\n    if (!isNullOrUndefined(val.outerHTML)) {\n      templateFn = compile(val.outerHTML);\n    } else {\n      templateFn = compile(val);\n    }\n\n    var templateFUN;\n\n    if (!isNullOrUndefined(templateFn)) {\n      templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n    }\n\n    if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n      [].slice.call(templateFUN).forEach(function (el) {\n        ele.appendChild(el);\n      });\n    }\n  };\n\n  Splitter.prototype.paneCollapsible = function (pane, index) {\n    // eslint-disable-next-line\n    this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n  };\n\n  Splitter.prototype.createSplitPane = function (target) {\n    var childCount = target.children.length;\n\n    for (var i = 0; i < this.paneSettings.length; i++) {\n      if (childCount < this.paneSettings.length) {\n        var childElement = this.createElement('div');\n        this.element.appendChild(childElement);\n        childCount = childCount + 1;\n      }\n    }\n\n    childCount = target.children.length;\n    var child = [].slice.call(target.children);\n    this.sizeFlag = false;\n\n    if (childCount > 0) {\n      for (var i = 0; i < childCount; i++) {\n        // To accept only div and span element as pane\n        if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n          this.allPanes.push(child[i]);\n\n          if (this.orientation === 'Horizontal') {\n            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          } else {\n            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n            this.setTemplate(this.paneSettings[i].content, child[i]);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i])) {\n            this.paneCollapsible(child[i], i);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * expands corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.expand = function (index) {\n    this.collapsedOnchange(index);\n    this.updatePaneSettings(index, false);\n  };\n  /**\n   * collapses corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.collapse = function (index) {\n    this.isCollapsed(index);\n    this.updatePaneSettings(index, true);\n  };\n  /**\n   * Removes the control from the DOM and also removes all its related events.\n   *\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.destroy = function () {\n    if (!this.isDestroyed) {\n      _super.prototype.destroy.call(this);\n\n      EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n      this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n\n      while (this.element.attributes.length > 0) {\n        this.element.removeAttribute(this.element.attributes[0].name);\n      }\n\n      this.element.innerHTML = this.wrapper.innerHTML;\n\n      for (var i = 0; i < this.wrapper.attributes.length; i++) {\n        this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n      }\n\n      if (this.refreshing) {\n        addClass([this.element], ['e-control', 'e-lib', ROOT]);\n        this.allBars = [];\n        this.allPanes = [];\n      }\n\n      this.restoreElem(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      if (this.isReact) {\n        this.clearTemplate();\n      }\n    }\n  };\n\n  Splitter.prototype.restoreElem = function () {\n    if (this.templateElement.length > 0) {\n      for (var i = 0; i < this.templateElement.length; i++) {\n        this.templateElement[i].style.display = 'none';\n        document.body.appendChild(this.templateElement[i]);\n      }\n    }\n  };\n\n  Splitter.prototype.addPaneClass = function (pane) {\n    // eslint-disable-next-line\n    this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) : addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n    return pane;\n  };\n\n  Splitter.prototype.removePaneOrders = function (paneClass) {\n    var childNodes = this.element.childNodes;\n    var panes = [];\n\n    for (var i = 0; childNodes.length < 0; i++) {\n      if (childNodes[i].classList.contains(paneClass)) {\n        panes.push(childNodes[i]);\n      }\n    }\n\n    for (var i = 0; i < panes.length; i++) {\n      panes[i].style.removeProperty('order');\n    }\n  };\n\n  Splitter.prototype.setPaneOrder = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      this.panesDimension(i, this.allPanes);\n    }\n  };\n\n  Splitter.prototype.removeSeparator = function () {\n    for (var i = 0; i < this.allBars.length; i++) {\n      detach(this.allBars[i]);\n    }\n\n    this.allBars = [];\n  };\n\n  Splitter.prototype.updatePanes = function () {\n    this.setPaneOrder();\n    this.removeSeparator();\n    this.addSeparator(this.element);\n  };\n  /**\n   * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n   *\n   * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n   * @param { number } index - Specifies the index where the pane will be inserted.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.addPane = function (paneProperties, index) {\n    var newPane = this.createElement('div');\n    newPane = this.addPaneClass(newPane);\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var paneDetails = {\n      size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n      min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n      max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n      content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n      resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n      collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n      collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n      cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n    };\n    this.paneSettings.splice(index, 0, paneDetails);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n\n    if (this.orientation === 'Horizontal') {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n      this.removePaneOrders(SPLIT_H_PANE);\n    } else {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n      this.removePaneOrders(SPLIT_V_PANE);\n    }\n\n    this.allPanes.splice(index, 0, newPane);\n    this.updatePanes();\n    this.setTemplate(this.paneSettings[index].content, newPane);\n    this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n    this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n  };\n  /**\n   * Allows you to remove the specified pane dynamically by passing its index value.\n   *\n   * @param { number } index - Specifies the index value to remove the corresponding pane.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.removePane = function (index) {\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var elementClass = this.orientation === 'Horizontal' ? SPLIT_H_PANE : SPLIT_V_PANE;\n\n    if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n      return;\n    }\n\n    detach(this.element.querySelectorAll('.' + elementClass)[index]);\n    this.allPanes.splice(index, 1);\n    this.removePaneOrders(elementClass);\n    this.updatePanes();\n    this.paneSettings.splice(index, 1);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n\n    if (this.allPanes.length > 0) {\n      this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    }\n  };\n\n  __decorate([Property('100%')], Splitter.prototype, \"height\", void 0);\n\n  __decorate([Property(false)], Splitter.prototype, \"enableReversePanes\", void 0);\n\n  __decorate([Property('100%')], Splitter.prototype, \"width\", void 0);\n\n  __decorate([Property(false)], Splitter.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Collection([], PaneProperties)], Splitter.prototype, \"paneSettings\", void 0);\n\n  __decorate([Property('Horizontal')], Splitter.prototype, \"orientation\", void 0);\n\n  __decorate([Property('')], Splitter.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(true)], Splitter.prototype, \"enabled\", void 0);\n\n  __decorate([Property(true)], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property(null)], Splitter.prototype, \"separatorSize\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"created\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeCollapse\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeExpand\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"collapsed\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"expanded\", void 0);\n\n  Splitter = __decorate([NotifyPropertyChanges], Splitter);\n  return Splitter;\n}(Component);\n\nexport { Splitter };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","setStyleAttribute","ChildProperty","compile","NotifyPropertyChanges","addClass","Collection","isNullOrUndefined","Event","EventHandler","selectAll","removeClass","select","Browser","detach","formatUnit","SanitizeHtmlHelper","extend","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","SPLIT_TOUCH","DISABLED","RTL","E_ICONS","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","BAR_SIZE_DEFAULT","PaneProperties","_super","apply","Splitter","options","element","call","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","prop","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","allPanes","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","isCollapsed","collapsedOnchange","newValSize","updatePaneSize","destroyPaneSettings","allBars","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","style","flexBasis","flexPaneIndexes","staticPaneWidth","flexCount","size","innerText","offsetWidth","offsetHeight","flexPaneWidth","border","avgDiffWidth","add","initializeValues","paneOrder","separatorOrder","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","name","info","css","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","collapse","expand","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","beforeSanitize","beforeEvent","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","push","getBoundingClientRect","className","split","hideResizer","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","updateIsCollapsed","lastBarArrow","targetEle","lastBarIndex","click","_this","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","m","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","removeEventListener","staticPaneCount","updateSplitterSize","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","prevbar","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","percentage","convertedValue","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","window","scrollX","top","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","cursorMoved","getBorder","clientWidth","clientHeight","validateDraggedPosition","separatorNewPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxRange","paneMaxDimensions","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","blazorContain","tempEle","compileElement","childEle","val","eleVal","display","removeProperty","trim","templateFn","outerHTML","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-layouts/src/splitter/splitter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.initializeValues = function () {\n        this.allPanes = [];\n        this.paneOrder = [];\n        this.separatorOrder = [];\n        this.allBars = [];\n        this.previousCoordinates = {};\n        this.currentCoordinates = {};\n        this.updatePrePaneInPercentage = false;\n        this.updateNextPaneInPercentage = false;\n        this.panesDimensions = [];\n        this.border = 0;\n        this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        this.iconsDelay = 300;\n        this.templateElement = [];\n        this.collapseFlag = false;\n        this.expandFlag = true;\n    };\n    Splitter.prototype.preRender = function () {\n        this.initializeValues();\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left + window.scrollX :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft + window.scrollX :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}