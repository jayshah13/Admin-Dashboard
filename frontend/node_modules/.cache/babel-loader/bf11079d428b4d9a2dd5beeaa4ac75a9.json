{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable jsdoc/require-param */\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DoubleRange } from '../utils/double-range';\nimport { appendChildElement, redrawElement, pathAnimation, valueToCoefficient, getVisiblePoints } from '../../common/utils/helper';\nimport { getAnimationFunction, getPoint, getMinPointsDelta } from '../../common/utils/helper';\nimport { PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { pointRender } from '../../common/model/constants';\n/**\n * Column Series Base\n */\n\nvar ColumnBase =\n/** @class */\nfunction () {\n  function ColumnBase() {}\n  /**\n   * To get the position of the column series.\n   *\n   * @returns {DoubleRange} doubleRange\n   * @private\n   */\n\n\n  ColumnBase.prototype.getSideBySideInfo = function (series) {\n    if (series.chart.enableSideBySidePlacement && !series.position) {\n      this.getSideBySidePositions(series);\n    }\n\n    if (series.columnWidthInPixel) {\n      return new DoubleRange(0, 0);\n    }\n\n    var position = series.type === 'Histogram' || !series.chart.enableSideBySidePlacement ? 0 : series.position;\n    var rectCount = series.type === 'Histogram' || !series.chart.enableSideBySidePlacement ? 1 : series.rectCount;\n    series.isRectSeries = true;\n    var visibleSeries = series.chart.visibleSeries;\n    var seriesSpacing = series.chart.enableSideBySidePlacement ? series.columnSpacing : 0; // Column Spacing\n\n    var pointSpacing = series.columnWidth === null || isNaN(+series.columnWidth) ? series.type === 'Histogram' ? 1 : 0.7 : series.columnWidth; // Column width\n\n    var minimumPointDelta = getMinPointsDelta(series.xAxis, visibleSeries);\n    var width = minimumPointDelta * pointSpacing;\n    var radius;\n    var location = position / rectCount - 0.5;\n    var doubleRange = new DoubleRange(location, location + 1 / rectCount);\n\n    if (!(isNaN(doubleRange.start) || isNaN(doubleRange.end))) {\n      if (series.groupName && series.type.indexOf('Stacking') === -1) {\n        var mainColumnWidth_1 = 0.7;\n        series.chart.series.filter(function (series) {\n          if (series.columnWidth > mainColumnWidth_1) {\n            mainColumnWidth_1 = series.columnWidth;\n          }\n        });\n        var mainWidth = minimumPointDelta * mainColumnWidth_1;\n        var mainDoubleRange = new DoubleRange(doubleRange.start * mainWidth, doubleRange.end * mainWidth);\n        var difference = (mainDoubleRange.delta - (doubleRange.end * width - doubleRange.start * width)) / 2;\n        doubleRange = new DoubleRange(mainDoubleRange.start + difference, mainDoubleRange.end - difference);\n      } else {\n        doubleRange = new DoubleRange(doubleRange.start * width, doubleRange.end * width);\n      }\n\n      radius = seriesSpacing * doubleRange.delta;\n      doubleRange = new DoubleRange(doubleRange.start + radius / 2, doubleRange.end - radius / 2);\n    }\n\n    return doubleRange;\n  };\n  /**\n   * To get the rect values.\n   *\n   * @returns {Rect} rect region values\n   * @private\n   */\n\n\n  ColumnBase.prototype.getRectangle = function (x1, y1, x2, y2, series) {\n    var point1 = getPoint(x1, y1, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n    var point2 = getPoint(x2, y2, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n    return new Rect(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y), Math.abs(point2.x - point1.x), Math.abs(point2.y - point1.y));\n  };\n  /**\n   * To get the position of each series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.getSideBySidePositions = function (series) {\n    var chart = series.chart;\n\n    for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n      var columnItem = _a[_i];\n\n      for (var _b = 0, _c = chart.rows; _b < _c.length; _b++) {\n        var item = _c[_b];\n        this.findRectPosition(series.findSeriesCollection(columnItem, item, false));\n      }\n    }\n  };\n\n  ColumnBase.prototype.findRectPosition = function (seriesCollection) {\n    var groupingValues = [];\n    var vSeries = {\n      rectCount: 0,\n      position: null\n    };\n\n    for (var i = 0; i < seriesCollection.length; i++) {\n      var value = seriesCollection[i];\n\n      if (value.type.indexOf('Stacking') !== -1 || value.groupName !== '') {\n        var groupName = value.type.indexOf('Stacking') !== -1 ? value.stackingGroup : value.type + value.groupName;\n\n        if (groupName) {\n          if (groupingValues[groupName] === undefined) {\n            value.position = vSeries.rectCount;\n            groupingValues[groupName] = vSeries.rectCount++;\n          } else {\n            value.position = groupingValues[groupName];\n          }\n        } else {\n          if (vSeries.position === null) {\n            value.position = vSeries.rectCount;\n            vSeries.position = vSeries.rectCount++;\n          } else {\n            value.position = vSeries.position;\n          }\n        }\n      } else {\n        value.position = vSeries.rectCount++;\n      }\n    }\n\n    for (var i = 0; i < seriesCollection.length; i++) {\n      var value = seriesCollection[i];\n      value.rectCount = vSeries.rectCount;\n    }\n  };\n  /**\n   * Updates the symbollocation for points\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.updateSymbolLocation = function (point, rect, series) {\n    if (!series.chart.requireInvertedAxis) {\n      this.updateXRegion(point, rect, series);\n    } else {\n      this.updateYRegion(point, rect, series);\n    }\n\n    if (series.type === 'Histogram') {\n      point.minimum = +point.x - series.histogramValues.binWidth / 2;\n      point.maximum = +point.x + series.histogramValues.binWidth / 2;\n    }\n  };\n  /**\n   * Update the region for the point.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.updateXRegion = function (point, rect, series) {\n    point.symbolLocations.push({\n      x: rect.x + rect.width / 2,\n      y: series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 || point.yValue >= 0 === !series.yAxis.isAxisInverse ? rect.y : rect.y + rect.height\n    });\n    this.getRegion(point, rect, series);\n\n    if (series.type === 'RangeColumn') {\n      point.symbolLocations.push({\n        x: rect.x + rect.width / 2,\n        y: rect.y + rect.height\n      });\n    }\n  };\n  /**\n   * Update the region for the point in bar series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.updateYRegion = function (point, rect, series) {\n    point.symbolLocations.push({\n      x: series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 || point.yValue >= 0 === !series.yAxis.isAxisInverse ? rect.x + rect.width : rect.x,\n      y: rect.y + rect.height / 2\n    });\n    this.getRegion(point, rect, series);\n\n    if (series.type === 'RangeColumn') {\n      point.symbolLocations.push({\n        x: rect.x,\n        y: rect.y + rect.height / 2\n      });\n    }\n  };\n  /**\n   * To render the marker for the series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.renderMarker = function (series) {\n    if (series.marker && series.marker.visible) {\n      series.chart.markerRender.render(series);\n    }\n  };\n  /**\n   * To get the marker region when Y value is 0\n   *\n   * @param {Points} point point\n   * @param {rect} rect rect\n   * @param {Series} series series\n   */\n\n\n  ColumnBase.prototype.getRegion = function (point, rect, series) {\n    if (point.y === 0) {\n      var markerWidth = series.marker && series.marker.width ? series.marker.width : 0;\n      var markerHeight = series.marker && series.marker.height ? series.marker.height : 0;\n      point.regions.push(new Rect(point.symbolLocations[0].x - markerWidth, point.symbolLocations[0].y - markerHeight, 2 * markerWidth, 2 * markerHeight));\n    } else {\n      point.regions.push(rect);\n    }\n  };\n  /**\n   * To trigger the point rendering event.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.triggerEvent = function (series, point, fill, border) {\n    var argsData = {\n      cancel: false,\n      name: pointRender,\n      series: series,\n      point: point,\n      fill: series.setPointColor(point, fill),\n      border: series.setBorderColor(point, border)\n    };\n    series.chart.trigger(pointRender, argsData);\n    point.color = argsData.fill;\n    return argsData;\n  };\n  /**\n   * To draw the rectangle for points.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.drawRectangle = function (series, point, rect, argsData) {\n    var chart = series.chart;\n    var check = chart.requireInvertedAxis ? rect.height : rect.width;\n\n    if (check <= 0) {\n      return null;\n    }\n\n    var direction;\n\n    if (point.y === 0) {\n      // For 0 values corner radius will not calculate\n      direction = this.calculateRoundedRectPath(rect, 0, 0, 0, 0);\n    } else {\n      direction = this.calculateRoundedRectPath(rect, series.cornerRadius.topLeft, series.cornerRadius.topRight, series.cornerRadius.bottomLeft, series.cornerRadius.bottomRight);\n    }\n\n    var name = series.category === 'Indicator' ? chart.element.id + '_Indicator_' + series.index + '_' + series.name + '_Point_' + point.index : chart.element.id + '_Series_' + series.index + '_Point_' + point.index;\n    var previousElement = redrawElement(chart.redraw, name);\n    var previousDirection = previousElement ? previousElement.getAttribute('d') : '';\n    var options = new PathOption(name, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n    var element = chart.renderer.drawPath(options, new Int32Array([series.clipRect.x, series.clipRect.y]));\n\n    switch (series.seriesType) {\n      case 'XY':\n        element.setAttribute('aria-label', point.x.toString() + ':' + point.yValue.toString());\n        break;\n\n      case 'HighLow':\n        element.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString() + ':' + point.low.toString());\n        break;\n    }\n\n    appendChildElement(series.chart.enableCanvas, series.seriesElement, element, chart.redraw);\n\n    if (!series.chart.enableCanvas) {\n      pathAnimation(element, direction, chart.redraw, previousDirection, chart.duration);\n    }\n  };\n  /**\n   * To animate the series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.animate = function (series) {\n    var rectElements = series.seriesElement.childNodes;\n    var count = series.category === 'Indicator' ? 0 : 1;\n    var visiblePoints = getVisiblePoints(series);\n\n    for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n      var point = visiblePoints_1[_i];\n\n      if (!point.symbolLocations.length && !(series.type === 'BoxAndWhisker' && point.regions.length)) {\n        continue;\n      }\n\n      this.animateRect(rectElements[count], series, point);\n      count++;\n    }\n  };\n  /**\n   * To animate the series.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ColumnBase.prototype.animateRect = function (element, series, point) {\n    var option = series.animation;\n    var duration = series.chart.animated ? series.chart.duration : option.duration;\n    var effect = getAnimationFunction('Linear');\n    var isPlot = point.yValue < 0;\n    var x;\n    var y;\n    var elementHeight = +point.regions[0].height;\n    var elementWidth = +point.regions[0].width;\n    var centerX;\n    var centerY;\n\n    if (!series.chart.requireInvertedAxis) {\n      x = +point.regions[0].x;\n\n      if (series.type.indexOf('Stacking') > -1) {\n        y = (1 - valueToCoefficient(0, series.yAxis)) * series.yAxis.rect.height;\n        centerX = x;\n        centerY = y;\n      } else {\n        y = +point.regions[0].y;\n        centerY = series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1 ? y + elementHeight / 2 : isPlot !== series.yAxis.isAxisInverse ? y : y + elementHeight;\n        centerX = isPlot ? x : x + elementWidth;\n      }\n    } else {\n      y = +point.regions[0].y;\n\n      if (series.type.indexOf('Stacking') > -1) {\n        x = valueToCoefficient(0, series.yAxis) * series.yAxis.rect.width;\n        centerX = x;\n        centerY = y;\n      } else {\n        x = +point.regions[0].x;\n        centerY = isPlot ? y : y + elementHeight;\n        centerX = series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1 ? x + elementWidth / 2 : isPlot !== series.yAxis.isAxisInverse ? x + elementWidth : x;\n      }\n    }\n\n    var value;\n\n    if (!isNullOrUndefined(element)) {\n      element.style.visibility = 'hidden';\n      new Animation({}).animate(element, {\n        duration: duration,\n        delay: option.delay,\n        progress: function (args) {\n          if (args.timeStamp >= args.delay) {\n            element.style.visibility = 'visible';\n\n            if (!series.chart.requireInvertedAxis) {\n              elementHeight = elementHeight ? elementHeight : 1;\n              value = effect(args.timeStamp - args.delay, 0, elementHeight, args.duration);\n              element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY + ') scale(1,' + value / elementHeight + ') translate(' + -centerX + ' ' + -centerY + ')');\n            } else {\n              elementWidth = elementWidth ? elementWidth : 1;\n              value = effect(args.timeStamp - args.delay, 0, elementWidth, args.duration);\n              element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY + ') scale(' + value / elementWidth + ', 1) translate(' + -centerX + ' ' + -centerY + ')');\n            }\n          }\n        },\n        end: function () {\n          element.setAttribute('transform', 'translate(0,0)');\n          var seriesElement = series.seriesElement;\n\n          if (element === seriesElement.lastElementChild || point.index === series.points.length - 1 || series.type === 'Waterfall' && element === seriesElement.children[seriesElement.childElementCount - 2]) {\n            series.chart.trigger('animationComplete', {\n              series: series.chart.isBlazor ? {} : series\n            });\n\n            if (series.type === 'Waterfall') {\n              var rectElements = seriesElement.childNodes;\n\n              for (var i = 0; i < rectElements.length; i++) {\n                if (rectElements[i].id.indexOf('Connector') !== -1) {\n                  rectElements[i].style.visibility = 'visible';\n                  rectElements[i].setAttribute('transform', 'translate(0,0)');\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  };\n  /**\n   * To get rounded rect path direction\n   */\n\n\n  ColumnBase.prototype.calculateRoundedRectPath = function (rect, topLeft, topRight, bottomLeft, bottomRight) {\n    return 'M' + ' ' + rect.x + ' ' + (topLeft + rect.y) + ' Q ' + rect.x + ' ' + rect.y + ' ' + (rect.x + topLeft) + ' ' + rect.y + ' ' + 'L' + ' ' + (rect.x + rect.width - topRight) + ' ' + rect.y + ' Q ' + (rect.x + rect.width) + ' ' + rect.y + ' ' + (rect.x + rect.width) + ' ' + (rect.y + topRight) + ' ' + 'L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height - bottomRight) + ' Q ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' ' + (rect.x + rect.width - bottomRight) + ' ' + (rect.y + rect.height) + ' ' + 'L ' + (rect.x + bottomLeft) + ' ' + (rect.y + rect.height) + ' Q ' + rect.x + ' ' + (rect.y + rect.height) + ' ' + rect.x + ' ' + (rect.y + rect.height - bottomLeft) + ' ' + 'L' + ' ' + rect.x + ' ' + (topLeft + rect.y) + ' ' + 'Z';\n  };\n\n  return ColumnBase;\n}();\n\nexport { ColumnBase };","map":{"version":3,"names":["Animation","isNullOrUndefined","DoubleRange","appendChildElement","redrawElement","pathAnimation","valueToCoefficient","getVisiblePoints","getAnimationFunction","getPoint","getMinPointsDelta","PathOption","Rect","pointRender","ColumnBase","prototype","getSideBySideInfo","series","chart","enableSideBySidePlacement","position","getSideBySidePositions","columnWidthInPixel","type","rectCount","isRectSeries","visibleSeries","seriesSpacing","columnSpacing","pointSpacing","columnWidth","isNaN","minimumPointDelta","xAxis","width","radius","location","doubleRange","start","end","groupName","indexOf","mainColumnWidth_1","filter","mainWidth","mainDoubleRange","difference","delta","getRectangle","x1","y1","x2","y2","point1","yAxis","requireInvertedAxis","point2","Math","min","x","y","abs","_i","_a","columns","length","columnItem","_b","_c","rows","item","findRectPosition","findSeriesCollection","seriesCollection","groupingValues","vSeries","i","value","stackingGroup","undefined","updateSymbolLocation","point","rect","updateXRegion","updateYRegion","minimum","histogramValues","binWidth","maximum","symbolLocations","push","seriesType","yValue","isAxisInverse","height","getRegion","renderMarker","marker","visible","markerRender","render","markerWidth","markerHeight","regions","triggerEvent","fill","border","argsData","cancel","name","setPointColor","setBorderColor","trigger","color","drawRectangle","check","direction","calculateRoundedRectPath","cornerRadius","topLeft","topRight","bottomLeft","bottomRight","category","element","id","index","previousElement","redraw","previousDirection","getAttribute","options","opacity","dashArray","renderer","drawPath","Int32Array","clipRect","setAttribute","toString","high","low","enableCanvas","seriesElement","duration","animate","rectElements","childNodes","count","visiblePoints","visiblePoints_1","animateRect","option","animation","animated","effect","isPlot","elementHeight","elementWidth","centerX","centerY","style","visibility","delay","progress","args","timeStamp","lastElementChild","points","children","childElementCount","isBlazor"],"sources":["C:/Users/shahj/OneDrive/Documents/GitHub/Multifunctional-React-Dashboard/node_modules/@syncfusion/ej2-charts/src/chart/series/column-base.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable jsdoc/require-param */\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DoubleRange } from '../utils/double-range';\nimport { appendChildElement, redrawElement, pathAnimation, valueToCoefficient, getVisiblePoints } from '../../common/utils/helper';\nimport { getAnimationFunction, getPoint, getMinPointsDelta } from '../../common/utils/helper';\nimport { PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { pointRender } from '../../common/model/constants';\n/**\n * Column Series Base\n */\nvar ColumnBase = /** @class */ (function () {\n    function ColumnBase() {\n    }\n    /**\n     * To get the position of the column series.\n     *\n     * @returns {DoubleRange} doubleRange\n     * @private\n     */\n    ColumnBase.prototype.getSideBySideInfo = function (series) {\n        if (series.chart.enableSideBySidePlacement && !series.position) {\n            this.getSideBySidePositions(series);\n        }\n        if (series.columnWidthInPixel) {\n            return new DoubleRange(0, 0);\n        }\n        var position = series.type === 'Histogram' || !series.chart.enableSideBySidePlacement ? 0 : series.position;\n        var rectCount = series.type === 'Histogram' || !series.chart.enableSideBySidePlacement ? 1 : series.rectCount;\n        series.isRectSeries = true;\n        var visibleSeries = series.chart.visibleSeries;\n        var seriesSpacing = series.chart.enableSideBySidePlacement ? series.columnSpacing : 0; // Column Spacing\n        var pointSpacing = (series.columnWidth === null || isNaN(+series.columnWidth)) ? ((series.type === 'Histogram') ? 1 : 0.7) :\n            series.columnWidth; // Column width\n        var minimumPointDelta = getMinPointsDelta(series.xAxis, visibleSeries);\n        var width = minimumPointDelta * pointSpacing;\n        var radius;\n        var location = (position) / rectCount - 0.5;\n        var doubleRange = new DoubleRange(location, location + (1 / rectCount));\n        if (!(isNaN(doubleRange.start) || isNaN(doubleRange.end))) {\n            if (series.groupName && series.type.indexOf('Stacking') === -1) {\n                var mainColumnWidth_1 = 0.7;\n                series.chart.series.filter(function (series) { if (series.columnWidth > mainColumnWidth_1) {\n                    mainColumnWidth_1 = series.columnWidth;\n                } });\n                var mainWidth = minimumPointDelta * mainColumnWidth_1;\n                var mainDoubleRange = new DoubleRange(doubleRange.start * mainWidth, doubleRange.end * mainWidth);\n                var difference = ((mainDoubleRange.delta) - (doubleRange.end * width - doubleRange.start * width)) / 2;\n                doubleRange = new DoubleRange(mainDoubleRange.start + difference, mainDoubleRange.end - difference);\n            }\n            else {\n                doubleRange = new DoubleRange(doubleRange.start * width, doubleRange.end * width);\n            }\n            radius = seriesSpacing * doubleRange.delta;\n            doubleRange = new DoubleRange(doubleRange.start + radius / 2, doubleRange.end - radius / 2);\n        }\n        return doubleRange;\n    };\n    /**\n     * To get the rect values.\n     *\n     * @returns {Rect} rect region values\n     * @private\n     */\n    ColumnBase.prototype.getRectangle = function (x1, y1, x2, y2, series) {\n        var point1 = getPoint(x1, y1, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        var point2 = getPoint(x2, y2, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        return new Rect(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y), Math.abs(point2.x - point1.x), Math.abs(point2.y - point1.y));\n    };\n    /**\n     * To get the position of each series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.getSideBySidePositions = function (series) {\n        var chart = series.chart;\n        for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n            var columnItem = _a[_i];\n            for (var _b = 0, _c = chart.rows; _b < _c.length; _b++) {\n                var item = _c[_b];\n                this.findRectPosition(series.findSeriesCollection(columnItem, item, false));\n            }\n        }\n    };\n    ColumnBase.prototype.findRectPosition = function (seriesCollection) {\n        var groupingValues = [];\n        var vSeries = { rectCount: 0, position: null };\n        for (var i = 0; i < seriesCollection.length; i++) {\n            var value = seriesCollection[i];\n            if (value.type.indexOf('Stacking') !== -1 || value.groupName !== '') {\n                var groupName = value.type.indexOf('Stacking') !== -1 ? value.stackingGroup : value.type + value.groupName;\n                if (groupName) {\n                    if (groupingValues[groupName] === undefined) {\n                        value.position = vSeries.rectCount;\n                        groupingValues[groupName] = vSeries.rectCount++;\n                    }\n                    else {\n                        value.position = groupingValues[groupName];\n                    }\n                }\n                else {\n                    if (vSeries.position === null) {\n                        value.position = vSeries.rectCount;\n                        vSeries.position = vSeries.rectCount++;\n                    }\n                    else {\n                        value.position = vSeries.position;\n                    }\n                }\n            }\n            else {\n                value.position = vSeries.rectCount++;\n            }\n        }\n        for (var i = 0; i < seriesCollection.length; i++) {\n            var value = seriesCollection[i];\n            value.rectCount = vSeries.rectCount;\n        }\n    };\n    /**\n     * Updates the symbollocation for points\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.updateSymbolLocation = function (point, rect, series) {\n        if (!series.chart.requireInvertedAxis) {\n            this.updateXRegion(point, rect, series);\n        }\n        else {\n            this.updateYRegion(point, rect, series);\n        }\n        if (series.type === 'Histogram') {\n            point.minimum = +point.x - series.histogramValues.binWidth / 2;\n            point.maximum = +point.x + series.histogramValues.binWidth / 2;\n        }\n    };\n    /**\n     * Update the region for the point.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.updateXRegion = function (point, rect, series) {\n        point.symbolLocations.push({\n            x: rect.x + (rect.width) / 2,\n            y: (series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 ||\n                (point.yValue >= 0 === !series.yAxis.isAxisInverse)) ? rect.y : (rect.y + rect.height)\n        });\n        this.getRegion(point, rect, series);\n        if (series.type === 'RangeColumn') {\n            point.symbolLocations.push({\n                x: rect.x + (rect.width) / 2,\n                y: rect.y + rect.height\n            });\n        }\n    };\n    /**\n     * Update the region for the point in bar series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.updateYRegion = function (point, rect, series) {\n        point.symbolLocations.push({\n            x: (series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 ||\n                (point.yValue >= 0 === !series.yAxis.isAxisInverse)) ? rect.x + rect.width : rect.x,\n            y: rect.y + rect.height / 2\n        });\n        this.getRegion(point, rect, series);\n        if (series.type === 'RangeColumn') {\n            point.symbolLocations.push({\n                x: rect.x,\n                y: rect.y + rect.height / 2\n            });\n        }\n    };\n    /**\n     * To render the marker for the series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.renderMarker = function (series) {\n        if (series.marker && series.marker.visible) {\n            series.chart.markerRender.render(series);\n        }\n    };\n    /**\n     * To get the marker region when Y value is 0\n     *\n     * @param {Points} point point\n     * @param {rect} rect rect\n     * @param {Series} series series\n     */\n    ColumnBase.prototype.getRegion = function (point, rect, series) {\n        if (point.y === 0) {\n            var markerWidth = (series.marker && series.marker.width) ? series.marker.width : 0;\n            var markerHeight = (series.marker && series.marker.height) ? series.marker.height : 0;\n            point.regions.push(new Rect(point.symbolLocations[0].x - markerWidth, point.symbolLocations[0].y - markerHeight, 2 * markerWidth, 2 * markerHeight));\n        }\n        else {\n            point.regions.push(rect);\n        }\n    };\n    /**\n     * To trigger the point rendering event.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.triggerEvent = function (series, point, fill, border) {\n        var argsData = {\n            cancel: false, name: pointRender, series: series, point: point,\n            fill: series.setPointColor(point, fill),\n            border: series.setBorderColor(point, border)\n        };\n        series.chart.trigger(pointRender, argsData);\n        point.color = argsData.fill;\n        return argsData;\n    };\n    /**\n     * To draw the rectangle for points.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.drawRectangle = function (series, point, rect, argsData) {\n        var chart = series.chart;\n        var check = chart.requireInvertedAxis ? rect.height : rect.width;\n        if (check <= 0) {\n            return null;\n        }\n        var direction;\n        if (point.y === 0) {\n            // For 0 values corner radius will not calculate\n            direction = this.calculateRoundedRectPath(rect, 0, 0, 0, 0);\n        }\n        else {\n            direction = this.calculateRoundedRectPath(rect, series.cornerRadius.topLeft, series.cornerRadius.topRight, series.cornerRadius.bottomLeft, series.cornerRadius.bottomRight);\n        }\n        var name = series.category === 'Indicator' ? chart.element.id + '_Indicator_' + series.index + '_' + series.name +\n            '_Point_' + point.index : chart.element.id + '_Series_' + series.index + '_Point_' + point.index;\n        var previousElement = redrawElement(chart.redraw, name);\n        var previousDirection = previousElement ? previousElement.getAttribute('d') : '';\n        var options = new PathOption(name, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n        var element = chart.renderer.drawPath(options, new Int32Array([series.clipRect.x, series.clipRect.y]));\n        switch (series.seriesType) {\n            case 'XY':\n                element.setAttribute('aria-label', point.x.toString() + ':' + point.yValue.toString());\n                break;\n            case 'HighLow':\n                element.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString() + ':' + point.low.toString());\n                break;\n        }\n        appendChildElement(series.chart.enableCanvas, series.seriesElement, element, chart.redraw);\n        if (!series.chart.enableCanvas) {\n            pathAnimation(element, direction, chart.redraw, previousDirection, chart.duration);\n        }\n    };\n    /**\n     * To animate the series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.animate = function (series) {\n        var rectElements = series.seriesElement.childNodes;\n        var count = series.category === 'Indicator' ? 0 : 1;\n        var visiblePoints = getVisiblePoints(series);\n        for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n            var point = visiblePoints_1[_i];\n            if (!point.symbolLocations.length && !(series.type === 'BoxAndWhisker' && point.regions.length)) {\n                continue;\n            }\n            this.animateRect(rectElements[count], series, point);\n            count++;\n        }\n    };\n    /**\n     * To animate the series.\n     *\n     * @returns {void}\n     * @private\n     */\n    ColumnBase.prototype.animateRect = function (element, series, point) {\n        var option = series.animation;\n        var duration = series.chart.animated ? series.chart.duration : option.duration;\n        var effect = getAnimationFunction('Linear');\n        var isPlot = point.yValue < 0;\n        var x;\n        var y;\n        var elementHeight = +point.regions[0].height;\n        var elementWidth = +point.regions[0].width;\n        var centerX;\n        var centerY;\n        if (!series.chart.requireInvertedAxis) {\n            x = +point.regions[0].x;\n            if (series.type.indexOf('Stacking') > -1) {\n                y = (1 - valueToCoefficient(0, series.yAxis)) * (series.yAxis.rect.height);\n                centerX = x;\n                centerY = y;\n            }\n            else {\n                y = +point.regions[0].y;\n                centerY = (series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1) ? y + elementHeight / 2 :\n                    (isPlot !== series.yAxis.isAxisInverse) ? y : y + elementHeight;\n                centerX = isPlot ? x : x + elementWidth;\n            }\n        }\n        else {\n            y = +point.regions[0].y;\n            if (series.type.indexOf('Stacking') > -1) {\n                x = (valueToCoefficient(0, series.yAxis)) * series.yAxis.rect.width;\n                centerX = x;\n                centerY = y;\n            }\n            else {\n                x = +point.regions[0].x;\n                centerY = isPlot ? y : y + elementHeight;\n                centerX = (series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1) ? x + elementWidth / 2 :\n                    (isPlot !== series.yAxis.isAxisInverse) ? x + elementWidth : x;\n            }\n        }\n        var value;\n        if (!isNullOrUndefined(element)) {\n            element.style.visibility = 'hidden';\n            new Animation({}).animate(element, {\n                duration: duration,\n                delay: option.delay,\n                progress: function (args) {\n                    if (args.timeStamp >= args.delay) {\n                        element.style.visibility = 'visible';\n                        if (!series.chart.requireInvertedAxis) {\n                            elementHeight = elementHeight ? elementHeight : 1;\n                            value = effect(args.timeStamp - args.delay, 0, elementHeight, args.duration);\n                            element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY +\n                                ') scale(1,' + (value / elementHeight) + ') translate(' + (-centerX) + ' ' + (-centerY) + ')');\n                        }\n                        else {\n                            elementWidth = elementWidth ? elementWidth : 1;\n                            value = effect(args.timeStamp - args.delay, 0, elementWidth, args.duration);\n                            element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY +\n                                ') scale(' + (value / elementWidth) + ', 1) translate(' + (-centerX) + ' ' + (-centerY) + ')');\n                        }\n                    }\n                },\n                end: function () {\n                    element.setAttribute('transform', 'translate(0,0)');\n                    var seriesElement = series.seriesElement;\n                    if (element === seriesElement.lastElementChild || point.index === series.points.length - 1 ||\n                        (series.type === 'Waterfall' && element === seriesElement.children[seriesElement.childElementCount - 2])) {\n                        series.chart.trigger('animationComplete', { series: series.chart.isBlazor ? {} : series });\n                        if (series.type === 'Waterfall') {\n                            var rectElements = seriesElement.childNodes;\n                            for (var i = 0; i < rectElements.length; i++) {\n                                if (rectElements[i].id.indexOf('Connector') !== -1) {\n                                    rectElements[i].style.visibility = 'visible';\n                                    rectElements[i].setAttribute('transform', 'translate(0,0)');\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * To get rounded rect path direction\n     */\n    ColumnBase.prototype.calculateRoundedRectPath = function (rect, topLeft, topRight, bottomLeft, bottomRight) {\n        return 'M' + ' ' + rect.x + ' ' + (topLeft + rect.y) +\n            ' Q ' + rect.x + ' ' + rect.y + ' ' + (rect.x + topLeft) + ' ' +\n            rect.y + ' ' + 'L' + ' ' + (rect.x + rect.width - topRight) + ' ' + rect.y +\n            ' Q ' + (rect.x + rect.width) + ' ' + rect.y + ' ' +\n            (rect.x + rect.width) + ' ' + (rect.y + topRight) + ' ' + 'L ' +\n            (rect.x + rect.width) + ' ' + (rect.y + rect.height - bottomRight)\n            + ' Q ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' ' + (rect.x + rect.width - bottomRight) + ' ' +\n            (rect.y + rect.height) + ' ' + 'L ' + (rect.x + bottomLeft) + ' ' + (rect.y + rect.height) + ' Q ' + rect.x + ' ' +\n            (rect.y + rect.height) + ' ' + rect.x + ' ' + (rect.y + rect.height - bottomLeft) + ' ' + 'L' + ' ' + rect.x + ' ' +\n            (topLeft + rect.y) + ' ' + 'Z';\n    };\n    return ColumnBase;\n}());\nexport { ColumnBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}